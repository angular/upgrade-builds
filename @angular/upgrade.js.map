{"version":3,"file":"upgrade.js","sources":["../../../../packages/upgrade/src/dynamic/upgrade_adapter.ts","../../../../packages/upgrade/src/dynamic/upgrade_ng1_adapter.ts","../../../../packages/upgrade/src/dynamic/ng_content_selector_helper.ts","../../../../packages/upgrade/src/common/downgrade_injectable.ts","../../../../packages/upgrade/src/common/downgrade_component.ts","../../../../packages/upgrade/src/common/downgrade_component_adapter.ts","../../../../packages/upgrade/src/common/util.ts","../../../../packages/upgrade/src/common/ng_content_selector_helper.ts","../../../../packages/upgrade/src/common/component_info.ts","../../../../packages/upgrade/src/common/compiler_helpers/createElementCssSelector.ts","../../../../packages/upgrade/src/common/compiler_helpers/selector.ts","../../../../packages/upgrade/src/common/compiler_helpers/ml_parser/html_tags.ts","../../../../packages/upgrade/src/common/compiler_helpers/ml_parser/tags.ts","../../../../packages/upgrade/src/common/constants.ts","../../../../packages/upgrade/src/common/angular1.ts","../../../../packages/upgrade/src/common/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DirectiveResolver} from '@angular/compiler';\nimport {Compiler, CompilerOptions, Directive, Injector, NgModule, NgModuleRef, NgZone, Provider, Testability, Type} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport * as angular from '../common/angular1';\nimport {ComponentInfo} from '../common/component_info';\nimport {$$TESTABILITY, $COMPILE, $INJECTOR, $ROOT_SCOPE, COMPILER_KEY, INJECTOR_KEY, NG_ZONE_KEY} from '../common/constants';\nimport {downgradeComponent} from '../common/downgrade_component';\nimport {downgradeInjectable} from '../common/downgrade_injectable';\nimport {NgContentSelectorHelper} from '../common/ng_content_selector_helper';\nimport {Deferred, controllerKey, onError} from '../common/util';\n\nimport {DynamicNgContentSelectorHelper} from './ng_content_selector_helper';\nimport {UpgradeNg1ComponentAdapterBuilder} from './upgrade_ng1_adapter';\n\nlet /** @type {?} */ upgradeCount: number = 0;\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n * \n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n * \n * ## Mental Model\n * \n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n * \n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n * \n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * \n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * \n * ```\n * \n * \\@stable\n */\nexport class UpgradeAdapter {\nprivate idPrefix: string = `NG2_UPGRADE_${upgradeCount++}_`;\nprivate directiveResolver: DirectiveResolver = new DirectiveResolver();\nprivate downgradedComponents: Type<any>[] = [];\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n */\nprivate ng1ComponentsToBeUpgraded: {[name: string]: UpgradeNg1ComponentAdapterBuilder} = {};\nprivate upgradedProviders: Provider[] = [];\nprivate ngZone: NgZone;\nprivate ng1Module: angular.IModule;\nprivate moduleRef: NgModuleRef<any> = null;\nprivate ng2BootstrapDeferred: Deferred<angular.IInjectorService>;\n/**\n * @param {?} ng2AppModule\n * @param {?=} compilerOptions\n */\nconstructor(private ng2AppModule: Type<any>,\nprivate compilerOptions?: CompilerOptions) {\n    if (!ng2AppModule) {\n      throw new Error(\n          'UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.');\n    }\n  }\n/**\n * Allows Angular Component to be used from AngularJS.\n * \n * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n * Angular Component. The adapter will bootstrap Angular component from within the\n * AngularJS template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in AngularJS template. This means that the\n *    host element is controlled by AngularJS, but the component's view will be controlled by\n *    Angular.\n * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n *    syntax. This has to be done, this way because we must follow Angular components do not\n *    declare how the attributes should be interpreted.\n * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n *    by way of the `ControlValueAccessor` interface from \\@angular/forms. Only components that\n *    implement this interface are eligible.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n *   - ng-model: `<comp ng-model=\"name\">`\n * - Content projection: yes\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n * \n * \\@Component({ \n *   selector: 'greet',\n *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n * })\n * class Greeter {\n *   \\@Input() salutation: string;\n *   \\@Input() name: string;\n * }\n * \n * \\@NgModule({ \n *   declarations: [Greeter],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML =\n *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n * });\n * ```\n * @param {?} component\n * @return {?}\n */\ndowngradeNg2Component(component: Type<any>): Function {\n    this.downgradedComponents.push(component);\n\n    const /** @type {?} */ metadata: Directive = this.directiveResolver.resolve(component);\n    const /** @type {?} */ info: ComponentInfo = {component, inputs: metadata.inputs, outputs: metadata.outputs};\n\n    return downgradeComponent(info);\n  }\n/**\n * Allows AngularJS Component to be used from Angular.\n * \n * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n * directive. The adapter will bootstrap AngularJS component from within the Angular\n * template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in Angular template. This means that the\n *    host element is controlled by Angular, but the component's view will be controlled by\n *    AngularJS.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n * - Transclusion: yes\n * - Only some of the features of\n *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n *   supported:\n *   - `compile`: not supported because the host element is owned by Angular, which does\n *     not allow modifying DOM structure during compilation.\n *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n *   - `controllerAs`: supported.\n *   - `bindToController`: supported.\n *   - `link`: supported. (NOTE: only pre-link function is supported.)\n *   - `name`: supported.\n *   - `priority`: ignored.\n *   - `replace`: not supported.\n *   - `require`: supported.\n *   - `restrict`: must be set to 'E'.\n *   - `scope`: supported.\n *   - `template`: supported.\n *   - `templateUrl`: supported.\n *   - `terminal`: ignored.\n *   - `transclude`: supported.\n * \n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * \n * module.directive('greet', function() {\n *   return {\n *     scope: {salutation: '=', name: '=' },\n *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n *   };\n * });\n * \n * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n * \n * \\@Component({ \n *   selector: 'ng2',\n *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2></ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n * });\n * ```\n * @param {?} name\n * @return {?}\n */\nupgradeNg1Component(name: string): Type<any> {\n    if (( /** @type {?} */((<any>this.ng1ComponentsToBeUpgraded))).hasOwnProperty(name)) {\n      return this.ng1ComponentsToBeUpgraded[name].type;\n    } else {\n      return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n          .type;\n    }\n  }\n/**\n * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n * Use this instead of `angular.mock.module()` to load the upgrade module into\n * the AngularJS testing injector.\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * \n * // configure the adapter with upgrade/downgrade components and services\n * upgradeAdapter.downgradeNg2Component(MyComponent);\n * \n * let upgradeAdapterRef: UpgradeAdapterRef;\n * let $compile, $rootScope;\n * \n * // We must register the adapter before any calls to `inject()`\n * beforeEach(() => {\n *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n * });\n * \n * beforeEach(inject((_$compile_, _$rootScope_) => {\n *   $compile = _$compile_;\n *   $rootScope = _$rootScope_;\n * }));\n * \n * it(\"says hello\", (done) => {\n *   upgradeAdapterRef.ready(() => {\n *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n *     $rootScope.$apply();\n *     expect(element.html()).toContain(\"Hello World\");\n *     done();\n *   })\n * });\n * \n * ```\n * \n * @param {?=} modules any AngularJS modules that the upgrade module should depend upon\n * @return {?} an {\\@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n * run assertions once the Angular components are ready to test through AngularJS.\n */\nregisterForNg1Tests(modules?: string[]): UpgradeAdapterRef {\n    const /** @type {?} */ windowNgMock = ( /** @type {?} */((window as any)))['angular'].mock;\n    if (!windowNgMock || !windowNgMock.module) {\n      throw new Error('Failed to find \\'angular.mock.module\\'.');\n    }\n    this.declareNg1Module(modules);\n    windowNgMock.module(this.ng1Module.name);\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n    this.ng2BootstrapDeferred.promise.then(\n        (ng1Injector) => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); }, onError);\n    return upgrade;\n  }\n/**\n * Bootstrap a hybrid AngularJS / Angular application.\n * \n * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n * AngularJS, this bootstrap is asynchronous.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(MyNg2Module);\n * const module = angular.module('myExample', []);\n * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n * \n * module.directive('ng1', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n * })\n * class Ng2 {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * ```\n * @param {?} element\n * @param {?=} modules\n * @param {?=} config\n * @return {?}\n */\nbootstrap(element: Element, modules?: any[], config?: angular.IAngularBootstrapConfig):\n      UpgradeAdapterRef {\n    this.declareNg1Module(modules);\n\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const /** @type {?} */ windowAngular = ( /** @type {?} */((window as any)) /** TODO #???? */)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    this.ngZone.run(() => { angular.bootstrap(element, [this.ng1Module.name], config); });\n    const /** @type {?} */ ng1BootstrapPromise = new Promise((resolve) => {\n      if (windowAngular.resumeBootstrap) {\n        const /** @type {?} */ originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n        windowAngular.resumeBootstrap = function() {\n          windowAngular.resumeBootstrap = originalResumeBootstrap;\n          windowAngular.resumeBootstrap.apply(this, arguments);\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n    });\n\n    Promise.all([this.ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(([ng1Injector]) => {\n      angular.element(element).data(controllerKey(INJECTOR_KEY), this.moduleRef.injector);\n      this.moduleRef.injector.get(NgZone).run(\n          () => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); });\n    }, onError);\n    return upgrade;\n  }\n/**\n * Allows AngularJS service to be accessible from Angular.\n * \n * \n * ### Example\n * \n * ```\n * class Login { ... }\n * class Server { ... }\n * \n * \\@Injectable() \n * class Example {\n *   constructor(\\@Inject('server') server, login: Login) {\n *     ...\n *   }\n * }\n * \n * const module = angular.module('myExample', []);\n * module.service('server', Server);\n * module.service('login', Login);\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * adapter.upgradeNg1Provider('server');\n * adapter.upgradeNg1Provider('login', {asToken: Login});\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng2Injector.get(Example);\n * });\n * \n * ```\n * @param {?} name\n * @param {?=} options\n * @return {?}\n */\nupgradeNg1Provider(name: string, options?: {asToken: any}) {\n    const /** @type {?} */ token = options && options.asToken || name;\n    this.upgradedProviders.push({\n      provide: token,\n      useFactory: ($injector: angular.IInjectorService) => $injector.get(name),\n      deps: [$INJECTOR]\n    });\n  }\n/**\n * Allows Angular service to be accessible from AngularJS.\n * \n * \n * ### Example\n * \n * ```\n * class Example {\n * }\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * \n * const module = angular.module('myExample', []);\n * module.factory('example', adapter.downgradeNg2Provider(Example));\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng1Injector.get('example');\n * });\n * \n * ```\n * @param {?} token\n * @return {?}\n */\ndowngradeNg2Provider(token: any): Function { return downgradeInjectable(token); }\n/**\n * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n * hybrid application.\n * \n * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n * \n * @param {?=} modules The AngularJS modules that this upgrade module should depend upon.\n * @return {?} The AngularJS upgrade module that is declared by this method\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * upgradeAdapter.declareNg1Module(['heroApp']);\n * ```\n */\nprivate declareNg1Module(modules: string[] = []): angular.IModule {\n    const /** @type {?} */ delayApplyExps: Function[] = [];\n    let /** @type {?} */ original$applyFn: Function;\n    let /** @type {?} */ rootScopePrototype: any;\n    let /** @type {?} */ rootScope: angular.IRootScopeService;\n    const /** @type {?} */ upgradeAdapter = this;\n    const /** @type {?} */ ng1Module = this.ng1Module = angular.module(this.idPrefix, modules);\n    const /** @type {?} */ platformRef = platformBrowserDynamic();\n\n    this.ngZone = new NgZone({enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec')});\n    this.ng2BootstrapDeferred = new Deferred();\n    ng1Module.factory(INJECTOR_KEY, () => this.moduleRef.injector.get(Injector))\n        .constant(NG_ZONE_KEY, this.ngZone)\n        .factory(COMPILER_KEY, () => this.moduleRef.injector.get(Compiler))\n        .config([\n          '$provide', '$injector',\n          (provide: angular.IProvideService, ng1Injector: angular.IInjectorService) => {\n            provide.decorator($ROOT_SCOPE, [\n              '$delegate',\n              function(rootScopeDelegate: angular.IRootScopeService) {\n                // Capture the root apply so that we can delay first call to $apply until we\n                // bootstrap Angular and then we replay and restore the $apply.\n                rootScopePrototype = rootScopeDelegate.constructor.prototype;\n                if (rootScopePrototype.hasOwnProperty('$apply')) {\n                  original$applyFn = rootScopePrototype.$apply;\n                  rootScopePrototype.$apply = (exp: any) => delayApplyExps.push(exp);\n                } else {\n                  throw new Error('Failed to find \\'$apply\\' on \\'$rootScope\\'!');\n                }\n                return rootScope = rootScopeDelegate;\n              }\n            ]);\n            if (ng1Injector.has($$TESTABILITY)) {\n              provide.decorator($$TESTABILITY, [\n                '$delegate',\n                function(testabilityDelegate: angular.ITestabilityService) {\n                  const /** @type {?} */ originalWhenStable: Function = testabilityDelegate.whenStable;\n                  // Cannot use arrow function below because we need the context\n                  const /** @type {?} */ newWhenStable = function(callback: Function) {\n                    originalWhenStable.call(this, function() {\n                      const /** @type {?} */ ng2Testability: Testability =\n                          upgradeAdapter.moduleRef.injector.get(Testability);\n                      if (ng2Testability.isStable()) {\n                        callback.apply(this, arguments);\n                      } else {\n                        ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                      }\n                    });\n                  };\n\n                  testabilityDelegate.whenStable = newWhenStable;\n                  return testabilityDelegate;\n                }\n              ]);\n            }\n          }\n        ]);\n\n    ng1Module.run([\n      '$injector', '$rootScope',\n      (ng1Injector: angular.IInjectorService, rootScope: angular.IRootScopeService) => {\n        UpgradeNg1ComponentAdapterBuilder.resolve(this.ng1ComponentsToBeUpgraded, ng1Injector)\n            .then(() => {\n              // At this point we have ng1 injector and we have lifted ng1 components into ng2, we\n              // now can bootstrap ng2.\n              const /** @type {?} */ DynamicNgUpgradeModule =\n                  NgModule({\n                    providers: [\n                      {provide: $INJECTOR, useFactory: () => ng1Injector},\n                      {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n                      {provide: NgContentSelectorHelper, useClass: DynamicNgContentSelectorHelper},\n                      this.upgradedProviders\n                    ],\n                    imports: [this.ng2AppModule],\n                    entryComponents: this.downgradedComponents\n                  }).Class({\n                    constructor: function DynamicNgUpgradeModule() {},\n                    ngDoBootstrap: function() {}\n                  });\n              ( /** @type {?} */((platformRef as any)))\n                  ._bootstrapModuleWithZone(\n                      DynamicNgUpgradeModule, this.compilerOptions, this.ngZone)\n                  .then((ref: NgModuleRef<any>) => {\n                    this.moduleRef = ref;\n                    this.ngZone.run(() => {\n                      if (rootScopePrototype) {\n                        rootScopePrototype.$apply = original$applyFn;  // restore original $apply\n                        while (delayApplyExps.length) {\n                          rootScope.$apply(delayApplyExps.shift());\n                        }\n                        rootScopePrototype = null;\n                      }\n                    });\n                  })\n                  .then(() => this.ng2BootstrapDeferred.resolve(ng1Injector), onError)\n                  .then(() => {\n                    let /** @type {?} */ subscription =\n                        this.ngZone.onMicrotaskEmpty.subscribe({next: () => rootScope.$digest()});\n                    rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                  });\n            })\n            .catch((e) => this.ng2BootstrapDeferred.reject(e));\n      }\n    ]);\n\n    return ng1Module;\n  }\n}\n\nfunction UpgradeAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapter.prototype.idPrefix;\n/** @type {?} */\nUpgradeAdapter.prototype.directiveResolver;\n/** @type {?} */\nUpgradeAdapter.prototype.downgradedComponents;\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n * @type {?}\n */\nUpgradeAdapter.prototype.ng1ComponentsToBeUpgraded;\n/** @type {?} */\nUpgradeAdapter.prototype.upgradedProviders;\n/** @type {?} */\nUpgradeAdapter.prototype.ngZone;\n/** @type {?} */\nUpgradeAdapter.prototype.ng1Module;\n/** @type {?} */\nUpgradeAdapter.prototype.moduleRef;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2BootstrapDeferred;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2AppModule;\n/** @type {?} */\nUpgradeAdapter.prototype.compilerOptions;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) {\n    // store the promise on the element\n    element.data(controllerKey(INJECTOR_KEY), this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector;\n\n    // reset the element data to point to the real injector\n    this.element.data(controllerKey(INJECTOR_KEY), injector);\n\n    // clean out the element to prevent memory leaks\n    this.element = null;\n\n    // run all the queued callbacks\n    this.callbacks.forEach((callback) => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n * \n * \\@stable\n */\nexport class UpgradeAdapterRef {\nprivate _readyFn: (upgradeAdapterRef?: UpgradeAdapterRef) => void = null;\npublic ng1RootScope: angular.IRootScopeService = null;\npublic ng1Injector: angular.IInjectorService = null;\npublic ng2ModuleRef: NgModuleRef<any> = null;\npublic ng2Injector: Injector = null;\n/**\n * @param {?} ngModuleRef\n * @param {?} ng1Injector\n * @return {?}\n */\nprivate _bootstrapDone(ngModuleRef: NgModuleRef<any>, ng1Injector: angular.IInjectorService) {\n    this.ng2ModuleRef = ngModuleRef;\n    this.ng2Injector = ngModuleRef.injector;\n    this.ng1Injector = ng1Injector;\n    this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n    this._readyFn && this._readyFn(this);\n  }\n/**\n * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n * application has been bootstrapped.\n * \n * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n * require a call to `$apply()`.\n * @param {?} fn\n * @return {?}\n */\npublic ready(fn: (upgradeAdapterRef?: UpgradeAdapterRef) => void) { this._readyFn = fn; }\n/**\n * Dispose of running hybrid AngularJS / Angular application.\n * @return {?}\n */\npublic dispose() {\n    this.ng1Injector.get($ROOT_SCOPE).$destroy();\n    this.ng2ModuleRef.destroy();\n  }\n}\n\nfunction UpgradeAdapterRef_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapterRef.prototype._readyFn;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1RootScope;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1Injector;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2ModuleRef;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2Injector;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, EventEmitter, Inject, OnChanges, OnInit, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $SCOPE, $TEMPLATE_CACHE} from '../common/constants';\nimport {controllerKey} from '../common/util';\n\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n\n\nconst /** @type {?} */ CAMEL_CASE = /([A-Z])/g;\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nconst /** @type {?} */ NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nexport class UpgradeNg1ComponentAdapterBuilder {\n  type: Type<any>;\n  inputs: string[] = [];\n  inputsRename: string[] = [];\n  outputs: string[] = [];\n  outputsRename: string[] = [];\n  propertyOutputs: string[] = [];\n  checkProperties: string[] = [];\n  propertyMap: {[name: string]: string} = {};\n  linkFn: angular.ILinkFn = null;\n  directive: angular.IDirective = null;\n  $controller: angular.IControllerService = null;\n/**\n * @param {?} name\n */\nconstructor(public name: string) {\n    const selector = name.replace(\n        CAMEL_CASE, (all: any /** TODO #9100 */, next: string) => '-' + next.toLowerCase());\n    const self = this;\n    this.type =\n        Directive({selector: selector, inputs: this.inputsRename, outputs: this.outputsRename})\n            .Class({\n              constructor: [\n                new Inject($SCOPE), ElementRef,\n                function(scope: angular.IScope, elementRef: ElementRef) {\n                  return new UpgradeNg1ComponentAdapter(\n                      self.linkFn, scope, self.directive, elementRef, self.$controller, self.inputs,\n                      self.outputs, self.propertyOutputs, self.checkProperties, self.propertyMap);\n                }\n              ],\n              ngOnInit: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngOnChanges: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngDoCheck: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngOnDestroy: function() { /* needs to be here for ng2 to properly detect it */ },\n            });\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nextractDirective(injector: angular.IInjectorService): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = injector.get(this.name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const /** @type {?} */ directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    const /** @type {?} */ link = directive.link;\n    if (typeof link == 'object') {\n      if (( /** @type {?} */((<angular.IDirectivePrePost>link))).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n/**\n * @param {?} feature\n * @return {?}\n */\nprivate notSupported(feature: string) {\n    throw new Error(`Upgraded directive '${this.name}' does not support '${feature}'.`);\n  }\n/**\n * @return {?}\n */\nextractBindings() {\n    const /** @type {?} */ btcIsObject = typeof this.directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(this.directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time are not supported.`);\n    }\n\n    const /** @type {?} */ context = (btcIsObject) ? this.directive.bindToController : this.directive.scope;\n\n    if (typeof context == 'object') {\n      for (const /** @type {?} */ name in context) {\n        if (( /** @type {?} */((<any>context))).hasOwnProperty(name)) {\n          let /** @type {?} */ localName = context[name];\n          const /** @type {?} */ type = localName.charAt(0);\n          const /** @type {?} */ typeOptions = localName.charAt(1);\n          localName = typeOptions === '?' ? localName.substr(2) : localName.substr(1);\n          localName = localName || name;\n\n          const /** @type {?} */ outputName = 'output_' + name;\n          const /** @type {?} */ outputNameRename = outputName + ': ' + name;\n          const /** @type {?} */ outputNameRenameChange = outputName + ': ' + name + 'Change';\n          const /** @type {?} */ inputName = 'input_' + name;\n          const /** @type {?} */ inputNameRename = inputName + ': ' + name;\n          switch (type) {\n            case '=':\n              this.propertyOutputs.push(outputName);\n              this.checkProperties.push(localName);\n              this.outputs.push(outputName);\n              this.outputsRename.push(outputNameRenameChange);\n              this.propertyMap[outputName] = localName;\n              this.inputs.push(inputName);\n              this.inputsRename.push(inputNameRename);\n              this.propertyMap[inputName] = localName;\n              break;\n            case '@':\n            // handle the '<' binding of angular 1.5 components\n            case '<':\n              this.inputs.push(inputName);\n              this.inputsRename.push(inputNameRename);\n              this.propertyMap[inputName] = localName;\n              break;\n            case '&':\n              this.outputs.push(outputName);\n              this.outputsRename.push(outputNameRename);\n              this.propertyMap[outputName] = localName;\n              break;\n            default:\n              let /** @type {?} */ json = JSON.stringify(context);\n              throw new Error(\n                  `Unexpected mapping '${type}' in '${json}' in '${this.name}' directive.`);\n          }\n        }\n      }\n    }\n  }\n/**\n * @param {?} compile\n * @param {?} templateCache\n * @param {?} httpBackend\n * @return {?}\n */\ncompileTemplate(\n      compile: angular.ICompileService, templateCache: angular.ITemplateCacheService,\n      httpBackend: angular.IHttpBackendService): Promise<angular.ILinkFn> {\n    if (this.directive.template !== undefined) {\n      this.linkFn = compileHtml(\n          isFunction(this.directive.template) ? this.directive.template() :\n                                                this.directive.template);\n    } else if (this.directive.templateUrl) {\n      const /** @type {?} */ url = isFunction(this.directive.templateUrl) ? this.directive.templateUrl() :\n                                                           this.directive.templateUrl;\n      const /** @type {?} */ html = templateCache.get(url);\n      if (html !== undefined) {\n        this.linkFn = compileHtml(html);\n      } else {\n        return new Promise((resolve, err) => {\n          httpBackend(\n              'GET', url, null,\n              (status: any /** TODO #9100 */, response: any /** TODO #9100 */) => {\n                if (status == 200) {\n                  resolve(this.linkFn = compileHtml(templateCache.put(url, response)));\n                } else {\n                  err(`GET ${url} returned ${status}: ${response}`);\n                }\n              });\n        });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n    return null;\n/**\n * @param {?} html\n * @return {?}\n */\nfunction compileHtml(html: any /** TODO #9100 */): angular.ILinkFn {\n      const /** @type {?} */ div = document.createElement('div');\n      div.innerHTML = html;\n      return compile(div.childNodes);\n    }\n  }\n/**\n * Upgrade ng1 components into Angular.\n * @param {?} exportedComponents\n * @param {?} injector\n * @return {?}\n */\nstatic resolve(\n      exportedComponents: {[name: string]: UpgradeNg1ComponentAdapterBuilder},\n      injector: angular.IInjectorService): Promise<angular.ILinkFn[]> {\n    const /** @type {?} */ promises: Promise<angular.ILinkFn>[] = [];\n    const /** @type {?} */ compile: angular.ICompileService = injector.get($COMPILE);\n    const /** @type {?} */ templateCache: angular.ITemplateCacheService = injector.get($TEMPLATE_CACHE);\n    const /** @type {?} */ httpBackend: angular.IHttpBackendService = injector.get($HTTP_BACKEND);\n    const /** @type {?} */ $controller: angular.IControllerService = injector.get($CONTROLLER);\n    for (const /** @type {?} */ name in exportedComponents) {\n      if (( /** @type {?} */((<any>exportedComponents))).hasOwnProperty(name)) {\n        const /** @type {?} */ exportedComponent = exportedComponents[name];\n        exportedComponent.directive = exportedComponent.extractDirective(injector);\n        exportedComponent.$controller = $controller;\n        exportedComponent.extractBindings();\n        const /** @type {?} */ promise: Promise<angular.ILinkFn> =\n            exportedComponent.compileTemplate(compile, templateCache, httpBackend);\n        if (promise) promises.push(promise);\n      }\n    }\n    return Promise.all(promises);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapterBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.type;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyOutputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyMap;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.linkFn;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.$controller;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.name;\n}\n\nclass UpgradeNg1ComponentAdapter implements OnInit, OnChanges, DoCheck {\nprivate controllerInstance: IControllerInstance = null;\n  destinationObj: IBindingDestination = null;\n  checkLastValues: any[] = [];\n  componentScope: angular.IScope;\n  element: Element;\n  $element: any = null;\n/**\n * @param {?} linkFn\n * @param {?} scope\n * @param {?} directive\n * @param {?} elementRef\n * @param {?} $controller\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} propOuts\n * @param {?} checkProperties\n * @param {?} propertyMap\n */\nconstructor(\nprivate linkFn: angular.ILinkFn, scope: angular.IScope,\nprivate directive: angular.IDirective,\n      elementRef: ElementRef,\nprivate $controller: angular.IControllerService,\nprivate inputs: string[],\nprivate outputs: string[],\nprivate propOuts: string[],\nprivate checkProperties: string[],\nprivate propertyMap: {[key: string]: string}) {\n    this.element = elementRef.nativeElement;\n    this.componentScope = scope.$new(!!directive.scope);\n    this.$element = angular.element(this.element);\n    const controllerType = directive.controller;\n    if (directive.bindToController && controllerType) {\n      this.controllerInstance = this.buildController(controllerType);\n      this.destinationObj = this.controllerInstance;\n    } else {\n      this.destinationObj = this.componentScope;\n    }\n\n    for (let i = 0; i < inputs.length; i++) {\n      (this as any /** TODO #9100 */)[inputs[i]] = null;\n    }\n    for (let j = 0; j < outputs.length; j++) {\n      const emitter = (this as any /** TODO #9100 */)[outputs[j]] = new EventEmitter();\n      this.setComponentProperty(\n          outputs[j], ((emitter: any /** TODO #9100 */) => (value: any /** TODO #9100 */) =>\n                           emitter.emit(value))(emitter));\n    }\n    for (let k = 0; k < propOuts.length; k++) {\n      (this as any /** TODO #9100 */)[propOuts[k]] = new EventEmitter();\n      this.checkLastValues.push(INITIAL_VALUE);\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.directive.bindToController && this.directive.controller) {\n      this.controllerInstance = this.buildController(this.directive.controller);\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    let /** @type {?} */ link = this.directive.link;\n    if (typeof link == 'object') link = ( /** @type {?} */((<angular.IDirectivePrePost>link))).pre;\n    if (link) {\n      const /** @type {?} */ attrs: angular.IAttributes = NOT_SUPPORTED;\n      const /** @type {?} */ transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n      const /** @type {?} */ linkController = this.resolveRequired(this.$element, this.directive.require);\n      ( /** @type {?} */((<angular.IDirectiveLinkFn>this.directive.link)))(\n          this.componentScope, this.$element, attrs, linkController, transcludeFn);\n    }\n\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: any /** TODO #9100 */;\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n    this.linkFn(this.componentScope, (clonedElement, scope) => {\n      for (let /** @type {?} */ i = 0, /** @type {?} */ ii = clonedElement.length; i < ii; i++) {\n        this.element.appendChild(clonedElement[i]);\n      }\n    }, {\n      parentBoundTranscludeFn: (scope: any /** TODO #9100 */,\n                                cloneAttach: any /** TODO #9100 */) => { cloneAttach(childNodes); }\n    });\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ ng1Changes: any = {};\n    Object.keys(changes).forEach(name => {\n      const /** @type {?} */ change: SimpleChange = changes[name];\n      this.setComponentProperty(name, change.currentValue);\n      ng1Changes[this.propertyMap[name]] = change;\n    });\n\n    if (isFunction(this.destinationObj.$onChanges)) {\n      this.destinationObj.$onChanges(ng1Changes);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    const /** @type {?} */ destinationObj = this.destinationObj;\n    const /** @type {?} */ lastValues = this.checkLastValues;\n    const /** @type {?} */ checkProperties = this.checkProperties;\n    for (let /** @type {?} */ i = 0; i < checkProperties.length; i++) {\n      const /** @type {?} */ value = destinationObj[checkProperties[i]];\n      const /** @type {?} */ last = lastValues[i];\n      if (value !== last) {\n        if (typeof value == 'number' && isNaN(value) && typeof last == 'number' && isNaN(last)) {\n          // ignore because NaN != NaN\n        } else {\n          const /** @type {?} */ eventEmitter: EventEmitter<any> = ( /** @type {?} */((this as any)) /** TODO #9100 */)[this.propOuts[i]];\n          eventEmitter.emit(lastValues[i] = value);\n        }\n      }\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      this.controllerInstance.$doCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetComponentProperty(name: string, value: any) {\n    this.destinationObj[this.propertyMap[name]] = value;\n  }\n/**\n * @param {?} controllerType\n * @return {?}\n */\nprivate buildController(controllerType: any /** TODO #9100 */) {\n    const /** @type {?} */ locals = {$scope: this.componentScope, $element: this.$element};\n    const /** @type {?} */ controller: any =\n        this.$controller(controllerType, locals, null, this.directive.controllerAs);\n    this.$element.data(controllerKey(this.directive.name), controller);\n    return controller;\n  }\n/**\n * @param {?} $element\n * @param {?} require\n * @return {?}\n */\nprivate resolveRequired(\n      $element: angular.IAugmentedJQuery, require: angular.DirectiveRequireProperty): any {\n    if (!require) {\n      return undefined;\n    } else if (typeof require == 'string') {\n      let /** @type {?} */ name: string = /** @type {?} */(( <string>require));\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ startParent = false;\n      let /** @type {?} */ searchParents = false;\n      if (name.charAt(0) == '?') {\n        isOptional = true;\n        name = name.substr(1);\n      }\n      if (name.charAt(0) == '^') {\n        searchParents = true;\n        name = name.substr(1);\n      }\n      if (name.charAt(0) == '^') {\n        startParent = true;\n        name = name.substr(1);\n      }\n\n      const /** @type {?} */ key = controllerKey(name);\n      if (startParent) $element = $element.parent();\n      const /** @type {?} */ dep = searchParents ? $element.inheritedData(key) : $element.data(key);\n      if (!dep && !isOptional) {\n        throw new Error(`Can not locate '${require}' in '${this.directive.name}'.`);\n      }\n      return dep;\n    } else if (require instanceof Array) {\n      const /** @type {?} */ deps: any[] = [];\n      for (let /** @type {?} */ i = 0; i < require.length; i++) {\n        deps.push(this.resolveRequired($element, require[i]));\n      }\n      return deps;\n    }\n    throw new Error(\n        `Directive '${this.directive.name}' require syntax unrecognized: ${this.directive.require}`);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.controllerInstance;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.destinationObj;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkLastValues;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.componentScope;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.linkFn;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$controller;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propOuts;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propertyMap;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Compiler, Injectable} from '@angular/core';\n\nimport {ComponentInfo} from '../common/component_info';\nimport {NgContentSelectorHelper} from '../common/ng_content_selector_helper';\n/**\n * See `NgContentSelectorHelper` for more information about this class.\n */\nexport class DynamicNgContentSelectorHelper extends NgContentSelectorHelper {\n/**\n * @param {?} compiler\n */\nconstructor(private compiler: Compiler) { super(); }\n/**\n * @param {?} info\n * @return {?}\n */\ngetNgContentSelectors(info: ComponentInfo): string[] {\n    return this.compiler.getNgContentSelectors(info.component);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n];\n}\n\nfunction DynamicNgContentSelectorHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nDynamicNgContentSelectorHelper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDynamicNgContentSelectorHelper.ctorParameters;\n/** @type {?} */\nDynamicNgContentSelectorHelper.prototype.compiler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allow an Angular service to be accessible from AngularJS.\n * \n * \\@howToUse \n * \n * First ensure that the service to be downgraded is provided in an {\\@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n * \n * and that we have included this in our upgrade app {\\@link NgModule}\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n * \n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n * \n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"example-app\"}\n * \n * \\@description \n * \n * Takes a `token` that identifies a service provided from Angular.\n * \n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n * \n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n * \n * \\@experimental\n * @param {?} token\n * @return {?}\n */\nexport function downgradeInjectable(token: any): Function {\n  const /** @type {?} */ factory = function(i: Injector) { return i.get(token); };\n  ( /** @type {?} */((factory as any))).$inject = [INJECTOR_KEY];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {NgContentSelectorHelper} from './ng_content_selector_helper';\nimport {controllerKey, getComponentName} from './util';\n\nlet /** @type {?} */ downgradeCount = 0;\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an Angular component to be used from AngularJS.\n * \n * \\@howToUse \n * \n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n * \n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n * \n * In this example you can see that we must provide information about the component being\n * \"downgraded\". This is because once the AoT compiler has run, all metadata about the\n * component has been removed from the code, and so cannot be inferred.\n * \n * We must do the following:\n * * specify the Angular component class that is to be downgraded\n * * specify all inputs and outputs that the AngularJS component expects\n * * specify the selectors used in any `ng-content` elements in the component's template\n * \n * \\@description \n * \n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n * \n * The parameter contains information about the Component that is being downgraded:\n * \n * * `component: Type<any>`: The type of the Component that will be downgraded\n * * `inputs: string[]`: A collection of strings that specify what inputs the component accepts\n * * `outputs: string[]`: A collection of strings that specify what outputs the component emits\n * * `selectors: string[]`: A collection of strings that specify what selectors are expected on\n *   `ng-content` elements in the template to enable content projection (a.k.a. transclusion in\n *   AngularJS)\n * \n * The `inputs` and `outputs` are strings that map the names of properties to camelCased\n * attribute names. They are of the form `\"prop: attr\"`; or simply `\"propAndAttr\" where the\n * property and attribute have the same identifier.\n * \n * The `selectors` are the values of the `select` attribute of each of the `ng-content` elements\n * that appear in the downgraded component's template.\n * These selectors must be provided in the order that they appear in the template as they are\n * mapped by index to the projected nodes.\n * \n * \\@experimental\n * @param {?} info\n * @return {?}\n */\nexport function downgradeComponent(info: /* ComponentInfo */ {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n  selectors?: string[]\n}): any /* angular.IInjectable */ {\n  const /** @type {?} */ idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let /** @type {?} */ idCount = 0;\n\n  const /** @type {?} */ directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const /** @type {?} */ parentInjector: Injector|ParentInjectorPromise =\n            required[0] || $injector.get(INJECTOR_KEY);\n        const /** @type {?} */ ngModel: angular.INgModelController = required[1];\n\n        const /** @type {?} */ downgradeFn = (injector: Injector) => {\n          const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const /** @type {?} */ componentFactory: ComponentFactory<any> =\n              componentFactoryResolver.resolveComponentFactory(info.component);\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const /** @type {?} */ id = idPrefix + (idCount++);\n          const /** @type {?} */ injectorPromise = new ParentInjectorPromise(element);\n          const /** @type {?} */ facade = new DowngradeComponentAdapter(\n              id, info, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory);\n\n          const /** @type {?} */ projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs();\n          facade.setupOutputs();\n          facade.registerCleanup();\n\n          injectorPromise.resolve(facade.getInjector());\n        };\n\n        if (parentInjector instanceof ParentInjectorPromise) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate injectorKey: string = controllerKey(INJECTOR_KEY);\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) {\n    // Store the promise on the element.\n    element.data(this.injectorKey, this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector;\n\n    // Store the real injector on the element.\n    this.element.data(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = null;\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.injectorKey;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, ReflectiveInjector, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {createElementCssSelector} from './compiler_helpers/createElementCssSelector';\nimport {CssSelector, SelectorMatcher} from './compiler_helpers/selector';\nimport {ComponentInfo, PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {NgContentSelectorHelper} from './ng_content_selector_helper';\nimport {getAttributesAsArray, getComponentName, hookupNgModel} from './util';\n\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nexport class DowngradeComponentAdapter {\nprivate inputChangeCount: number = 0;\nprivate inputChanges: SimpleChanges = null;\nprivate componentScope: angular.IScope;\nprivate componentRef: ComponentRef<any> = null;\nprivate component: any = null;\nprivate changeDetector: ChangeDetectorRef = null;\n/**\n * @param {?} id\n * @param {?} info\n * @param {?} element\n * @param {?} attrs\n * @param {?} scope\n * @param {?} ngModel\n * @param {?} parentInjector\n * @param {?} $injector\n * @param {?} $compile\n * @param {?} $parse\n * @param {?} componentFactory\n */\nconstructor(\nprivate id: string,\nprivate info: ComponentInfo,\nprivate element: angular.IAugmentedJQuery,\nprivate attrs: angular.IAttributes,\nprivate scope: angular.IScope,\nprivate ngModel: angular.INgModelController,\nprivate parentInjector: Injector,\nprivate $injector: angular.IInjectorService,\nprivate $compile: angular.ICompileService,\nprivate $parse: angular.IParseService,\nprivate componentFactory: ComponentFactory<any>) {\n    (this.element[0] as any).id = id;\n    this.componentScope = scope.$new();\n  }\n/**\n * @return {?}\n */\ncompileContents(): Node[][] {\n    const /** @type {?} */ compiledProjectableNodes: Node[][] = [];\n    const /** @type {?} */ projectableNodes: Node[][] = this.groupProjectableNodes();\n    const /** @type {?} */ linkFns = projectableNodes.map(nodes => this.$compile(nodes));\n\n    this.element.empty();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n/**\n * @param {?} projectableNodes\n * @return {?}\n */\ncreateComponent(projectableNodes: Node[][]) {\n    const /** @type {?} */ childInjector = ReflectiveInjector.resolveAndCreate(\n        [{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n/**\n * @return {?}\n */\nsetupInputs(): void {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ inputs = this.info.inputs || [];\n    for (let /** @type {?} */ i = 0; i < inputs.length; i++) {\n      const /** @type {?} */ input = new PropertyBinding(inputs[i]);\n      let /** @type {?} */ expr: any /** TODO #9100 */ = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const /** @type {?} */ observeFn = (prop => {\n          let /** @type {?} */ prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            if (prevValue === INITIAL_VALUE) {\n              prevValue = currValue;\n            }\n\n            this.updateInput(prop, prevValue, currValue);\n            prevValue = currValue;\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const /** @type {?} */ watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    const /** @type {?} */ prototype = this.info.component.prototype;\n    if (prototype && ( /** @type {?} */((<OnChanges>prototype))).ngOnChanges) {\n      // Detect: OnChanges interface\n      this.inputChanges = {};\n      this.componentScope.$watch(() => this.inputChangeCount, () => {\n        const /** @type {?} */ inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        ( /** @type {?} */((<OnChanges>this.component))).ngOnChanges(inputChanges);\n      });\n    }\n    this.componentScope.$watch(() => this.changeDetector && this.changeDetector.detectChanges());\n  }\n/**\n * @return {?}\n */\nsetupOutputs() {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ outputs = this.info.outputs || [];\n    for (let /** @type {?} */ j = 0; j < outputs.length; j++) {\n      const /** @type {?} */ output = new PropertyBinding(outputs[j]);\n      let /** @type {?} */ expr: any /** TODO #9100 */ = null;\n      let /** @type {?} */ assignExpr = false;\n\n      const /** @type {?} */ bindonAttr =\n          output.bindonAttr ? output.bindonAttr.substring(0, output.bindonAttr.length - 6) : null;\n      const /** @type {?} */ bracketParenAttr = output.bracketParenAttr ?\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]` :\n          null;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[output.parenAttr];\n      } else if (attrs.hasOwnProperty(bindonAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[bindonAttr];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty(bracketParenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[bracketParenAttr];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const /** @type {?} */ getter = this.$parse(expr);\n        const /** @type {?} */ setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const /** @type {?} */ emitter = /** @type {?} */(( this.component[output.prop] as EventEmitter<any>));\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ?\n                ((setter: any) => (v: any /** TODO #9100 */) => setter(this.scope, v))(setter) :\n                ((getter: any) => (v: any /** TODO #9100 */) =>\n                     getter(this.scope, {$event: v}))(getter)\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.info.component)}'!`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nregisterCleanup() {\n    this.element.bind('$destroy', () => {\n      this.componentScope.$destroy();\n      this.componentRef.destroy();\n    });\n  }\n/**\n * @return {?}\n */\ngetInjector(): Injector { return this.componentRef && this.componentRef.injector; }\n/**\n * @param {?} prop\n * @param {?} prevValue\n * @param {?} currValue\n * @return {?}\n */\nprivate updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.inputChanges) {\n      this.inputChangeCount++;\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.component[prop] = currValue;\n  }\n/**\n * @return {?}\n */\ngroupProjectableNodes() {\n    const /** @type {?} */ ngContentSelectorHelper = /** @type {?} */((\n        this.parentInjector.get(NgContentSelectorHelper) as NgContentSelectorHelper));\n    const /** @type {?} */ ngContentSelectors = ngContentSelectorHelper.getNgContentSelectors(this.info);\n\n    if (!ngContentSelectors) {\n      throw new Error('Expecting ngContentSelectors for: ' + getComponentName(this.info.component));\n    }\n\n    return this._groupNodesBySelector(ngContentSelectors, this.element.contents());\n  }\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nprivate _groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n    const /** @type {?} */ projectableNodes: Node[][] = [];\n    let /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number;\n\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = ngContentSelectors.length; i < ii; ++i) {\n      projectableNodes[i] = [];\n\n      const /** @type {?} */ selector = ngContentSelectors[i];\n      if (selector === '*') {\n        wildcardNgContentIndex = i;\n      } else {\n        matcher.addSelectables(CssSelector.parse(selector), i);\n      }\n    }\n\n    for (let /** @type {?} */ j = 0, /** @type {?} */ jj = nodes.length; j < jj; ++j) {\n      const /** @type {?} */ ngContentIndices: number[] = [];\n      const /** @type {?} */ node = nodes[j];\n      const /** @type {?} */ selector =\n          createElementCssSelector(node.nodeName.toLowerCase(), getAttributesAsArray(node));\n\n      matcher.match(selector, (_, index) => ngContentIndices.push(index));\n      ngContentIndices.sort();\n\n      if (wildcardNgContentIndex !== undefined) {\n        ngContentIndices.push(wildcardNgContentIndex);\n      }\n\n      if (ngContentIndices.length) {\n        projectableNodes[ngContentIndices[0]].push(node);\n      }\n    }\n\n    return projectableNodes;\n  }\n}\n\nfunction DowngradeComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChangeCount;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentScope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.component;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.changeDetector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.id;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.info;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.element;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.attrs;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.scope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.ngModel;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.parentInjector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$injector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$compile;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$parse;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentFactory;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\nimport * as angular from './angular1';\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const /** @type {?} */ attributes = node.attributes;\n  let /** @type {?} */ asArray: [string, string][];\n  if (attributes) {\n    let /** @type {?} */ attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let /** @type {?} */ i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, attributes[i].nodeValue];\n    }\n  }\n  return asArray || [];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return ( /** @type {?} */((component as any))).overriddenName || component.name || component.toString().split('\\n')[0];\n}\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\nconstructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nfunction Deferred_tsickle_Closure_declarations() {\n/** @type {?} */\nDeferred.prototype.promise;\n/** @type {?} */\nDeferred.prototype.resolve;\n/** @type {?} */\nDeferred.prototype.reject;\n}\n\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentInfo} from './component_info';\n/**\n * This class gives an extension point between the static and dynamic versions\n * of ngUpgrade:\n * * In the static version (this one) we must specify them manually as part of\n *   the call to `downgradeComponent(...)`.\n * * In the dynamic version (`DynamicNgContentSelectorHelper`) we are able to\n *   ask the compiler for the selectors of a component.\n */\nexport class NgContentSelectorHelper {\n/**\n * @param {?} info\n * @return {?}\n */\ngetNgContentSelectors(info: ComponentInfo): string[] {\n    // if no selectors are passed then default to a single \"wildcard\" selector\n    return info.selectors || ['*'];\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\n\nexport interface ComponentInfo {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n  selectors?: string[];\n}\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  prop: string;\n  attr: string;\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n/**\n * @param {?} binding\n */\nconstructor(public binding: string) { this.parseBinding(); }\n/**\n * @return {?}\n */\nprivate parseBinding() {\n    const /** @type {?} */ parts = this.binding.split(':');\n    this.prop = parts[0].trim();\n    this.attr = (parts[1] || this.prop).trim();\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const /** @type {?} */ capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n\nfunction PropertyBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyBinding.prototype.prop;\n/** @type {?} */\nPropertyBinding.prototype.attr;\n/** @type {?} */\nPropertyBinding.prototype.bracketAttr;\n/** @type {?} */\nPropertyBinding.prototype.bracketParenAttr;\n/** @type {?} */\nPropertyBinding.prototype.parenAttr;\n/** @type {?} */\nPropertyBinding.prototype.onAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindonAttr;\n/** @type {?} */\nPropertyBinding.prototype.binding;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CssSelector} from './selector';\n\n/*\n * The following items are copied from the Angular Compiler to be used here\n * without the need to import the entire compiler into the build\n */\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName: string): [string, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +  // \"[name]\", \"[name=value]\"\n        '(\\\\))|' +                                 // \")\"\n        '(\\\\s*,\\\\s*)',                             // \",\"\n    'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n/**\n * @param {?} selector\n * @return {?}\n */\nstatic parse(selector: string): CssSelector[] {\n    const /** @type {?} */ results: CssSelector[] = [];\n    const /** @type {?} */ _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let /** @type {?} */ cssSelector = new CssSelector();\n    let /** @type {?} */ match: string[];\n    let /** @type {?} */ current = cssSelector;\n    let /** @type {?} */ inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (match[6]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[7]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n/**\n * @return {?}\n */\nisElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n/**\n * @return {?}\n */\nhasElementSelector(): boolean { return !!this.element; }\n/**\n * @param {?=} element\n * @return {?}\n */\nsetElement(element: string = null) { this.element = element; }\n/**\n * Gets a template string for an element that matches the selector.\n * @return {?}\n */\ngetMatchingElementTemplate(): string {\n    const /** @type {?} */ tagName = this.element || 'div';\n    const /** @type {?} */ classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let /** @type {?} */ attrs = '';\n    for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n      const /** @type {?} */ attrName = this.attrs[i];\n      const /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n/**\n * @param {?} name\n * @param {?=} value\n * @return {?}\n */\naddAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\naddClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n        const /** @type {?} */ name = this.attrs[i];\n        const /** @type {?} */ value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\nfunction CssSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nCssSelector.prototype.element;\n/** @type {?} */\nCssSelector.prototype.classNames;\n/** @type {?} */\nCssSelector.prototype.attrs;\n/** @type {?} */\nCssSelector.prototype.notSelectors;\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n/**\n * @param {?} notSelectors\n * @return {?}\n */\nstatic createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const /** @type {?} */ notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\nprivate _elementMap = new Map<string, SelectorContext[]>();\nprivate _elementPartialMap = new Map<string, SelectorMatcher>();\nprivate _classMap = new Map<string, SelectorContext[]>();\nprivate _classPartialMap = new Map<string, SelectorMatcher>();\nprivate _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\nprivate _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\nprivate _listContexts: SelectorListContext[] = [];\n/**\n * @param {?} cssSelectors\n * @param {?=} callbackCtxt\n * @return {?}\n */\naddSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let /** @type {?} */ listContext: SelectorListContext = null;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n/**\n * Add an object that can be found later on by calling `match`.\n * @param {?} cssSelector A css selector\n * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n * @param {?} listContext\n * @return {?}\n */\nprivate _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let /** @type {?} */ matcher: SelectorMatcher = this;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n    const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const /** @type {?} */ className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ isTerminal = i === attrs.length - 2;\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n        if (isTerminal) {\n          const /** @type {?} */ terminalMap = matcher._attrValueMap;\n          let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n          let /** @type {?} */ partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @param {?} selectable\n * @return {?}\n */\nprivate _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let /** @type {?} */ terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @return {?}\n */\nprivate _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let /** @type {?} */ matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n/**\n * Find the objects that have been added via `addSelectable`\n * whose css selector is contained in the given css selector.\n * @param {?} cssSelector A css selector\n * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n * @return {?} boolean true if a match was found\n */\nmatch(cssSelector: CssSelector, matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = false;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n\n    for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n\n        const /** @type {?} */ terminalValuesMap = this._attrValueMap.get(name);\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const /** @type {?} */ partialValuesMap = this._attrValuePartialMap.get(name);\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let /** @type {?} */ selectables: SelectorContext[] = map.get(name) || [];\n    const /** @type {?} */ starSelectables: SelectorContext[] = map.get('*');\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let /** @type {?} */ selectable: SelectorContext;\n    let /** @type {?} */ result = false;\n    for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const /** @type {?} */ nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorMatcher.prototype._elementMap;\n/** @type {?} */\nSelectorMatcher.prototype._elementPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._classMap;\n/** @type {?} */\nSelectorMatcher.prototype._classPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValueMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValuePartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._listContexts;\n}\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n/**\n * @param {?} selectors\n */\nconstructor(public selectors: CssSelector[]) {}\n}\n\nfunction SelectorListContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorListContext.prototype.alreadyMatched;\n/** @type {?} */\nSelectorListContext.prototype.selectors;\n}\n\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n/**\n * @param {?} selector\n * @param {?} cbContext\n * @param {?} listContext\n */\nconstructor(\npublic selector: CssSelector,\npublic cbContext: any,\npublic listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n/**\n * @param {?} cssSelector\n * @param {?} callback\n * @return {?}\n */\nfinalize(cssSelector: CssSelector, callback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n\nfunction SelectorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorContext.prototype.notSelectors;\n/** @type {?} */\nSelectorContext.prototype.selector;\n/** @type {?} */\nSelectorContext.prototype.cbContext;\n/** @type {?} */\nSelectorContext.prototype.listContext;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {TagContentType, TagDefinition} from './tags';\nexport class HtmlTagDefinition implements TagDefinition {\nprivate closedByChildren: {[key: string]: boolean} = {};\n\n  closedByParent: boolean = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean = false;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {closedByChildren, requiredParents, implicitNamespacePrefix,\n       contentType = TagContentType.PARSABLE_DATA, closedByParent = false, isVoid = false,\n       ignoreFirstLf = false}: {\n        closedByChildren?: string[],\n        closedByParent?: boolean,\n        requiredParents?: string[],\n        implicitNamespacePrefix?: string,\n        contentType?: TagContentType,\n        isVoid?: boolean,\n        ignoreFirstLf?: boolean\n      } = {}) {\n    if (closedByChildren && closedByChildren.length > 0) {\n      closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n    }\n    this.isVoid = isVoid;\n    this.closedByParent = closedByParent || isVoid;\n    if (requiredParents && requiredParents.length > 0) {\n      this.requiredParents = {};\n      // The first parent is the list is automatically when none of the listed parents are present\n      this.parentToAdd = requiredParents[0];\n      requiredParents.forEach(tagName => this.requiredParents[tagName] = true);\n    }\n    this.implicitNamespacePrefix = implicitNamespacePrefix;\n    this.contentType = contentType;\n    this.ignoreFirstLf = ignoreFirstLf;\n  }\n/**\n * @param {?} currentParent\n * @return {?}\n */\nrequireExtraParent(currentParent: string): boolean {\n    if (!this.requiredParents) {\n      return false;\n    }\n\n    if (!currentParent) {\n      return true;\n    }\n\n    const /** @type {?} */ lcParent = currentParent.toLowerCase();\n    const /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n    return !isParentTemplate && this.requiredParents[lcParent] != true;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nisClosedByChild(name: string): boolean {\n    return this.isVoid || name.toLowerCase() in this.closedByChildren;\n  }\n}\n\nfunction HtmlTagDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nHtmlTagDefinition.prototype.closedByChildren;\n/** @type {?} */\nHtmlTagDefinition.prototype.closedByParent;\n/** @type {?} */\nHtmlTagDefinition.prototype.requiredParents;\n/** @type {?} */\nHtmlTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nHtmlTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nHtmlTagDefinition.prototype.contentType;\n/** @type {?} */\nHtmlTagDefinition.prototype.isVoid;\n/** @type {?} */\nHtmlTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nHtmlTagDefinition.prototype.canSelfClose;\n}\n\n\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nconst /** @type {?} */ TAG_DEFINITIONS: {[key: string]: HtmlTagDefinition} = {\n  'base': new HtmlTagDefinition({isVoid: true}),\n  'meta': new HtmlTagDefinition({isVoid: true}),\n  'area': new HtmlTagDefinition({isVoid: true}),\n  'embed': new HtmlTagDefinition({isVoid: true}),\n  'link': new HtmlTagDefinition({isVoid: true}),\n  'img': new HtmlTagDefinition({isVoid: true}),\n  'input': new HtmlTagDefinition({isVoid: true}),\n  'param': new HtmlTagDefinition({isVoid: true}),\n  'hr': new HtmlTagDefinition({isVoid: true}),\n  'br': new HtmlTagDefinition({isVoid: true}),\n  'source': new HtmlTagDefinition({isVoid: true}),\n  'track': new HtmlTagDefinition({isVoid: true}),\n  'wbr': new HtmlTagDefinition({isVoid: true}),\n  'p': new HtmlTagDefinition({\n    closedByChildren: [\n      'address', 'article', 'aside', 'blockquote', 'div', 'dl',      'fieldset', 'footer', 'form',\n      'h1',      'h2',      'h3',    'h4',         'h5',  'h6',      'header',   'hgroup', 'hr',\n      'main',    'nav',     'ol',    'p',          'pre', 'section', 'table',    'ul'\n    ],\n    closedByParent: true\n  }),\n  'thead': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot']}),\n  'tbody': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot'], closedByParent: true}),\n  'tfoot': new HtmlTagDefinition({closedByChildren: ['tbody'], closedByParent: true}),\n  'tr': new HtmlTagDefinition({\n    closedByChildren: ['tr'],\n    requiredParents: ['tbody', 'tfoot', 'thead'],\n    closedByParent: true\n  }),\n  'td': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'th': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'col': new HtmlTagDefinition({requiredParents: ['colgroup'], isVoid: true}),\n  'svg': new HtmlTagDefinition({implicitNamespacePrefix: 'svg'}),\n  'math': new HtmlTagDefinition({implicitNamespacePrefix: 'math'}),\n  'li': new HtmlTagDefinition({closedByChildren: ['li'], closedByParent: true}),\n  'dt': new HtmlTagDefinition({closedByChildren: ['dt', 'dd']}),\n  'dd': new HtmlTagDefinition({closedByChildren: ['dt', 'dd'], closedByParent: true}),\n  'rb': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rt': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rtc': new HtmlTagDefinition({closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true}),\n  'rp': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'optgroup': new HtmlTagDefinition({closedByChildren: ['optgroup'], closedByParent: true}),\n  'option': new HtmlTagDefinition({closedByChildren: ['option', 'optgroup'], closedByParent: true}),\n  'pre': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'listing': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'style': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'script': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'title': new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT}),\n  'textarea':\n      new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true}),\n};\n\nconst /** @type {?} */ _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getHtmlTagDefinition(tagName: string): HtmlTagDefinition {\n  return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}","\nexport type TagContentType = number;\nexport let TagContentType: any = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n\n\n// TODO(vicb): read-only when TS supports it\nexport interface TagDefinition {\n  closedByParent: boolean;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean;\n\n  requireExtraParent(currentParent: string): boolean;\n\n  isClosedByChild(name: string): boolean;\n}\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName: string): [string, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nexport function getNsPrefix(fullName: string): string {\n  return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nexport function mergeNsAndName(prefix: string, localName: string): string {\n  return prefix ? `:${prefix}:${localName}` : localName;\n}\n\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\nexport const /** @type {?} */ NAMED_ENTITIES: {[k: string]: string} = {\n  'Aacute': '\\u00C1',\n  'aacute': '\\u00E1',\n  'Acirc': '\\u00C2',\n  'acirc': '\\u00E2',\n  'acute': '\\u00B4',\n  'AElig': '\\u00C6',\n  'aelig': '\\u00E6',\n  'Agrave': '\\u00C0',\n  'agrave': '\\u00E0',\n  'alefsym': '\\u2135',\n  'Alpha': '\\u0391',\n  'alpha': '\\u03B1',\n  'amp': '&',\n  'and': '\\u2227',\n  'ang': '\\u2220',\n  'apos': '\\u0027',\n  'Aring': '\\u00C5',\n  'aring': '\\u00E5',\n  'asymp': '\\u2248',\n  'Atilde': '\\u00C3',\n  'atilde': '\\u00E3',\n  'Auml': '\\u00C4',\n  'auml': '\\u00E4',\n  'bdquo': '\\u201E',\n  'Beta': '\\u0392',\n  'beta': '\\u03B2',\n  'brvbar': '\\u00A6',\n  'bull': '\\u2022',\n  'cap': '\\u2229',\n  'Ccedil': '\\u00C7',\n  'ccedil': '\\u00E7',\n  'cedil': '\\u00B8',\n  'cent': '\\u00A2',\n  'Chi': '\\u03A7',\n  'chi': '\\u03C7',\n  'circ': '\\u02C6',\n  'clubs': '\\u2663',\n  'cong': '\\u2245',\n  'copy': '\\u00A9',\n  'crarr': '\\u21B5',\n  'cup': '\\u222A',\n  'curren': '\\u00A4',\n  'dagger': '\\u2020',\n  'Dagger': '\\u2021',\n  'darr': '\\u2193',\n  'dArr': '\\u21D3',\n  'deg': '\\u00B0',\n  'Delta': '\\u0394',\n  'delta': '\\u03B4',\n  'diams': '\\u2666',\n  'divide': '\\u00F7',\n  'Eacute': '\\u00C9',\n  'eacute': '\\u00E9',\n  'Ecirc': '\\u00CA',\n  'ecirc': '\\u00EA',\n  'Egrave': '\\u00C8',\n  'egrave': '\\u00E8',\n  'empty': '\\u2205',\n  'emsp': '\\u2003',\n  'ensp': '\\u2002',\n  'Epsilon': '\\u0395',\n  'epsilon': '\\u03B5',\n  'equiv': '\\u2261',\n  'Eta': '\\u0397',\n  'eta': '\\u03B7',\n  'ETH': '\\u00D0',\n  'eth': '\\u00F0',\n  'Euml': '\\u00CB',\n  'euml': '\\u00EB',\n  'euro': '\\u20AC',\n  'exist': '\\u2203',\n  'fnof': '\\u0192',\n  'forall': '\\u2200',\n  'frac12': '\\u00BD',\n  'frac14': '\\u00BC',\n  'frac34': '\\u00BE',\n  'frasl': '\\u2044',\n  'Gamma': '\\u0393',\n  'gamma': '\\u03B3',\n  'ge': '\\u2265',\n  'gt': '>',\n  'harr': '\\u2194',\n  'hArr': '\\u21D4',\n  'hearts': '\\u2665',\n  'hellip': '\\u2026',\n  'Iacute': '\\u00CD',\n  'iacute': '\\u00ED',\n  'Icirc': '\\u00CE',\n  'icirc': '\\u00EE',\n  'iexcl': '\\u00A1',\n  'Igrave': '\\u00CC',\n  'igrave': '\\u00EC',\n  'image': '\\u2111',\n  'infin': '\\u221E',\n  'int': '\\u222B',\n  'Iota': '\\u0399',\n  'iota': '\\u03B9',\n  'iquest': '\\u00BF',\n  'isin': '\\u2208',\n  'Iuml': '\\u00CF',\n  'iuml': '\\u00EF',\n  'Kappa': '\\u039A',\n  'kappa': '\\u03BA',\n  'Lambda': '\\u039B',\n  'lambda': '\\u03BB',\n  'lang': '\\u27E8',\n  'laquo': '\\u00AB',\n  'larr': '\\u2190',\n  'lArr': '\\u21D0',\n  'lceil': '\\u2308',\n  'ldquo': '\\u201C',\n  'le': '\\u2264',\n  'lfloor': '\\u230A',\n  'lowast': '\\u2217',\n  'loz': '\\u25CA',\n  'lrm': '\\u200E',\n  'lsaquo': '\\u2039',\n  'lsquo': '\\u2018',\n  'lt': '<',\n  'macr': '\\u00AF',\n  'mdash': '\\u2014',\n  'micro': '\\u00B5',\n  'middot': '\\u00B7',\n  'minus': '\\u2212',\n  'Mu': '\\u039C',\n  'mu': '\\u03BC',\n  'nabla': '\\u2207',\n  'nbsp': '\\u00A0',\n  'ndash': '\\u2013',\n  'ne': '\\u2260',\n  'ni': '\\u220B',\n  'not': '\\u00AC',\n  'notin': '\\u2209',\n  'nsub': '\\u2284',\n  'Ntilde': '\\u00D1',\n  'ntilde': '\\u00F1',\n  'Nu': '\\u039D',\n  'nu': '\\u03BD',\n  'Oacute': '\\u00D3',\n  'oacute': '\\u00F3',\n  'Ocirc': '\\u00D4',\n  'ocirc': '\\u00F4',\n  'OElig': '\\u0152',\n  'oelig': '\\u0153',\n  'Ograve': '\\u00D2',\n  'ograve': '\\u00F2',\n  'oline': '\\u203E',\n  'Omega': '\\u03A9',\n  'omega': '\\u03C9',\n  'Omicron': '\\u039F',\n  'omicron': '\\u03BF',\n  'oplus': '\\u2295',\n  'or': '\\u2228',\n  'ordf': '\\u00AA',\n  'ordm': '\\u00BA',\n  'Oslash': '\\u00D8',\n  'oslash': '\\u00F8',\n  'Otilde': '\\u00D5',\n  'otilde': '\\u00F5',\n  'otimes': '\\u2297',\n  'Ouml': '\\u00D6',\n  'ouml': '\\u00F6',\n  'para': '\\u00B6',\n  'permil': '\\u2030',\n  'perp': '\\u22A5',\n  'Phi': '\\u03A6',\n  'phi': '\\u03C6',\n  'Pi': '\\u03A0',\n  'pi': '\\u03C0',\n  'piv': '\\u03D6',\n  'plusmn': '\\u00B1',\n  'pound': '\\u00A3',\n  'prime': '\\u2032',\n  'Prime': '\\u2033',\n  'prod': '\\u220F',\n  'prop': '\\u221D',\n  'Psi': '\\u03A8',\n  'psi': '\\u03C8',\n  'quot': '\\u0022',\n  'radic': '\\u221A',\n  'rang': '\\u27E9',\n  'raquo': '\\u00BB',\n  'rarr': '\\u2192',\n  'rArr': '\\u21D2',\n  'rceil': '\\u2309',\n  'rdquo': '\\u201D',\n  'real': '\\u211C',\n  'reg': '\\u00AE',\n  'rfloor': '\\u230B',\n  'Rho': '\\u03A1',\n  'rho': '\\u03C1',\n  'rlm': '\\u200F',\n  'rsaquo': '\\u203A',\n  'rsquo': '\\u2019',\n  'sbquo': '\\u201A',\n  'Scaron': '\\u0160',\n  'scaron': '\\u0161',\n  'sdot': '\\u22C5',\n  'sect': '\\u00A7',\n  'shy': '\\u00AD',\n  'Sigma': '\\u03A3',\n  'sigma': '\\u03C3',\n  'sigmaf': '\\u03C2',\n  'sim': '\\u223C',\n  'spades': '\\u2660',\n  'sub': '\\u2282',\n  'sube': '\\u2286',\n  'sum': '\\u2211',\n  'sup': '\\u2283',\n  'sup1': '\\u00B9',\n  'sup2': '\\u00B2',\n  'sup3': '\\u00B3',\n  'supe': '\\u2287',\n  'szlig': '\\u00DF',\n  'Tau': '\\u03A4',\n  'tau': '\\u03C4',\n  'there4': '\\u2234',\n  'Theta': '\\u0398',\n  'theta': '\\u03B8',\n  'thetasym': '\\u03D1',\n  'thinsp': '\\u2009',\n  'THORN': '\\u00DE',\n  'thorn': '\\u00FE',\n  'tilde': '\\u02DC',\n  'times': '\\u00D7',\n  'trade': '\\u2122',\n  'Uacute': '\\u00DA',\n  'uacute': '\\u00FA',\n  'uarr': '\\u2191',\n  'uArr': '\\u21D1',\n  'Ucirc': '\\u00DB',\n  'ucirc': '\\u00FB',\n  'Ugrave': '\\u00D9',\n  'ugrave': '\\u00F9',\n  'uml': '\\u00A8',\n  'upsih': '\\u03D2',\n  'Upsilon': '\\u03A5',\n  'upsilon': '\\u03C5',\n  'Uuml': '\\u00DC',\n  'uuml': '\\u00FC',\n  'weierp': '\\u2118',\n  'Xi': '\\u039E',\n  'xi': '\\u03BE',\n  'Yacute': '\\u00DD',\n  'yacute': '\\u00FD',\n  'yen': '\\u00A5',\n  'yuml': '\\u00FF',\n  'Yuml': '\\u0178',\n  'Zeta': '\\u0396',\n  'zeta': '\\u03B6',\n  'zwj': '\\u200D',\n  'zwnj': '\\u200C',\n};\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const $COMPILE = '$compile';\nexport const /** @type {?} */ $CONTROLLER = '$controller';\nexport const /** @type {?} */ $DELEGATE = '$delegate';\nexport const /** @type {?} */ $HTTP_BACKEND = '$httpBackend';\nexport const /** @type {?} */ $INJECTOR = '$injector';\nexport const /** @type {?} */ $PARSE = '$parse';\nexport const /** @type {?} */ $PROVIDE = '$provide';\nexport const /** @type {?} */ $ROOT_SCOPE = '$rootScope';\nexport const /** @type {?} */ $SCOPE = '$scope';\nexport const /** @type {?} */ $TEMPLATE_CACHE = '$templateCache';\nexport const /** @type {?} */ $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const /** @type {?} */ $$TESTABILITY = '$$testability';\n\nexport const /** @type {?} */ COMPILER_KEY = '$$angularCompiler';\nexport const /** @type {?} */ GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const /** @type {?} */ INJECTOR_KEY = '$$angularInjector';\nexport const /** @type {?} */ NG_ZONE_KEY = '$$angularNgZone';\n\nexport const /** @type {?} */ REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const /** @type {?} */ REQUIRE_NG_MODEL = '?ngModel';\n\nexport const /** @type {?} */ UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function { $inject?: Ng1Token[]; }\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(): any;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: boolean|'element'|{[key: string]: string};\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: boolean;\n}\nexport interface IAttributes { $observe(attr: string, fn: (v: string) => void): void; }\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction {\n  // Let's hint but not force cloneAttachFn's signature\n  (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  bind?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n};\nexport interface IProvider { $get: IInjectable; }\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService { (expression: string): ICompiledExpression; }\nexport interface ICompiledExpression { assign(context: any, value: any): any; }\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n/**\n * @return {?}\n */\nfunction noNg() {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\nlet /** @type {?} */ angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig) =>\n                 void,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: (e: Element | string) => IAugmentedJQuery,\n  version: {major: number}, resumeBootstrap?: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = /** @type {?} */(( <any>{\n  bootstrap: noNg,\n  module: noNg,\n  element: noNg,\n  version: noNg,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n}));\n\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = ( /** @type {?} */((<any>window))).angular;\n  }\n} catch ( /** @type {?} */e) {\n  // ignore in CJS mode.\n}\n\nexport const /** @type {?} */ bootstrap = angular.bootstrap;\nexport const /** @type {?} */ module = angular.module;\nexport const /** @type {?} */ element = angular.element;\nexport const /** @type {?} */ version = angular.version;\nexport const /** @type {?} */ resumeBootstrap = angular.resumeBootstrap;\nexport const /** @type {?} */ getTestability = angular.getTestability;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.0.0-rc.4-b7212f5');\n"],"names":["angular.module","angular.element","element","angular.bootstrap","INITIAL_VALUE","ParentInjectorPromise","module"],"mappings":"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"}
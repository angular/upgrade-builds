{"version":3,"file":"upgrade.js","sources":["../../../../packages/upgrade/index.ts","../../../../packages/upgrade/public_api.ts","../../../../packages/upgrade/src/dynamic/upgrade_adapter.ts","../../../../packages/upgrade/src/dynamic/upgrade_ng1_adapter.ts","../../../../packages/upgrade/src/common/upgrade_helper.ts","../../../../packages/upgrade/src/common/downgrade_injectable.ts","../../../../packages/upgrade/src/common/downgrade_component.ts","../../../../packages/upgrade/src/common/downgrade_component_adapter.ts","../../../../packages/upgrade/src/common/util.ts","../../../../packages/upgrade/src/common/component_info.ts","../../../../packages/upgrade/src/common/constants.ts","../../../../packages/upgrade/src/common/angular1.ts","../../../../packages/upgrade/src/common/version.ts"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport {VERSION,UpgradeAdapter,UpgradeAdapterRef} from './public_api';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the upgrade/dynamic package, allowing\n * Angular 1 and Angular 2+ to run side by side in the same application.\n */\nexport {VERSION} from './src/common/version';\nexport {UpgradeAdapter, UpgradeAdapterRef} from './src/dynamic/upgrade_adapter';\n\n// This file only re-exports content of the `src` folder. Keep it that way.\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, CompilerOptions, Directive, Injector, NgModule, NgModuleRef, NgZone, Provider, Testability, Type} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport * as angular from '../common/angular1';\nimport {$$TESTABILITY, $COMPILE, $INJECTOR, $ROOT_SCOPE, COMPILER_KEY, INJECTOR_KEY, LAZY_MODULE_REF, NG_ZONE_KEY} from '../common/constants';\nimport {downgradeComponent} from '../common/downgrade_component';\nimport {downgradeInjectable} from '../common/downgrade_injectable';\nimport {Deferred, controllerKey, onError} from '../common/util';\n\nimport {UpgradeNg1ComponentAdapterBuilder} from './upgrade_ng1_adapter';\n\nlet /** @type {?} */ upgradeCount: number = 0;\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n * \n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n * \n * ## Mental Model\n * \n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n * \n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n * \n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * \n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * \n * ```\n * \n * \\@stable\n */\nexport class UpgradeAdapter {\nprivate idPrefix: string = `NG2_UPGRADE_${upgradeCount++}_`;\nprivate downgradedComponents: Type<any>[] = [];\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n */\n\nprivate ng1ComponentsToBeUpgraded: {[name: string]: UpgradeNg1ComponentAdapterBuilder} = {};\nprivate upgradedProviders: Provider[] = [];\nprivate ngZone: NgZone;\nprivate ng1Module: angular.IModule;\nprivate moduleRef: NgModuleRef<any>|null = null;\nprivate ng2BootstrapDeferred: Deferred<angular.IInjectorService>;\n/**\n * @param {?} ng2AppModule\n * @param {?=} compilerOptions\n */\nconstructor(private ng2AppModule: Type<any>,\nprivate compilerOptions?: CompilerOptions) {\n    if (!ng2AppModule) {\n      throw new Error(\n          'UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.');\n    }\n  }\n/**\n * Allows Angular Component to be used from AngularJS.\n * \n * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n * Angular Component. The adapter will bootstrap Angular component from within the\n * AngularJS template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in AngularJS template. This means that the\n *    host element is controlled by AngularJS, but the component's view will be controlled by\n *    Angular.\n * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n *    syntax. This has to be done, this way because we must follow Angular components do not\n *    declare how the attributes should be interpreted.\n * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n *    by way of the `ControlValueAccessor` interface from \\@angular/forms. Only components that\n *    implement this interface are eligible.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n *   - ng-model: `<comp ng-model=\"name\">`\n * - Content projection: yes\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n * \n * \\@Component({ \n *   selector: 'greet',\n *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n * })\n * class Greeter {\n *   \\@Input() salutation: string;\n *   \\@Input() name: string;\n * }\n * \n * \\@NgModule({ \n *   declarations: [Greeter],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML =\n *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n * });\n * ```\n * @param {?} component\n * @return {?}\n */\ndowngradeNg2Component(component: Type<any>): Function {\n    this.downgradedComponents.push(component);\n\n    return downgradeComponent({component});\n  }\n/**\n * Allows AngularJS Component to be used from Angular.\n * \n * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n * directive. The adapter will bootstrap AngularJS component from within the Angular\n * template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in Angular template. This means that the\n *    host element is controlled by Angular, but the component's view will be controlled by\n *    AngularJS.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n * - Transclusion: yes\n * - Only some of the features of\n *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n *   supported:\n *   - `compile`: not supported because the host element is owned by Angular, which does\n *     not allow modifying DOM structure during compilation.\n *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n *   - `controllerAs`: supported.\n *   - `bindToController`: supported.\n *   - `link`: supported. (NOTE: only pre-link function is supported.)\n *   - `name`: supported.\n *   - `priority`: ignored.\n *   - `replace`: not supported.\n *   - `require`: supported.\n *   - `restrict`: must be set to 'E'.\n *   - `scope`: supported.\n *   - `template`: supported.\n *   - `templateUrl`: supported.\n *   - `terminal`: ignored.\n *   - `transclude`: supported.\n * \n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * \n * module.directive('greet', function() {\n *   return {\n *     scope: {salutation: '=', name: '=' },\n *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n *   };\n * });\n * \n * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n * \n * \\@Component({ \n *   selector: 'ng2',\n *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2></ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n * });\n * ```\n * @param {?} name\n * @return {?}\n */\nupgradeNg1Component(name: string): Type<any> {\n    if (( /** @type {?} */((<any>this.ng1ComponentsToBeUpgraded))).hasOwnProperty(name)) {\n      return this.ng1ComponentsToBeUpgraded[name].type;\n    } else {\n      return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n          .type;\n    }\n  }\n/**\n * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n * Use this instead of `angular.mock.module()` to load the upgrade module into\n * the AngularJS testing injector.\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * \n * // configure the adapter with upgrade/downgrade components and services\n * upgradeAdapter.downgradeNg2Component(MyComponent);\n * \n * let upgradeAdapterRef: UpgradeAdapterRef;\n * let $compile, $rootScope;\n * \n * // We must register the adapter before any calls to `inject()`\n * beforeEach(() => {\n *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n * });\n * \n * beforeEach(inject((_$compile_, _$rootScope_) => {\n *   $compile = _$compile_;\n *   $rootScope = _$rootScope_;\n * }));\n * \n * it(\"says hello\", (done) => {\n *   upgradeAdapterRef.ready(() => {\n *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n *     $rootScope.$apply();\n *     expect(element.html()).toContain(\"Hello World\");\n *     done();\n *   })\n * });\n * \n * ```\n * \n * @param {?=} modules any AngularJS modules that the upgrade module should depend upon\n * @return {?} an {\\@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n * run assertions once the Angular components are ready to test through AngularJS.\n */\nregisterForNg1Tests(modules?: string[]): UpgradeAdapterRef {\n    const /** @type {?} */ windowNgMock = ( /** @type {?} */((window as any)))['angular'].mock;\n    if (!windowNgMock || !windowNgMock.module) {\n      throw new Error('Failed to find \\'angular.mock.module\\'.');\n    }\n    this.declareNg1Module(modules);\n    windowNgMock.module(this.ng1Module.name);\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n    this.ng2BootstrapDeferred.promise.then(\n        (ng1Injector) => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); }, onError);\n    return upgrade;\n  }\n/**\n * Bootstrap a hybrid AngularJS / Angular application.\n * \n * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n * AngularJS, this bootstrap is asynchronous.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(MyNg2Module);\n * const module = angular.module('myExample', []);\n * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n * \n * module.directive('ng1', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n * })\n * class Ng2 {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * ```\n * @param {?} element\n * @param {?=} modules\n * @param {?=} config\n * @return {?}\n */\nbootstrap(element: Element, modules?: any[], config?: angular.IAngularBootstrapConfig):\n      UpgradeAdapterRef {\n    this.declareNg1Module(modules);\n\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const /** @type {?} */ windowAngular = ( /** @type {?} */((window as any)) /** TODO #???? */)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    this.ngZone.run(() => { angular.bootstrap(element, [this.ng1Module.name], /** @type {?} */(( config))); });\n    const /** @type {?} */ ng1BootstrapPromise = new Promise((resolve) => {\n      if (windowAngular.resumeBootstrap) {\n        const /** @type {?} */ originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n        windowAngular.resumeBootstrap = function() {\n          windowAngular.resumeBootstrap = originalResumeBootstrap;\n          windowAngular.resumeBootstrap.apply(this, arguments);\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n    });\n\n    Promise.all([this.ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(([ng1Injector]) => { /** @type {?} */((\n      angular.element(element).data))(controllerKey(INJECTOR_KEY), /** @type {?} */(( this.moduleRef)).injector); /** @type {?} */((\n      this.moduleRef)).injector.get(NgZone).run(\n          () => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); });\n    }, onError);\n    return upgrade;\n  }\n/**\n * Allows AngularJS service to be accessible from Angular.\n * \n * \n * ### Example\n * \n * ```\n * class Login { ... }\n * class Server { ... }\n * \n * \\@Injectable() \n * class Example {\n *   constructor(\\@Inject('server') server, login: Login) {\n *     ...\n *   }\n * }\n * \n * const module = angular.module('myExample', []);\n * module.service('server', Server);\n * module.service('login', Login);\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * adapter.upgradeNg1Provider('server');\n * adapter.upgradeNg1Provider('login', {asToken: Login});\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng2Injector.get(Example);\n * });\n * \n * ```\n * @param {?} name\n * @param {?=} options\n * @return {?}\n */\nupgradeNg1Provider(name: string, options?: {asToken: any}) {\n    const /** @type {?} */ token = options && options.asToken || name;\n    this.upgradedProviders.push({\n      provide: token,\n      useFactory: ($injector: angular.IInjectorService) => $injector.get(name),\n      deps: [$INJECTOR]\n    });\n  }\n/**\n * Allows Angular service to be accessible from AngularJS.\n * \n * \n * ### Example\n * \n * ```\n * class Example {\n * }\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * \n * const module = angular.module('myExample', []);\n * module.factory('example', adapter.downgradeNg2Provider(Example));\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng1Injector.get('example');\n * });\n * \n * ```\n * @param {?} token\n * @return {?}\n */\ndowngradeNg2Provider(token: any): Function { return downgradeInjectable(token); }\n/**\n * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n * hybrid application.\n * \n * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n * \n * @param {?=} modules The AngularJS modules that this upgrade module should depend upon.\n * @return {?} The AngularJS upgrade module that is declared by this method\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * upgradeAdapter.declareNg1Module(['heroApp']);\n * ```\n */\n\nprivate declareNg1Module(modules: string[] = []): angular.IModule {\n    const /** @type {?} */ delayApplyExps: Function[] = [];\n    let /** @type {?} */ original$applyFn: Function;\n    let /** @type {?} */ rootScopePrototype: any;\n    let /** @type {?} */ rootScope: angular.IRootScopeService;\n    const /** @type {?} */ upgradeAdapter = this;\n    const /** @type {?} */ ng1Module = this.ng1Module = angular.module(this.idPrefix, modules);\n    const /** @type {?} */ platformRef = platformBrowserDynamic();\n\n    this.ngZone = new NgZone({enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec')});\n    this.ng2BootstrapDeferred = new Deferred();\n    ng1Module.factory(INJECTOR_KEY, () => /** @type {?} */(( this.moduleRef)).injector.get(Injector))\n        .factory(\n            LAZY_MODULE_REF,\n            [INJECTOR_KEY, (injector: Injector) => ({injector, needsInNgZone: false})])\n        .constant(NG_ZONE_KEY, this.ngZone)\n        .factory(COMPILER_KEY, () => /** @type {?} */(( this.moduleRef)).injector.get(Compiler))\n        .config([\n          '$provide', '$injector',\n          (provide: angular.IProvideService, ng1Injector: angular.IInjectorService) => {\n            provide.decorator($ROOT_SCOPE, [\n              '$delegate',\n              function(rootScopeDelegate: angular.IRootScopeService) {\n                // Capture the root apply so that we can delay first call to $apply until we\n                // bootstrap Angular and then we replay and restore the $apply.\n                rootScopePrototype = rootScopeDelegate.constructor.prototype;\n                if (rootScopePrototype.hasOwnProperty('$apply')) {\n                  original$applyFn = rootScopePrototype.$apply;\n                  rootScopePrototype.$apply = (exp: any) => delayApplyExps.push(exp);\n                } else {\n                  throw new Error('Failed to find \\'$apply\\' on \\'$rootScope\\'!');\n                }\n                return rootScope = rootScopeDelegate;\n              }\n            ]);\n            if (ng1Injector.has($$TESTABILITY)) {\n              provide.decorator($$TESTABILITY, [\n                '$delegate',\n                function(testabilityDelegate: angular.ITestabilityService) {\n                  const /** @type {?} */ originalWhenStable: Function = testabilityDelegate.whenStable;\n                  // Cannot use arrow function below because we need the context\n                  const /** @type {?} */ newWhenStable = function(callback: Function) {\n                    originalWhenStable.call(this, function() {\n                      const /** @type {?} */ ng2Testability: Testability = /** @type {?} */((\n                          upgradeAdapter.moduleRef)).injector.get(Testability);\n                      if (ng2Testability.isStable()) {\n                        callback.apply(this, arguments);\n                      } else {\n                        ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                      }\n                    });\n                  };\n\n                  testabilityDelegate.whenStable = newWhenStable;\n                  return testabilityDelegate;\n                }\n              ]);\n            }\n          }\n        ]);\n\n    ng1Module.run([\n      '$injector', '$rootScope',\n      (ng1Injector: angular.IInjectorService, rootScope: angular.IRootScopeService) => {\n        UpgradeNg1ComponentAdapterBuilder.resolve(this.ng1ComponentsToBeUpgraded, ng1Injector)\n            .then(() => {\n              // At this point we have ng1 injector and we have prepared\n              // ng1 components to be upgraded, we now can bootstrap ng2.\n              const /** @type {?} */ DynamicNgUpgradeModule =\n                  NgModule({\n                    providers: [\n                      {provide: $INJECTOR, useFactory: () => ng1Injector},\n                      {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n                      this.upgradedProviders\n                    ],\n                    imports: [this.ng2AppModule],\n                    entryComponents: this.downgradedComponents\n                  }).Class({\n                    constructor: function DynamicNgUpgradeModule() {},\n                    ngDoBootstrap: function() {}\n                  });\n              ( /** @type {?} */((platformRef as any)))\n                  ._bootstrapModuleWithZone(\n                      DynamicNgUpgradeModule, this.compilerOptions, this.ngZone)\n                  .then((ref: NgModuleRef<any>) => {\n                    this.moduleRef = ref;\n                    this.ngZone.run(() => {\n                      if (rootScopePrototype) {\n                        rootScopePrototype.$apply = original$applyFn;  // restore original $apply\n                        while (delayApplyExps.length) {\n                          rootScope.$apply(delayApplyExps.shift());\n                        }\n                        rootScopePrototype = null;\n                      }\n                    });\n                  })\n                  .then(() => this.ng2BootstrapDeferred.resolve(ng1Injector), onError)\n                  .then(() => {\n                    let /** @type {?} */ subscription =\n                        this.ngZone.onMicrotaskEmpty.subscribe({next: () => rootScope.$digest()});\n                    rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                  });\n            })\n            .catch((e) => this.ng2BootstrapDeferred.reject(e));\n      }\n    ]);\n\n    return ng1Module;\n  }\n}\n\nfunction UpgradeAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapter.prototype.idPrefix;\n/** @type {?} */\nUpgradeAdapter.prototype.downgradedComponents;\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n * @type {?}\n */\nUpgradeAdapter.prototype.ng1ComponentsToBeUpgraded;\n/** @type {?} */\nUpgradeAdapter.prototype.upgradedProviders;\n/** @type {?} */\nUpgradeAdapter.prototype.ngZone;\n/** @type {?} */\nUpgradeAdapter.prototype.ng1Module;\n/** @type {?} */\nUpgradeAdapter.prototype.moduleRef;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2BootstrapDeferred;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2AppModule;\n/** @type {?} */\nUpgradeAdapter.prototype.compilerOptions;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) { /** @type {?} */((\n    // store the promise on the element\n    element.data))(controllerKey(INJECTOR_KEY), this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector; /** @type {?} */((\n\n    // reset the element data to point to the real injector\n    this.element.data))(controllerKey(INJECTOR_KEY), injector);\n\n    // clean out the element to prevent memory leaks\n    this.element = /** @type {?} */(( null));\n\n    // run all the queued callbacks\n    this.callbacks.forEach((callback) => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n * \n * \\@stable\n */\nexport class UpgradeAdapterRef {\nprivate _readyFn: ((upgradeAdapterRef?: UpgradeAdapterRef) => void)|null = null;\npublic ng1RootScope: angular.IRootScopeService = /** @type {?} */(( null));\npublic ng1Injector: angular.IInjectorService = /** @type {?} */(( null));\npublic ng2ModuleRef: NgModuleRef<any> = /** @type {?} */(( null));\npublic ng2Injector: Injector = /** @type {?} */(( null));\n/**\n * @param {?} ngModuleRef\n * @param {?} ng1Injector\n * @return {?}\n */\n\nprivate _bootstrapDone(ngModuleRef: NgModuleRef<any>, ng1Injector: angular.IInjectorService) {\n    this.ng2ModuleRef = ngModuleRef;\n    this.ng2Injector = ngModuleRef.injector;\n    this.ng1Injector = ng1Injector;\n    this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n    this._readyFn && this._readyFn(this);\n  }\n/**\n * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n * application has been bootstrapped.\n * \n * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n * require a call to `$apply()`.\n * @param {?} fn\n * @return {?}\n */\n\npublic ready(fn: (upgradeAdapterRef: UpgradeAdapterRef) => void) { this._readyFn = fn; }\n/**\n * Dispose of running hybrid AngularJS / Angular application.\n * @return {?}\n */\n\npublic dispose() { /** @type {?} */((\n    this.ng1Injector)).get($ROOT_SCOPE).$destroy(); /** @type {?} */((\n    this.ng2ModuleRef)).destroy();\n  }\n}\n\nfunction UpgradeAdapterRef_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapterRef.prototype._readyFn;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1RootScope;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1Injector;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2ModuleRef;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2Injector;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, DoCheck, ElementRef, EventEmitter, Inject, Injector, OnChanges, OnInit, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$SCOPE} from '../common/constants';\nimport {IBindingDestination, IControllerInstance, UpgradeHelper} from '../common/upgrade_helper';\nimport {isFunction, strictEquals} from '../common/util';\n\n\nconst /** @type {?} */ CAMEL_CASE = /([A-Z])/g;\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nconst /** @type {?} */ NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nexport class UpgradeNg1ComponentAdapterBuilder {\n  type: Type<any>;\n  inputs: string[] = [];\n  inputsRename: string[] = [];\n  outputs: string[] = [];\n  outputsRename: string[] = [];\n  propertyOutputs: string[] = [];\n  checkProperties: string[] = [];\n  propertyMap: {[name: string]: string} = {};\n  directive: angular.IDirective|null = null;\n  template: string;\n/**\n * @param {?} name\n */\nconstructor(public name: string) {\n    const /** @type {?} */ selector =\n        name.replace(CAMEL_CASE, (all: string, next: string) => '-' + next.toLowerCase());\n    const /** @type {?} */ self = this;\n\n    this.type =\n        Directive({selector: selector, inputs: this.inputsRename, outputs: this.outputsRename})\n            .Class({\n              constructor: [\n                new Inject($SCOPE), Injector, ElementRef,\n                function(scope: angular.IScope, injector: Injector, elementRef: ElementRef) {\n                  const /** @type {?} */ helper = new UpgradeHelper(injector, name, elementRef, this.directive);\n                  return new UpgradeNg1ComponentAdapter(\n                      helper, scope, self.template, self.inputs, self.outputs, self.propertyOutputs,\n                      self.checkProperties, self.propertyMap);\n                }\n              ],\n              ngOnInit: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngOnChanges: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngDoCheck: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngOnDestroy: function() { /* needs to be here for ng2 to properly detect it */ },\n            });\n  }\n/**\n * @return {?}\n */\nextractBindings() {\n    const /** @type {?} */ btcIsObject = typeof /** @type {?} */(( this.directive)).bindToController === 'object';\n    if (btcIsObject && Object.keys( /** @type {?} */((this.directive)).scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time are not supported.`);\n    }\n\n    const /** @type {?} */ context = (btcIsObject) ? /** @type {?} */(( this.directive)).bindToController : /** @type {?} */(( this.directive)).scope;\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const /** @type {?} */ definition = context[propName];\n        const /** @type {?} */ bindingType = definition.charAt(0);\n        const /** @type {?} */ bindingOptions = definition.charAt(1);\n        const /** @type {?} */ attrName = definition.substring(bindingOptions === '?' ? 2 : 1) || propName;\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        const /** @type {?} */ inputName = `input_${attrName}`;\n        const /** @type {?} */ inputNameRename = `${inputName}: ${attrName}`;\n        const /** @type {?} */ outputName = `output_${attrName}`;\n        const /** @type {?} */ outputNameRename = `${outputName}: ${attrName}`;\n        const /** @type {?} */ outputNameRenameChange = `${outputNameRename}Change`;\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            this.inputs.push(inputName);\n            this.inputsRename.push(inputNameRename);\n            this.propertyMap[inputName] = propName;\n            break;\n          case '=':\n            this.inputs.push(inputName);\n            this.inputsRename.push(inputNameRename);\n            this.propertyMap[inputName] = propName;\n\n            this.outputs.push(outputName);\n            this.outputsRename.push(outputNameRenameChange);\n            this.propertyMap[outputName] = propName;\n\n            this.checkProperties.push(propName);\n            this.propertyOutputs.push(outputName);\n            break;\n          case '&':\n            this.outputs.push(outputName);\n            this.outputsRename.push(outputNameRename);\n            this.propertyMap[outputName] = propName;\n            break;\n          default:\n            let /** @type {?} */ json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n  }\n/**\n * Upgrade ng1 components into Angular.\n * @param {?} exportedComponents\n * @param {?} $injector\n * @return {?}\n */\nstatic resolve(\n      exportedComponents: {[name: string]: UpgradeNg1ComponentAdapterBuilder},\n      $injector: angular.IInjectorService): Promise<string[]> {\n    const /** @type {?} */ promises = Object.keys(exportedComponents).map(name => {\n      const /** @type {?} */ exportedComponent = exportedComponents[name];\n      exportedComponent.directive = UpgradeHelper.getDirective($injector, name);\n      exportedComponent.extractBindings();\n\n      return Promise\n          .resolve(UpgradeHelper.getTemplate($injector, exportedComponent.directive, true))\n          .then(template => exportedComponent.template = template);\n    });\n\n    return Promise.all(promises);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapterBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.type;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyOutputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyMap;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.template;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.name;\n}\n\nclass UpgradeNg1ComponentAdapter implements OnInit, OnChanges, DoCheck {\nprivate controllerInstance: IControllerInstance|null = null;\n  destinationObj: IBindingDestination|null = null;\n  checkLastValues: any[] = [];\nprivate directive: angular.IDirective;\n  element: Element;\n  $element: any = null;\n  componentScope: angular.IScope;\n/**\n * @param {?} helper\n * @param {?} scope\n * @param {?} template\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} propOuts\n * @param {?} checkProperties\n * @param {?} propertyMap\n */\nconstructor(\nprivate helper: UpgradeHelper, scope: angular.IScope,\nprivate template: string,\nprivate inputs: string[],\nprivate outputs: string[],\nprivate propOuts: string[],\nprivate checkProperties: string[],\nprivate propertyMap: {[key: string]: string}) {\n    this.directive = helper.directive;\n    this.element = helper.element;\n    this.$element = helper.$element;\n    this.componentScope = scope.$new(!!this.directive.scope);\n\n    const /** @type {?} */ controllerType = this.directive.controller;\n\n    if (this.directive.bindToController && controllerType) {\n      this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n      this.destinationObj = this.controllerInstance;\n    } else {\n      this.destinationObj = this.componentScope;\n    }\n\n    for (let /** @type {?} */ i = 0; i < inputs.length; i++) {\n      ( /** @type {?} */((this as any)))[inputs[i]] = null;\n    }\n    for (let /** @type {?} */ j = 0; j < outputs.length; j++) {\n      const /** @type {?} */ emitter = ( /** @type {?} */((this as any)))[outputs[j]] = new EventEmitter<any>();\n      this.setComponentProperty(\n          outputs[j], (emitter => (value: any) => emitter.emit(value))(emitter));\n    }\n    for (let /** @type {?} */ k = 0; k < propOuts.length; k++) {\n      this.checkLastValues.push(INITIAL_VALUE);\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    // Collect contents, insert and compile template\n    const /** @type {?} */ attachChildNodes: angular.ILinkFn|undefined = this.helper.prepareTransclusion();\n    const /** @type {?} */ linkFn = this.helper.compileTemplate(this.template);\n\n    // Instantiate controller (if not already done so)\n    const /** @type {?} */ controllerType = this.directive.controller;\n    const /** @type {?} */ bindToController = this.directive.bindToController;\n    if (controllerType && !bindToController) {\n      this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n    }\n\n    // Require other controllers\n    const /** @type {?} */ requiredControllers =\n        this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n\n    // Hook: $onInit\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    // Linking\n    const /** @type {?} */ link = this.directive.link;\n    const /** @type {?} */ preLink = (typeof link == 'object') && ( /** @type {?} */((link as angular.IDirectivePrePost))).pre;\n    const /** @type {?} */ postLink = (typeof link == 'object') ? ( /** @type {?} */((link as angular.IDirectivePrePost))).post : link;\n    const /** @type {?} */ attrs: angular.IAttributes = NOT_SUPPORTED;\n    const /** @type {?} */ transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n    if (preLink) {\n      preLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    linkFn(this.componentScope, /** @type {?} */(( null)), {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    // Hook: $postLink\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ ng1Changes: any = {};\n    Object.keys(changes).forEach(name => {\n      const /** @type {?} */ change: SimpleChange = changes[name];\n      this.setComponentProperty(name, change.currentValue);\n      ng1Changes[this.propertyMap[name]] = change;\n    });\n\n    if (isFunction( /** @type {?} */((this.destinationObj)).$onChanges)) { /** @type {?} */(( /** @type {?} */((\n      this.destinationObj)).$onChanges))(ng1Changes);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    const /** @type {?} */ destinationObj = this.destinationObj;\n    const /** @type {?} */ lastValues = this.checkLastValues;\n    const /** @type {?} */ checkProperties = this.checkProperties;\n    const /** @type {?} */ propOuts = this.propOuts;\n    checkProperties.forEach((propName, i) => {\n      const /** @type {?} */ value = /** @type {?} */(( destinationObj))[propName];\n      const /** @type {?} */ last = lastValues[i];\n      if (!strictEquals(last, value)) {\n        const /** @type {?} */ eventEmitter: EventEmitter<any> = ( /** @type {?} */((this as any)))[propOuts[i]];\n        eventEmitter.emit(lastValues[i] = value);\n      }\n    });\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      this.controllerInstance.$doCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetComponentProperty(name: string, value: any) { /** @type {?} */((\n    this.destinationObj))[this.propertyMap[name]] = value;\n  }\n}\n\nfunction UpgradeNg1ComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.controllerInstance;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.destinationObj;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkLastValues;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.componentScope;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.helper;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.template;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propOuts;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propertyMap;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ElementRef, Injector, SimpleChanges} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE} from './constants';\nimport {controllerKey, directiveNormalize, isFunction} from './util';\n\n\n// Constants\nconst /** @type {?} */ REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n/**\n * @record\n */\nexport function IBindingDestination() {}\n\n\nfunction IBindingDestination_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n[key: string]: any;\n*/\n/** @type {?|undefined} */\nIBindingDestination.prototype.$onChanges;\n}\n\n\n// Interfaces\nexport interface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n/**\n * @record\n */\nexport function IControllerInstance() {}\n\n\nfunction IControllerInstance_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIControllerInstance.prototype.$doCheck;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$onDestroy;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$onInit;\n/** @type {?|undefined} */\nIControllerInstance.prototype.$postLink;\n}\n\n\nexport interface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\nexport class UpgradeHelper {\npublic readonly $injector: angular.IInjectorService;\npublic readonly element: Element;\npublic readonly $element: angular.IAugmentedJQuery;\npublic readonly directive: angular.IDirective;\nprivate readonly $compile: angular.ICompileService;\nprivate readonly $controller: angular.IControllerService;\n/**\n * @param {?} injector\n * @param {?} name\n * @param {?} elementRef\n * @param {?=} directive\n */\nconstructor(\nprivate injector: Injector,\nprivate name: string, elementRef: ElementRef,\n      directive?: angular.IDirective) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n  }\n/**\n * @param {?} $injector\n * @param {?} name\n * @return {?}\n */\nstatic getDirective($injector: angular.IInjectorService, name: string): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = $injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error(`Only support single directive definition for: ${name}`);\n    }\n\n    const /** @type {?} */ directive = directives[0];\n\n    // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n    // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n    if (directive.compile && !directive.link) notSupported(name, 'compile');\n    if (directive.replace) notSupported(name, 'replace');\n    if (directive.terminal) notSupported(name, 'terminal');\n\n    return directive;\n  }\n/**\n * @param {?} $injector\n * @param {?} directive\n * @param {?=} fetchRemoteTemplate\n * @return {?}\n */\nstatic getTemplate(\n      $injector: angular.IInjectorService, directive: angular.IDirective,\n      fetchRemoteTemplate = false): string|Promise<string> {\n    if (directive.template !== undefined) {\n      return getOrCall<string>(directive.template);\n    } else if (directive.templateUrl) {\n      const /** @type {?} */ $templateCache = /** @type {?} */(( $injector.get($TEMPLATE_CACHE) as angular.ITemplateCacheService));\n      const /** @type {?} */ url = getOrCall<string>(directive.templateUrl);\n      const /** @type {?} */ template = $templateCache.get(url);\n\n      if (template !== undefined) {\n        return template;\n      } else if (!fetchRemoteTemplate) {\n        throw new Error('loading directive templates asynchronously is not supported');\n      }\n\n      return new Promise((resolve, reject) => {\n        const /** @type {?} */ $httpBackend = /** @type {?} */(( $injector.get($HTTP_BACKEND) as angular.IHttpBackendService));\n        $httpBackend('GET', url, null, (status: number, response: string) => {\n          if (status === 200) {\n            resolve($templateCache.put(url, response));\n          } else {\n            reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Directive '${directive.name}' is not a component, it is missing template.`);\n    }\n  }\n/**\n * @param {?} controllerType\n * @param {?} $scope\n * @return {?}\n */\nbuildController(controllerType: angular.IController, $scope: angular.IScope) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance.\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const /** @type {?} */ locals = {'$scope': $scope, '$element': this.$element};\n    const /** @type {?} */ controller = this.$controller(controllerType, locals, null, this.directive.controllerAs); /** @type {?} */((\n\n    this.$element.data))(controllerKey( /** @type {?} */((this.directive.name))), controller);\n\n    return controller;\n  }\n/**\n * @param {?=} template\n * @return {?}\n */\ncompileTemplate(template?: string): angular.ILinkFn {\n    if (template === undefined) {\n      template = /** @type {?} */(( UpgradeHelper.getTemplate(this.$injector, this.directive) as string));\n    }\n\n    return this.compileHtml(template);\n  }\n/**\n * @return {?}\n */\nprepareTransclusion(): angular.ILinkFn|undefined {\n    const /** @type {?} */ transclude = this.directive.transclude;\n    const /** @type {?} */ contentChildNodes = this.extractChildNodes();\n    let /** @type {?} */ $template = contentChildNodes;\n    let /** @type {?} */ attachChildrenFn: angular.ILinkFn|undefined = (scope, cloneAttach) => /** @type {?} */((\n        cloneAttach))($template, scope);\n\n    if (transclude) {\n      const /** @type {?} */ slots = Object.create(null);\n\n      if (typeof transclude === 'object') {\n        $template = [];\n\n        const /** @type {?} */ slotMap = Object.create(null);\n        const /** @type {?} */ filledSlots = Object.create(null);\n\n        // Parse the element selectors.\n        Object.keys(transclude).forEach(slotName => {\n          let /** @type {?} */ selector = transclude[slotName];\n          const /** @type {?} */ optional = selector.charAt(0) === '?';\n          selector = optional ? selector.substring(1) : selector;\n\n          slotMap[selector] = slotName;\n          slots[slotName] = null;            // `null`: Defined but not yet filled.\n          filledSlots[slotName] = optional;  // Consider optional slots as filled.\n        });\n\n        // Add the matching elements into their slot.\n        contentChildNodes.forEach(node => {\n          const /** @type {?} */ slotName = slotMap[directiveNormalize(node.nodeName.toLowerCase())];\n          if (slotName) {\n            filledSlots[slotName] = true;\n            slots[slotName] = slots[slotName] || [];\n            slots[slotName].push(node);\n          } else {\n            $template.push(node);\n          }\n        });\n\n        // Check for required slots that were not filled.\n        Object.keys(filledSlots).forEach(slotName => {\n          if (!filledSlots[slotName]) {\n            throw new Error(`Required transclusion slot '${slotName}' on directive: ${this.name}`);\n          }\n        });\n\n        Object.keys(slots).filter(slotName => slots[slotName]).forEach(slotName => {\n          const /** @type {?} */ nodes = slots[slotName];\n          slots[slotName] = (scope: angular.IScope, cloneAttach: angular.ICloneAttachFunction) => /** @type {?} */((\n              cloneAttach))(nodes, scope);\n        });\n      }\n\n      // Attach `$$slots` to default slot transclude fn.\n      attachChildrenFn.$$slots = slots;\n\n      // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n      // removes all text content after the first interpolation and updates it later, after\n      // evaluating the expressions. This would result in AngularJS failing to recognize text\n      // nodes that start with an interpolation as transcluded content and use the fallback\n      // content instead.\n      // To avoid this issue, we add a\n      // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n      // to empty text nodes (which can only be a result of Angular removing their initial content).\n      // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n      //       will still fail to be detected by AngularJS v1.6+\n      $template.forEach(node => {\n        if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n          node.nodeValue = '\\u200C';\n        }\n      });\n    }\n\n    return attachChildrenFn;\n  }\n/**\n * @param {?} controllerInstance\n * @return {?}\n */\nresolveAndBindRequiredControllers(controllerInstance: IControllerInstance|null) {\n    const /** @type {?} */ directiveRequire = this.getDirectiveRequire();\n    const /** @type {?} */ requiredControllers = this.resolveRequire(directiveRequire);\n\n    if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n      const /** @type {?} */ requiredControllersMap = /** @type {?} */(( requiredControllers as{[key: string]: IControllerInstance}));\n      Object.keys(requiredControllersMap).forEach(key => {\n        controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    return requiredControllers;\n  }\n/**\n * @param {?} html\n * @return {?}\n */\n\nprivate compileHtml(html: string): angular.ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n/**\n * @return {?}\n */\n\nprivate extractChildNodes(): Node[] {\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: Node|null;\n\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n/**\n * @return {?}\n */\n\nprivate getDirectiveRequire(): angular.DirectiveRequireProperty {\n    const /** @type {?} */ require = this.directive.require || /** @type {?} */(( (this.directive.controller && this.directive.name)));\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const /** @type {?} */ value = require[key];\n        const /** @type {?} */ match = /** @type {?} */(( value.match(REQUIRE_PREFIX_RE)));\n        const /** @type {?} */ name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n/**\n * @param {?} require\n * @param {?=} controllerInstance\n * @return {?}\n */\n\nprivate resolveRequire(require: angular.DirectiveRequireProperty, controllerInstance?: any):\n      angular.SingleOrListOrMap<IControllerInstance>|null {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(req));\n    } else if (typeof require === 'object') {\n      const /** @type {?} */ value: {[key: string]: IControllerInstance} = {};\n      Object.keys(require).forEach(key => value[key] = /** @type {?} */(( this.resolveRequire(require[key]))));\n      return value;\n    } else if (typeof require === 'string') {\n      const /** @type {?} */ match = /** @type {?} */(( require.match(REQUIRE_PREFIX_RE)));\n      const /** @type {?} */ inheritType = match[1] || match[3];\n\n      const /** @type {?} */ name = require.substring(match[0].length);\n      const /** @type {?} */ isOptional = !!match[2];\n      const /** @type {?} */ searchParents = !!inheritType;\n      const /** @type {?} */ startOnParent = inheritType === '^^';\n\n      const /** @type {?} */ ctrlKey = controllerKey(name);\n      const /** @type {?} */ elem = startOnParent ? /** @type {?} */(( this.$element.parent))() : this.$element;\n      const /** @type {?} */ value = searchParents ? /** @type {?} */(( elem.inheritedData))(ctrlKey) : /** @type {?} */(( elem.data))(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${this.name}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized 'require' syntax on upgraded directive '${this.name}': ${require}`);\n    }\n  }\n}\n\nfunction UpgradeHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeHelper.prototype.$injector;\n/** @type {?} */\nUpgradeHelper.prototype.element;\n/** @type {?} */\nUpgradeHelper.prototype.$element;\n/** @type {?} */\nUpgradeHelper.prototype.directive;\n/** @type {?} */\nUpgradeHelper.prototype.$compile;\n/** @type {?} */\nUpgradeHelper.prototype.$controller;\n/** @type {?} */\nUpgradeHelper.prototype.injector;\n/** @type {?} */\nUpgradeHelper.prototype.name;\n}\n\n/**\n * @template T\n * @param {?} property\n * @return {?}\n */\nfunction getOrCall<T>(property: T | Function): T {\n  return isFunction(property) ? property() : property;\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n/**\n * @param {?} name\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(name: string, feature: string) {\n  throw new Error(`Upgraded directive '${name}' contains unsupported feature: '${feature}'.`);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allow an Angular service to be accessible from AngularJS.\n * \n * \\@howToUse \n * \n * First ensure that the service to be downgraded is provided in an {\\@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n * \n * and that we have included this in our upgrade app {\\@link NgModule}\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n * \n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n * \n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"example-app\"}\n * \n * \\@description \n * \n * Takes a `token` that identifies a service provided from Angular.\n * \n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n * \n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n * \n * \\@experimental\n * @param {?} token\n * @return {?}\n */\nexport function downgradeInjectable(token: any): Function {\n  const /** @type {?} */ factory = function(i: Injector) { return i.get(token); };\n  ( /** @type {?} */((factory as any)))['$inject'] = [INJECTOR_KEY];\n\n  return factory;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, NgZone, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, LAZY_MODULE_REF, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {LazyModuleRef, controllerKey, getComponentName, isFunction} from './util';\n/**\n * @record\n */\nfunction Thenable() {}\n\n\nfunction Thenable_tsickle_Closure_declarations() {\n/** @type {?} */\nThenable.prototype.then;\n}\n\n\n\ninterface Thenable<T> {\n  then(callback: (value: T) => any): any;\n}\n\nlet /** @type {?} */ downgradeCount = 0;\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an Angular component to be used from AngularJS.\n * \n * \\@howToUse \n * \n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n * \n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n * \n * \\@description \n * \n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n * \n * The parameter contains information about the Component that is being downgraded:\n * \n * * `component: Type<any>`: The type of the Component that will be downgraded\n * \n * \\@experimental\n * @param {?} info\n * @return {?}\n */\nexport function downgradeComponent(info: {\n  component: Type<any>;\n  /** @experimental */\n  propagateDigest?: boolean;\n  /** @deprecated since v4. This parameter is no longer used */\n  inputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  outputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  selectors?: string[];\n}): any /* angular.IInjectable */ {\n  const /** @type {?} */ idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let /** @type {?} */ idCount = 0;\n\n  const /** @type {?} */ directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n    // When using `UpgradeModule`, we don't need to ensure callbacks to Angular APIs (e.g. change\n    // detection) are run inside the Angular zone, because `$digest()` will be run inside the zone\n    // (except if explicitly escaped, in which case we shouldn't force it back in).\n    // When using `downgradeModule()` though, we need to ensure such callbacks are run inside the\n    // Angular zone.\n    let /** @type {?} */ needsNgZone = false;\n    let /** @type {?} */ wrapCallback = <T>(cb: () => T) => cb;\n    let /** @type {?} */ ngZone: NgZone;\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const /** @type {?} */ ngModel: angular.INgModelController = required[1];\n        let /** @type {?} */ parentInjector: Injector|Thenable<Injector>|undefined = required[0];\n        let /** @type {?} */ ranAsync = false;\n\n        if (!parentInjector) {\n          const /** @type {?} */ lazyModuleRef = /** @type {?} */(( $injector.get(LAZY_MODULE_REF) as LazyModuleRef));\n          needsNgZone = lazyModuleRef.needsNgZone;\n          parentInjector = lazyModuleRef.injector || /** @type {?} */(( lazyModuleRef.promise as Promise<Injector>));\n        }\n\n        const /** @type {?} */ doDowngrade = (injector: Injector) => {\n          const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const /** @type {?} */ componentFactory: ComponentFactory<any> = /** @type {?} */((\n              componentFactoryResolver.resolveComponentFactory(info.component)));\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const /** @type {?} */ id = idPrefix + (idCount++);\n          const /** @type {?} */ injectorPromise = new ParentInjectorPromise(element);\n          const /** @type {?} */ facade = new DowngradeComponentAdapter(\n              id, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory, wrapCallback);\n\n          const /** @type {?} */ projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs(needsNgZone, info.propagateDigest);\n          facade.setupOutputs();\n          facade.registerCleanup(needsNgZone);\n\n          injectorPromise.resolve(facade.getInjector());\n\n          if (ranAsync) {\n            // If this is run async, it is possible that it is not run inside a\n            // digest and initial input values will not be detected.\n            scope.$evalAsync(() => {});\n          }\n        };\n\n        const /** @type {?} */ downgradeFn = !needsNgZone ? doDowngrade : (injector: Injector) => {\n          if (!ngZone) {\n            ngZone = injector.get(NgZone);\n            wrapCallback = <T>(cb: () => T) => () =>\n                NgZone.isInAngularZone() ? cb() : ngZone.run(cb);\n          }\n\n          wrapCallback(() => doDowngrade(injector))();\n        };\n\n        if (isThenable<Injector>(parentInjector)) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n\n        ranAsync = true;\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate injectorKey: string = controllerKey(INJECTOR_KEY);\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) { /** @type {?} */((\n    // Store the promise on the element.\n    element.data))(this.injectorKey, this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector; /** @type {?} */((\n\n    // Store the real injector on the element.\n    this.element.data))(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = /** @type {?} */(( null));\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.injectorKey;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n/**\n * @template T\n * @param {?} obj\n * @return {?}\n */\nfunction isThenable<T>(obj: object): obj is Thenable<T> {\n  return isFunction(( /** @type {?} */((obj as any))).then);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ApplicationRef, ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, ReflectiveInjector, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {getAttributesAsArray, getComponentName, hookupNgModel, strictEquals} from './util';\n\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nexport class DowngradeComponentAdapter {\nprivate implementsOnChanges = false;\nprivate inputChangeCount: number = 0;\nprivate inputChanges: SimpleChanges = {};\nprivate componentScope: angular.IScope;\nprivate componentRef: ComponentRef<any>;\nprivate component: any;\nprivate changeDetector: ChangeDetectorRef;\nprivate appRef: ApplicationRef;\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} attrs\n * @param {?} scope\n * @param {?} ngModel\n * @param {?} parentInjector\n * @param {?} $injector\n * @param {?} $compile\n * @param {?} $parse\n * @param {?} componentFactory\n * @param {?} wrapCallback\n */\nconstructor(\nprivate id: string,\nprivate element: angular.IAugmentedJQuery,\nprivate attrs: angular.IAttributes,\nprivate scope: angular.IScope,\nprivate ngModel: angular.INgModelController,\nprivate parentInjector: Injector,\nprivate $injector: angular.IInjectorService,\nprivate $compile: angular.ICompileService,\nprivate $parse: angular.IParseService,\nprivate componentFactory: ComponentFactory<any>,\nprivate wrapCallback: <T>(cb: () => T) => () => T) {\n    ( /** @type {?} */((this.element[0] as any))).id = id;\n    this.componentScope = scope.$new();\n    this.appRef = parentInjector.get(ApplicationRef);\n  }\n/**\n * @return {?}\n */\ncompileContents(): Node[][] {\n    const /** @type {?} */ compiledProjectableNodes: Node[][] = [];\n    const /** @type {?} */ projectableNodes: Node[][] = this.groupProjectableNodes();\n    const /** @type {?} */ linkFns = projectableNodes.map(nodes => this.$compile(nodes)); /** @type {?} */((\n\n    this.element.empty))();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone); /** @type {?} */((\n        this.element.append))(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n/**\n * @param {?} projectableNodes\n * @return {?}\n */\ncreateComponent(projectableNodes: Node[][]) {\n    const /** @type {?} */ childInjector = ReflectiveInjector.resolveAndCreate(\n        [{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n/**\n * @param {?} needsNgZone\n * @param {?=} propagateDigest\n * @return {?}\n */\nsetupInputs(needsNgZone: boolean, propagateDigest = true): void {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ inputs = this.componentFactory.inputs || [];\n    for (let /** @type {?} */ i = 0; i < inputs.length; i++) {\n      const /** @type {?} */ input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n      let /** @type {?} */ expr: string|null = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const /** @type {?} */ observeFn = (prop => {\n          let /** @type {?} */ prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            // Initially, both `$observe()` and `$watch()` will call this function.\n            if (!strictEquals(prevValue, currValue)) {\n              if (prevValue === INITIAL_VALUE) {\n                prevValue = currValue;\n              }\n\n              this.updateInput(prop, prevValue, currValue);\n              prevValue = currValue;\n            }\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n        // Use `$watch()` (in addition to `$observe()`) in order to initialize the input  in time\n        // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n        // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n        let /** @type {?} */ unwatch: Function|null = this.componentScope.$watch(() => { /** @type {?} */((\n          unwatch))();\n          unwatch = null;\n          observeFn(attrs[input.attr]);\n        });\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = attrs[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = attrs[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = attrs[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = attrs[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const /** @type {?} */ watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    // Invoke `ngOnChanges()` and Change Detection (when necessary)\n    const /** @type {?} */ detectChanges = () => this.changeDetector.detectChanges();\n    const /** @type {?} */ prototype = this.componentFactory.componentType.prototype;\n    this.implementsOnChanges = !!(prototype && ( /** @type {?} */((<OnChanges>prototype))).ngOnChanges);\n\n    this.componentScope.$watch(() => this.inputChangeCount, this.wrapCallback(() => {\n      // Invoke `ngOnChanges()`\n      if (this.implementsOnChanges) {\n        const /** @type {?} */ inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        ( /** @type {?} */((<OnChanges>this.component))).ngOnChanges( /** @type {?} */((inputChanges)));\n      }\n\n      // If opted out of propagating digests, invoke change detection\n      // when inputs change\n      if (!propagateDigest) {\n        detectChanges();\n      }\n    }));\n\n    // If not opted out of propagating digests, invoke change detection on every digest\n    if (propagateDigest) {\n      this.componentScope.$watch(this.wrapCallback(detectChanges));\n    }\n\n    // Attach the view so that it will be dirty-checked.\n    if (needsNgZone) {\n      this.appRef.attachView(this.componentRef.hostView);\n    }\n  }\n/**\n * @return {?}\n */\nsetupOutputs() {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ outputs = this.componentFactory.outputs || [];\n    for (let /** @type {?} */ j = 0; j < outputs.length; j++) {\n      const /** @type {?} */ output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n      let /** @type {?} */ expr: string|null = null;\n      let /** @type {?} */ assignExpr = false;\n\n      const /** @type {?} */ bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n      const /** @type {?} */ bracketParenAttr =\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]`;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = attrs[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = attrs[output.parenAttr];\n      } else if (attrs.hasOwnProperty(bindonAttr)) {\n        expr = attrs[bindonAttr];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty(bracketParenAttr)) {\n        expr = attrs[bracketParenAttr];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const /** @type {?} */ getter = this.$parse(expr);\n        const /** @type {?} */ setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const /** @type {?} */ emitter = /** @type {?} */(( this.component[output.prop] as EventEmitter<any>));\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ? (v: any) => /** @type {?} */(( setter))(this.scope, v) :\n                               (v: any) => getter(this.scope, {'$event': v})\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.componentFactory.componentType)}'!`);\n        }\n      }\n    }\n  }\n/**\n * @param {?} needsNgZone\n * @return {?}\n */\nregisterCleanup(needsNgZone: boolean) { /** @type {?} */((\n    this.element.on))('$destroy', () => {\n      this.componentScope.$destroy();\n      this.componentRef.destroy();\n      if (needsNgZone) {\n        this.appRef.detachView(this.componentRef.hostView);\n      }\n    });\n  }\n/**\n * @return {?}\n */\ngetInjector(): Injector { return this.componentRef.injector; }\n/**\n * @param {?} prop\n * @param {?} prevValue\n * @param {?} currValue\n * @return {?}\n */\n\nprivate updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.implementsOnChanges) {\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.inputChangeCount++;\n    this.component[prop] = currValue;\n  }\n/**\n * @return {?}\n */\ngroupProjectableNodes() {\n    let /** @type {?} */ ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, /** @type {?} */(( this.element.contents))());\n  }\n}\n\nfunction DowngradeComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDowngradeComponentAdapter.prototype.implementsOnChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChangeCount;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentScope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.component;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.changeDetector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.appRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.id;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.element;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.attrs;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.scope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.ngModel;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.parentInjector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$injector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$compile;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$parse;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentFactory;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.wrapCallback;\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const /** @type {?} */ projectableNodes: Node[][] = [];\n  let /** @type {?} */ wildcardNgContentIndex: number;\n\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let /** @type {?} */ j = 0, /** @type {?} */ jj = nodes.length; j < jj; ++j) {\n    const /** @type {?} */ node = nodes[j];\n    const /** @type {?} */ ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n/**\n * @param {?} element\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number|null {\n  const /** @type {?} */ ngContentIndices: number[] = [];\n  let /** @type {?} */ wildcardNgContentIndex: number = -1;\n  for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n    const /** @type {?} */ selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nlet /** @type {?} */ _matches: (this: any, selector: string) => boolean;\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nfunction matchesSelector(el: any, selector: string): boolean {\n  if (!_matches) {\n    const /** @type {?} */ elProto = /** @type {?} */(( <any>Element.prototype));\n    _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n        elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n  }\n  return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, Type} from '@angular/core';\nimport * as angular from './angular1';\n\nconst /** @type {?} */ DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nconst /** @type {?} */ DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function directiveNormalize(name: string): string {\n  return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n      .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, (_, letter) => letter.toUpperCase());\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const /** @type {?} */ attributes = node.attributes;\n  let /** @type {?} */ asArray: [string, string][] = /** @type {?} */(( undefined));\n  if (attributes) {\n    let /** @type {?} */ attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let /** @type {?} */ i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, /** @type {?} */(( attributes[i].nodeValue))];\n    }\n  }\n  return asArray || [];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return ( /** @type {?} */((component as any))).overriddenName || component.name || component.toString().split('\\n')[0];\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\nconstructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nfunction Deferred_tsickle_Closure_declarations() {\n/** @type {?} */\nDeferred.prototype.promise;\n/** @type {?} */\nDeferred.prototype.resolve;\n/** @type {?} */\nDeferred.prototype.reject;\n}\n\n/**\n * @record\n */\nexport function LazyModuleRef() {}\n\n\nfunction LazyModuleRef_tsickle_Closure_declarations() {\n/** @type {?} */\nLazyModuleRef.prototype.needsNgZone;\n/** @type {?|undefined} */\nLazyModuleRef.prototype.injector;\n/** @type {?|undefined} */\nLazyModuleRef.prototype.promise;\n}\n\n\nexport interface LazyModuleRef {\n  // Whether the AngularJS app has been bootstrapped outside the Angular zone\n  // (in which case calls to Angular APIs need to be brought back in).\n  needsNgZone: boolean;\n  injector?: Injector;\n  promise?: Promise<Injector>;\n}\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n    if (typeof component.registerOnTouched === 'function') {\n      component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n    }\n  }\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} val1\n * @param {?} val2\n * @return {?}\n */\nexport function strictEquals(val1: any, val2: any): boolean {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n/**\n * @param {?} prop\n * @param {?} attr\n */\nconstructor(public prop: string,\npublic attr: string) { this.parseBinding(); }\n/**\n * @return {?}\n */\n\nprivate parseBinding() {\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const /** @type {?} */ capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n\nfunction PropertyBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyBinding.prototype.bracketAttr;\n/** @type {?} */\nPropertyBinding.prototype.bracketParenAttr;\n/** @type {?} */\nPropertyBinding.prototype.parenAttr;\n/** @type {?} */\nPropertyBinding.prototype.onAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindonAttr;\n/** @type {?} */\nPropertyBinding.prototype.prop;\n/** @type {?} */\nPropertyBinding.prototype.attr;\n}\n\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const /** @type {?} */ $COMPILE = '$compile';\nexport const /** @type {?} */ $CONTROLLER = '$controller';\nexport const /** @type {?} */ $DELEGATE = '$delegate';\nexport const /** @type {?} */ $HTTP_BACKEND = '$httpBackend';\nexport const /** @type {?} */ $INJECTOR = '$injector';\nexport const /** @type {?} */ $INTERVAL = '$interval';\nexport const /** @type {?} */ $PARSE = '$parse';\nexport const /** @type {?} */ $PROVIDE = '$provide';\nexport const /** @type {?} */ $ROOT_SCOPE = '$rootScope';\nexport const /** @type {?} */ $SCOPE = '$scope';\nexport const /** @type {?} */ $TEMPLATE_CACHE = '$templateCache';\nexport const /** @type {?} */ $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const /** @type {?} */ $$TESTABILITY = '$$testability';\n\nexport const /** @type {?} */ COMPILER_KEY = '$$angularCompiler';\nexport const /** @type {?} */ GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const /** @type {?} */ INJECTOR_KEY = '$$angularInjector';\nexport const /** @type {?} */ LAZY_MODULE_REF = '$$angularLazyModuleRef';\nexport const /** @type {?} */ NG_ZONE_KEY = '$$angularNgZone';\n\nexport const /** @type {?} */ REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const /** @type {?} */ REQUIRE_NG_MODEL = '?ngModel';\n\nexport const /** @type {?} */ UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n/**\n * @record\n */\nexport function IAnnotatedFunction() {}\n\n\nfunction IAnnotatedFunction_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIAnnotatedFunction.prototype.$inject;\n}\n\n\nexport interface IAnnotatedFunction extends Function { $inject?: Ng1Token[]; }\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n/**\n * @record\n */\nexport function IModule() {}\n\n\nfunction IModule_tsickle_Closure_declarations() {\n/** @type {?} */\nIModule.prototype.name;\n/** @type {?} */\nIModule.prototype.requires;\n/** @type {?} */\nIModule.prototype.config;\n/** @type {?} */\nIModule.prototype.directive;\n/** @type {?} */\nIModule.prototype.component;\n/** @type {?} */\nIModule.prototype.controller;\n/** @type {?} */\nIModule.prototype.factory;\n/** @type {?} */\nIModule.prototype.value;\n/** @type {?} */\nIModule.prototype.constant;\n/** @type {?} */\nIModule.prototype.run;\n}\n\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\n/**\n * @record\n */\nexport function ICompileService() {}\n\n\nfunction ICompileService_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n*/\n}\n\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\n/**\n * @record\n */\nexport function ILinkFn() {}\n\n\nfunction ILinkFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n*/\n/** @type {?|undefined} */\nILinkFn.prototype.$$slots;\n}\n\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n  $$slots?: {[slotName: string]: ILinkFn};\n}\n/**\n * @record\n */\nexport function ILinkFnOptions() {}\n\n\nfunction ILinkFnOptions_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nILinkFnOptions.prototype.parentBoundTranscludeFn;\n/** @type {?|undefined} */\nILinkFnOptions.prototype.transcludeControllers;\n/** @type {?|undefined} */\nILinkFnOptions.prototype.futureParentElement;\n}\n\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\n/**\n * @record\n */\nexport function IRootScopeService() {}\n\n\nfunction IRootScopeService_tsickle_Closure_declarations() {\n/** @type {?} */\nIRootScopeService.prototype.$new;\n/** @type {?} */\nIRootScopeService.prototype.$id;\n/** @type {?} */\nIRootScopeService.prototype.$parent;\n/** @type {?} */\nIRootScopeService.prototype.$root;\n/** @type {?} */\nIRootScopeService.prototype.$watch;\n/** @type {?} */\nIRootScopeService.prototype.$on;\n/** @type {?} */\nIRootScopeService.prototype.$destroy;\n/** @type {?} */\nIRootScopeService.prototype.$apply;\n/** @type {?} */\nIRootScopeService.prototype.$digest;\n/** @type {?} */\nIRootScopeService.prototype.$evalAsync;\n/** @type {?} */\nIRootScopeService.prototype.$on;\n/** @type {?} */\nIRootScopeService.prototype.$$childTail;\n/** @type {?} */\nIRootScopeService.prototype.$$childHead;\n/** @type {?} */\nIRootScopeService.prototype.$$nextSibling;\n/* TODO: handle strange member:\n[key: string]: any;\n*/\n}\n\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(exp: Ng1Expression, locals?: any): void;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\n/**\n * @record\n */\nexport function IScope() {}\n\n\nfunction IScope_tsickle_Closure_declarations() {\n}\n\nexport interface IScope extends IRootScopeService {}\n/**\n * @record\n */\nexport function IAngularBootstrapConfig() {}\n\n\nfunction IAngularBootstrapConfig_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIAngularBootstrapConfig.prototype.strictDi;\n}\n\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\n/**\n * @record\n */\nexport function IDirective() {}\n\n\nfunction IDirective_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIDirective.prototype.compile;\n/** @type {?|undefined} */\nIDirective.prototype.controller;\n/** @type {?|undefined} */\nIDirective.prototype.controllerAs;\n/** @type {?|undefined} */\nIDirective.prototype.bindToController;\n/** @type {?|undefined} */\nIDirective.prototype.link;\n/** @type {?|undefined} */\nIDirective.prototype.name;\n/** @type {?|undefined} */\nIDirective.prototype.priority;\n/** @type {?|undefined} */\nIDirective.prototype.replace;\n/** @type {?|undefined} */\nIDirective.prototype.require;\n/** @type {?|undefined} */\nIDirective.prototype.restrict;\n/** @type {?|undefined} */\nIDirective.prototype.scope;\n/** @type {?|undefined} */\nIDirective.prototype.template;\n/** @type {?|undefined} */\nIDirective.prototype.templateUrl;\n/** @type {?|undefined} */\nIDirective.prototype.templateNamespace;\n/** @type {?|undefined} */\nIDirective.prototype.terminal;\n/** @type {?|undefined} */\nIDirective.prototype.transclude;\n}\n\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: DirectiveTranscludeProperty;\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport type DirectiveTranscludeProperty = boolean | 'element' | {[key: string]: string};\n/**\n * @record\n */\nexport function IDirectiveCompileFn() {}\n\n\nfunction IDirectiveCompileFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n*/\n}\n\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\n/**\n * @record\n */\nexport function IDirectivePrePost() {}\n\n\nfunction IDirectivePrePost_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIDirectivePrePost.prototype.pre;\n/** @type {?|undefined} */\nIDirectivePrePost.prototype.post;\n}\n\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\n/**\n * @record\n */\nexport function IDirectiveLinkFn() {}\n\n\nfunction IDirectiveLinkFn_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n*/\n}\n\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\n/**\n * @record\n */\nexport function IComponent() {}\n\n\nfunction IComponent_tsickle_Closure_declarations() {\n/** @type {?|undefined} */\nIComponent.prototype.bindings;\n/** @type {?|undefined} */\nIComponent.prototype.controller;\n/** @type {?|undefined} */\nIComponent.prototype.controllerAs;\n/** @type {?|undefined} */\nIComponent.prototype.require;\n/** @type {?|undefined} */\nIComponent.prototype.template;\n/** @type {?|undefined} */\nIComponent.prototype.templateUrl;\n/** @type {?|undefined} */\nIComponent.prototype.transclude;\n}\n\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: DirectiveTranscludeProperty;\n}\n/**\n * @record\n */\nexport function IAttributes() {}\n\n\nfunction IAttributes_tsickle_Closure_declarations() {\n/** @type {?} */\nIAttributes.prototype.$observe;\n/* TODO: handle strange member:\n[key: string]: any;\n*/\n}\n\nexport interface IAttributes {\n  $observe(attr: string, fn: (v: string) => void): void;\n  [key: string]: any;\n}\n/**\n * @record\n */\nexport function ITranscludeFunction() {}\n\n\nfunction ITranscludeFunction_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n*/\n/* TODO: handle strange member:\n(cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n*/\n}\n\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\n/**\n * @record\n */\nexport function ICloneAttachFunction() {}\n\n\nfunction ICloneAttachFunction_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n*/\n}\n\nexport interface ICloneAttachFunction {\n  // Let's hint but not force cloneAttachFn's signature\n  (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  on?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n};\n/**\n * @record\n */\nexport function IProvider() {}\n\n\nfunction IProvider_tsickle_Closure_declarations() {\n/** @type {?} */\nIProvider.prototype.$get;\n}\n\nexport interface IProvider { $get: IInjectable; }\n/**\n * @record\n */\nexport function IProvideService() {}\n\n\nfunction IProvideService_tsickle_Closure_declarations() {\n/** @type {?} */\nIProvideService.prototype.provider;\n/** @type {?} */\nIProvideService.prototype.factory;\n/** @type {?} */\nIProvideService.prototype.service;\n/** @type {?} */\nIProvideService.prototype.value;\n/** @type {?} */\nIProvideService.prototype.constant;\n/** @type {?} */\nIProvideService.prototype.decorator;\n}\n\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\n/**\n * @record\n */\nexport function IParseService() {}\n\n\nfunction IParseService_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(expression: string): ICompiledExpression;\n*/\n}\n\nexport interface IParseService { (expression: string): ICompiledExpression; }\n/**\n * @record\n */\nexport function ICompiledExpression() {}\n\n\nfunction ICompiledExpression_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(context: any, locals: any): any;\n*/\n/** @type {?|undefined} */\nICompiledExpression.prototype.assign;\n}\n\nexport interface ICompiledExpression {\n  (context: any, locals: any): any;\n  assign?: (context: any, value: any) => any;\n}\n/**\n * @record\n */\nexport function IHttpBackendService() {}\n\n\nfunction IHttpBackendService_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n*/\n}\n\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\n/**\n * @record\n */\nexport function ICacheObject() {}\n\n\nfunction ICacheObject_tsickle_Closure_declarations() {\n/** @type {?} */\nICacheObject.prototype.put;\n/** @type {?} */\nICacheObject.prototype.get;\n}\n\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\n/**\n * @record\n */\nexport function ITemplateCacheService() {}\n\n\nfunction ITemplateCacheService_tsickle_Closure_declarations() {\n}\n\nexport interface ITemplateCacheService extends ICacheObject {}\n/**\n * @record\n */\nexport function ITemplateRequestService() {}\n\n\nfunction ITemplateRequestService_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(template: string|any __ TrustedResourceUrl __, ignoreRequestError?: boolean): Promise<string>;\n*/\n/** @type {?} */\nITemplateRequestService.prototype.totalPendingRequests;\n}\n\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\n/**\n * @record\n */\nexport function IControllerService() {}\n\n\nfunction IControllerService_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n*/\n/* TODO: handle strange member:\n(controllerName: string, locals?: any): any;\n*/\n}\n\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n/**\n * @record\n */\nexport function IInjectorService() {}\n\n\nfunction IInjectorService_tsickle_Closure_declarations() {\n/** @type {?} */\nIInjectorService.prototype.get;\n/** @type {?} */\nIInjectorService.prototype.has;\n}\n\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n/**\n * @record\n */\nexport function IIntervalService() {}\n\n\nfunction IIntervalService_tsickle_Closure_declarations() {\n/* TODO: handle strange member:\n(func: Function, delay: number, count?: number, invokeApply?: boolean,\n   ...args: any[]): Promise<any>;\n*/\n/** @type {?} */\nIIntervalService.prototype.cancel;\n}\n\n\nexport interface IIntervalService {\n  (func: Function, delay: number, count?: number, invokeApply?: boolean,\n   ...args: any[]): Promise<any>;\n  cancel(promise: Promise<any>): boolean;\n}\n/**\n * @record\n */\nexport function ITestabilityService() {}\n\n\nfunction ITestabilityService_tsickle_Closure_declarations() {\n/** @type {?} */\nITestabilityService.prototype.findBindings;\n/** @type {?} */\nITestabilityService.prototype.findModels;\n/** @type {?} */\nITestabilityService.prototype.getLocation;\n/** @type {?} */\nITestabilityService.prototype.setLocation;\n/** @type {?} */\nITestabilityService.prototype.whenStable;\n}\n\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n/**\n * @record\n */\nexport function INgModelController() {}\n\n\nfunction INgModelController_tsickle_Closure_declarations() {\n/** @type {?} */\nINgModelController.prototype.$render;\n/** @type {?} */\nINgModelController.prototype.$isEmpty;\n/** @type {?} */\nINgModelController.prototype.$setValidity;\n/** @type {?} */\nINgModelController.prototype.$setPristine;\n/** @type {?} */\nINgModelController.prototype.$setDirty;\n/** @type {?} */\nINgModelController.prototype.$setUntouched;\n/** @type {?} */\nINgModelController.prototype.$setTouched;\n/** @type {?} */\nINgModelController.prototype.$rollbackViewValue;\n/** @type {?} */\nINgModelController.prototype.$validate;\n/** @type {?} */\nINgModelController.prototype.$commitViewValue;\n/** @type {?} */\nINgModelController.prototype.$setViewValue;\n/** @type {?} */\nINgModelController.prototype.$viewValue;\n/** @type {?} */\nINgModelController.prototype.$modelValue;\n/** @type {?} */\nINgModelController.prototype.$parsers;\n/** @type {?} */\nINgModelController.prototype.$formatters;\n/** @type {?} */\nINgModelController.prototype.$validators;\n/** @type {?} */\nINgModelController.prototype.$asyncValidators;\n/** @type {?} */\nINgModelController.prototype.$viewChangeListeners;\n/** @type {?} */\nINgModelController.prototype.$error;\n/** @type {?} */\nINgModelController.prototype.$pending;\n/** @type {?} */\nINgModelController.prototype.$untouched;\n/** @type {?} */\nINgModelController.prototype.$touched;\n/** @type {?} */\nINgModelController.prototype.$pristine;\n/** @type {?} */\nINgModelController.prototype.$dirty;\n/** @type {?} */\nINgModelController.prototype.$valid;\n/** @type {?} */\nINgModelController.prototype.$invalid;\n/** @type {?} */\nINgModelController.prototype.$name;\n}\n\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n/**\n * @return {?}\n */\nfunction noNg() {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\n\nlet /** @type {?} */ angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config?: IAngularBootstrapConfig) =>\n                 IInjectorService,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: (e: Element | string) => IAugmentedJQuery,\n  version: {major: number},\n  resumeBootstrap: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = /** @type {?} */(( <any>{\n  bootstrap: noNg,\n  module: noNg,\n  element: noNg,\n  version: noNg,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n}));\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = ( /** @type {?} */((<any>window))).angular;\n  }\n} catch ( /** @type {?} */e) {\n  // ignore in CJS mode.\n}\n/**\n * Resets the AngularJS library.\n * \n * Used when angularjs is loaded lazily, and not available on `window`.\n * \n * \\@stable\n * @param {?} ng\n * @return {?}\n */\nexport function setAngularLib(ng: any): void {\n  angular = ng;\n}\n/**\n * Returns the current version of the AngularJS library.\n * \n * \\@stable\n * @return {?}\n */\nexport function getAngularLib(): any {\n  return angular;\n}\n\nexport const /** @type {?} */ bootstrap =\n    (e: Element, modules: (string | IInjectable)[], config?: IAngularBootstrapConfig) =>\n        angular.bootstrap(e, modules, config);\n\nexport const /** @type {?} */ module = (prefix: string, dependencies?: string[]) =>\n    angular.module(prefix, dependencies);\n\nexport const /** @type {?} */ element = (e: Element | string) => angular.element(e);\n\nexport const /** @type {?} */ resumeBootstrap = () => angular.resumeBootstrap();\n\nexport const /** @type {?} */ getTestability = (e: Element) => angular.getTestability(e);\n\nexport const /** @type {?} */ version = angular.version;\n","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const /** @type {?} */ VERSION = new Version('5.0.0-beta.2-4d117fa');\n"],"names":["angular.module","angular.element","element","angular.bootstrap","INITIAL_VALUE","ParentInjectorPromise","module"],"mappings":"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"}
{"version":3,"file":"upgrade.js","sources":["../../../../packages/upgrade/index.ts","../../../../packages/upgrade/public_api.ts","../../../../packages/upgrade/src/dynamic/upgrade_adapter.ts","../../../../packages/upgrade/src/dynamic/upgrade_ng1_adapter.ts","../../../../packages/upgrade/src/common/downgrade_injectable.ts","../../../../packages/upgrade/src/common/downgrade_component.ts","../../../../packages/upgrade/src/common/downgrade_component_adapter.ts","../../../../packages/upgrade/src/common/util.ts","../../../../packages/upgrade/src/common/component_info.ts","../../../../packages/upgrade/src/common/constants.ts","../../../../packages/upgrade/src/common/angular1.ts","../../../../packages/upgrade/src/common/version.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {VERSION,UpgradeAdapter,UpgradeAdapterRef} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the upgrade/dynamic package, allowing\n * Angular 1 and Angular 2+ to run side by side in the same application.\n */\nexport {VERSION} from './src/common/version';\nexport {UpgradeAdapter, UpgradeAdapterRef} from './src/dynamic/upgrade_adapter';\n\n// This file only re-exports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Compiler, CompilerOptions, Directive, Injector, NgModule, NgModuleRef, NgZone, Provider, Testability, Type} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport * as angular from '../common/angular1';\nimport {$$TESTABILITY, $COMPILE, $INJECTOR, $ROOT_SCOPE, COMPILER_KEY, INJECTOR_KEY, NG_ZONE_KEY} from '../common/constants';\nimport {downgradeComponent} from '../common/downgrade_component';\nimport {downgradeInjectable} from '../common/downgrade_injectable';\nimport {Deferred, controllerKey, onError} from '../common/util';\n\nimport {UpgradeNg1ComponentAdapterBuilder} from './upgrade_ng1_adapter';\n\nlet /** @type {?} */ upgradeCount: number = 0;\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n * \n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n * \n * ## Mental Model\n * \n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n * \n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n * \n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * \n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * \n * ```\n * \n * \\@stable\n */\nexport class UpgradeAdapter {\nprivate idPrefix: string = `NG2_UPGRADE_${upgradeCount++}_`;\nprivate downgradedComponents: Type<any>[] = [];\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n */\nprivate ng1ComponentsToBeUpgraded: {[name: string]: UpgradeNg1ComponentAdapterBuilder} = {};\nprivate upgradedProviders: Provider[] = [];\nprivate ngZone: NgZone;\nprivate ng1Module: angular.IModule;\nprivate moduleRef: NgModuleRef<any>|null = null;\nprivate ng2BootstrapDeferred: Deferred<angular.IInjectorService>;\n/**\n * @param {?} ng2AppModule\n * @param {?=} compilerOptions\n */\nconstructor(private ng2AppModule: Type<any>,\nprivate compilerOptions?: CompilerOptions) {\n    if (!ng2AppModule) {\n      throw new Error(\n          'UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.');\n    }\n  }\n/**\n * Allows Angular Component to be used from AngularJS.\n * \n * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n * Angular Component. The adapter will bootstrap Angular component from within the\n * AngularJS template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in AngularJS template. This means that the\n *    host element is controlled by AngularJS, but the component's view will be controlled by\n *    Angular.\n * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n *    syntax. This has to be done, this way because we must follow Angular components do not\n *    declare how the attributes should be interpreted.\n * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n *    by way of the `ControlValueAccessor` interface from \\@angular/forms. Only components that\n *    implement this interface are eligible.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n *   - ng-model: `<comp ng-model=\"name\">`\n * - Content projection: yes\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n * \n * \\@Component({ \n *   selector: 'greet',\n *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n * })\n * class Greeter {\n *   \\@Input() salutation: string;\n *   \\@Input() name: string;\n * }\n * \n * \\@NgModule({ \n *   declarations: [Greeter],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML =\n *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n * });\n * ```\n * @param {?} component\n * @return {?}\n */\ndowngradeNg2Component(component: Type<any>): Function {\n    this.downgradedComponents.push(component);\n\n    return downgradeComponent({component});\n  }\n/**\n * Allows AngularJS Component to be used from Angular.\n * \n * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n * directive. The adapter will bootstrap AngularJS component from within the Angular\n * template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in Angular template. This means that the\n *    host element is controlled by Angular, but the component's view will be controlled by\n *    AngularJS.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n * - Transclusion: yes\n * - Only some of the features of\n *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n *   supported:\n *   - `compile`: not supported because the host element is owned by Angular, which does\n *     not allow modifying DOM structure during compilation.\n *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n *   - `controllerAs`: supported.\n *   - `bindToController`: supported.\n *   - `link`: supported. (NOTE: only pre-link function is supported.)\n *   - `name`: supported.\n *   - `priority`: ignored.\n *   - `replace`: not supported.\n *   - `require`: supported.\n *   - `restrict`: must be set to 'E'.\n *   - `scope`: supported.\n *   - `template`: supported.\n *   - `templateUrl`: supported.\n *   - `terminal`: ignored.\n *   - `transclude`: supported.\n * \n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * \n * module.directive('greet', function() {\n *   return {\n *     scope: {salutation: '=', name: '=' },\n *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n *   };\n * });\n * \n * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n * \n * \\@Component({ \n *   selector: 'ng2',\n *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2></ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n * });\n * ```\n * @param {?} name\n * @return {?}\n */\nupgradeNg1Component(name: string): Type<any> {\n    if (( /** @type {?} */((<any>this.ng1ComponentsToBeUpgraded))).hasOwnProperty(name)) {\n      return this.ng1ComponentsToBeUpgraded[name].type;\n    } else {\n      return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n          .type;\n    }\n  }\n/**\n * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n * Use this instead of `angular.mock.module()` to load the upgrade module into\n * the AngularJS testing injector.\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * \n * // configure the adapter with upgrade/downgrade components and services\n * upgradeAdapter.downgradeNg2Component(MyComponent);\n * \n * let upgradeAdapterRef: UpgradeAdapterRef;\n * let $compile, $rootScope;\n * \n * // We must register the adapter before any calls to `inject()`\n * beforeEach(() => {\n *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n * });\n * \n * beforeEach(inject((_$compile_, _$rootScope_) => {\n *   $compile = _$compile_;\n *   $rootScope = _$rootScope_;\n * }));\n * \n * it(\"says hello\", (done) => {\n *   upgradeAdapterRef.ready(() => {\n *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n *     $rootScope.$apply();\n *     expect(element.html()).toContain(\"Hello World\");\n *     done();\n *   })\n * });\n * \n * ```\n * \n * @param {?=} modules any AngularJS modules that the upgrade module should depend upon\n * @return {?} an {\\@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n * run assertions once the Angular components are ready to test through AngularJS.\n */\nregisterForNg1Tests(modules?: string[]): UpgradeAdapterRef {\n    const /** @type {?} */ windowNgMock = ( /** @type {?} */((window as any)))['angular'].mock;\n    if (!windowNgMock || !windowNgMock.module) {\n      throw new Error('Failed to find \\'angular.mock.module\\'.');\n    }\n    this.declareNg1Module(modules);\n    windowNgMock.module(this.ng1Module.name);\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n    this.ng2BootstrapDeferred.promise.then(\n        (ng1Injector) => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); }, onError);\n    return upgrade;\n  }\n/**\n * Bootstrap a hybrid AngularJS / Angular application.\n * \n * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n * AngularJS, this bootstrap is asynchronous.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(MyNg2Module);\n * const module = angular.module('myExample', []);\n * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n * \n * module.directive('ng1', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n * })\n * class Ng2 {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * ```\n * @param {?} element\n * @param {?=} modules\n * @param {?=} config\n * @return {?}\n */\nbootstrap(element: Element, modules?: any[], config?: angular.IAngularBootstrapConfig):\n      UpgradeAdapterRef {\n    this.declareNg1Module(modules);\n\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const /** @type {?} */ windowAngular = ( /** @type {?} */((window as any)) /** TODO #???? */)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    this.ngZone.run(() => { angular.bootstrap(element, [this.ng1Module.name], /** @type {?} */(( config))); });\n    const /** @type {?} */ ng1BootstrapPromise = new Promise((resolve) => {\n      if (windowAngular.resumeBootstrap) {\n        const /** @type {?} */ originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n        windowAngular.resumeBootstrap = function() {\n          windowAngular.resumeBootstrap = originalResumeBootstrap;\n          windowAngular.resumeBootstrap.apply(this, arguments);\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n    });\n\n    Promise.all([this.ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(([ng1Injector]) => { /** @type {?} */((\n      angular.element(element).data))(controllerKey(INJECTOR_KEY), /** @type {?} */(( this.moduleRef)).injector); /** @type {?} */((\n      this.moduleRef)).injector.get(NgZone).run(\n          () => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); });\n    }, onError);\n    return upgrade;\n  }\n/**\n * Allows AngularJS service to be accessible from Angular.\n * \n * \n * ### Example\n * \n * ```\n * class Login { ... }\n * class Server { ... }\n * \n * \\@Injectable() \n * class Example {\n *   constructor(\\@Inject('server') server, login: Login) {\n *     ...\n *   }\n * }\n * \n * const module = angular.module('myExample', []);\n * module.service('server', Server);\n * module.service('login', Login);\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * adapter.upgradeNg1Provider('server');\n * adapter.upgradeNg1Provider('login', {asToken: Login});\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng2Injector.get(Example);\n * });\n * \n * ```\n * @param {?} name\n * @param {?=} options\n * @return {?}\n */\nupgradeNg1Provider(name: string, options?: {asToken: any}) {\n    const /** @type {?} */ token = options && options.asToken || name;\n    this.upgradedProviders.push({\n      provide: token,\n      useFactory: ($injector: angular.IInjectorService) => $injector.get(name),\n      deps: [$INJECTOR]\n    });\n  }\n/**\n * Allows Angular service to be accessible from AngularJS.\n * \n * \n * ### Example\n * \n * ```\n * class Example {\n * }\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * \n * const module = angular.module('myExample', []);\n * module.factory('example', adapter.downgradeNg2Provider(Example));\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng1Injector.get('example');\n * });\n * \n * ```\n * @param {?} token\n * @return {?}\n */\ndowngradeNg2Provider(token: any): Function { return downgradeInjectable(token); }\n/**\n * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n * hybrid application.\n * \n * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n * \n * @param {?=} modules The AngularJS modules that this upgrade module should depend upon.\n * @return {?} The AngularJS upgrade module that is declared by this method\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * upgradeAdapter.declareNg1Module(['heroApp']);\n * ```\n */\nprivate declareNg1Module(modules: string[] = []): angular.IModule {\n    const /** @type {?} */ delayApplyExps: Function[] = [];\n    let /** @type {?} */ original$applyFn: Function;\n    let /** @type {?} */ rootScopePrototype: any;\n    let /** @type {?} */ rootScope: angular.IRootScopeService;\n    const /** @type {?} */ upgradeAdapter = this;\n    const /** @type {?} */ ng1Module = this.ng1Module = angular.module(this.idPrefix, modules);\n    const /** @type {?} */ platformRef = platformBrowserDynamic();\n\n    this.ngZone = new NgZone({enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec')});\n    this.ng2BootstrapDeferred = new Deferred();\n    ng1Module.factory(INJECTOR_KEY, () => /** @type {?} */(( this.moduleRef)).injector.get(Injector))\n        .constant(NG_ZONE_KEY, this.ngZone)\n        .factory(COMPILER_KEY, () => /** @type {?} */(( this.moduleRef)).injector.get(Compiler))\n        .config([\n          '$provide', '$injector',\n          (provide: angular.IProvideService, ng1Injector: angular.IInjectorService) => {\n            provide.decorator($ROOT_SCOPE, [\n              '$delegate',\n              function(rootScopeDelegate: angular.IRootScopeService) {\n                // Capture the root apply so that we can delay first call to $apply until we\n                // bootstrap Angular and then we replay and restore the $apply.\n                rootScopePrototype = rootScopeDelegate.constructor.prototype;\n                if (rootScopePrototype.hasOwnProperty('$apply')) {\n                  original$applyFn = rootScopePrototype.$apply;\n                  rootScopePrototype.$apply = (exp: any) => delayApplyExps.push(exp);\n                } else {\n                  throw new Error('Failed to find \\'$apply\\' on \\'$rootScope\\'!');\n                }\n                return rootScope = rootScopeDelegate;\n              }\n            ]);\n            if (ng1Injector.has($$TESTABILITY)) {\n              provide.decorator($$TESTABILITY, [\n                '$delegate',\n                function(testabilityDelegate: angular.ITestabilityService) {\n                  const /** @type {?} */ originalWhenStable: Function = testabilityDelegate.whenStable;\n                  // Cannot use arrow function below because we need the context\n                  const /** @type {?} */ newWhenStable = function(callback: Function) {\n                    originalWhenStable.call(this, function() {\n                      const /** @type {?} */ ng2Testability: Testability = /** @type {?} */((\n                          upgradeAdapter.moduleRef)).injector.get(Testability);\n                      if (ng2Testability.isStable()) {\n                        callback.apply(this, arguments);\n                      } else {\n                        ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                      }\n                    });\n                  };\n\n                  testabilityDelegate.whenStable = newWhenStable;\n                  return testabilityDelegate;\n                }\n              ]);\n            }\n          }\n        ]);\n\n    ng1Module.run([\n      '$injector', '$rootScope',\n      (ng1Injector: angular.IInjectorService, rootScope: angular.IRootScopeService) => {\n        UpgradeNg1ComponentAdapterBuilder.resolve(this.ng1ComponentsToBeUpgraded, ng1Injector)\n            .then(() => {\n              // At this point we have ng1 injector and we have lifted ng1 components into ng2, we\n              // now can bootstrap ng2.\n              const /** @type {?} */ DynamicNgUpgradeModule =\n                  NgModule({\n                    providers: [\n                      {provide: $INJECTOR, useFactory: () => ng1Injector},\n                      {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n                      this.upgradedProviders\n                    ],\n                    imports: [this.ng2AppModule],\n                    entryComponents: this.downgradedComponents\n                  }).Class({\n                    constructor: function DynamicNgUpgradeModule() {},\n                    ngDoBootstrap: function() {}\n                  });\n              ( /** @type {?} */((platformRef as any)))\n                  ._bootstrapModuleWithZone(\n                      DynamicNgUpgradeModule, this.compilerOptions, this.ngZone)\n                  .then((ref: NgModuleRef<any>) => {\n                    this.moduleRef = ref;\n                    this.ngZone.run(() => {\n                      if (rootScopePrototype) {\n                        rootScopePrototype.$apply = original$applyFn;  // restore original $apply\n                        while (delayApplyExps.length) {\n                          rootScope.$apply(delayApplyExps.shift());\n                        }\n                        rootScopePrototype = null;\n                      }\n                    });\n                  })\n                  .then(() => this.ng2BootstrapDeferred.resolve(ng1Injector), onError)\n                  .then(() => {\n                    let /** @type {?} */ subscription =\n                        this.ngZone.onMicrotaskEmpty.subscribe({next: () => rootScope.$digest()});\n                    rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                  });\n            })\n            .catch((e) => this.ng2BootstrapDeferred.reject(e));\n      }\n    ]);\n\n    return ng1Module;\n  }\n}\n\nfunction UpgradeAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapter.prototype.idPrefix;\n/** @type {?} */\nUpgradeAdapter.prototype.downgradedComponents;\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n * @type {?}\n */\nUpgradeAdapter.prototype.ng1ComponentsToBeUpgraded;\n/** @type {?} */\nUpgradeAdapter.prototype.upgradedProviders;\n/** @type {?} */\nUpgradeAdapter.prototype.ngZone;\n/** @type {?} */\nUpgradeAdapter.prototype.ng1Module;\n/** @type {?} */\nUpgradeAdapter.prototype.moduleRef;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2BootstrapDeferred;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2AppModule;\n/** @type {?} */\nUpgradeAdapter.prototype.compilerOptions;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) {\n    // store the promise on the element\n    element.data !(controllerKey(INJECTOR_KEY), this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector; /** @type {?} */((\n\n    // reset the element data to point to the real injector\n    this.element.data))(controllerKey(INJECTOR_KEY), injector);\n\n    // clean out the element to prevent memory leaks\n    this.element = /** @type {?} */(( null));\n\n    // run all the queued callbacks\n    this.callbacks.forEach((callback) => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n * \n * \\@stable\n */\nexport class UpgradeAdapterRef {\nprivate _readyFn: ((upgradeAdapterRef?: UpgradeAdapterRef) => void)|null = null;\npublic ng1RootScope: angular.IRootScopeService = /** @type {?} */(( null));\npublic ng1Injector: angular.IInjectorService = /** @type {?} */(( null));\npublic ng2ModuleRef: NgModuleRef<any> = /** @type {?} */(( null));\npublic ng2Injector: Injector = /** @type {?} */(( null));\n/**\n * @param {?} ngModuleRef\n * @param {?} ng1Injector\n * @return {?}\n */\nprivate _bootstrapDone(ngModuleRef: NgModuleRef<any>, ng1Injector: angular.IInjectorService) {\n    this.ng2ModuleRef = ngModuleRef;\n    this.ng2Injector = ngModuleRef.injector;\n    this.ng1Injector = ng1Injector;\n    this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n    this._readyFn && this._readyFn(this);\n  }\n/**\n * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n * application has been bootstrapped.\n * \n * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n * require a call to `$apply()`.\n * @param {?} fn\n * @return {?}\n */\npublic ready(fn: (upgradeAdapterRef: UpgradeAdapterRef) => void) { this._readyFn = fn; }\n/**\n * Dispose of running hybrid AngularJS / Angular application.\n * @return {?}\n */\npublic dispose() { /** @type {?} */((\n    this.ng1Injector)).get($ROOT_SCOPE).$destroy(); /** @type {?} */((\n    this.ng2ModuleRef)).destroy();\n  }\n}\n\nfunction UpgradeAdapterRef_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapterRef.prototype._readyFn;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1RootScope;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1Injector;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2ModuleRef;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2Injector;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, EventEmitter, Inject, OnChanges, OnInit, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $SCOPE, $TEMPLATE_CACHE} from '../common/constants';\nimport {controllerKey, strictEquals} from '../common/util';\n\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n\n\nconst /** @type {?} */ CAMEL_CASE = /([A-Z])/g;\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nconst /** @type {?} */ NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nexport class UpgradeNg1ComponentAdapterBuilder {\n  type: Type<any>;\n  inputs: string[] = [];\n  inputsRename: string[] = [];\n  outputs: string[] = [];\n  outputsRename: string[] = [];\n  propertyOutputs: string[] = [];\n  checkProperties: string[] = [];\n  propertyMap: {[name: string]: string} = {};\n  linkFn: angular.ILinkFn|null = null;\n  directive: angular.IDirective|null = null;\n  $controller: angular.IControllerService|null = null;\n/**\n * @param {?} name\n */\nconstructor(public name: string) {\n    const selector = name.replace(\n        CAMEL_CASE, (all: any /** TODO #9100 */, next: string) => '-' + next.toLowerCase());\n    const self = this;\n    this.type = Directive({\n                  selector: selector,\n                  inputs: this.inputsRename,\n                  outputs: this.outputsRename\n                }).Class({\n      constructor: [\n        new Inject($SCOPE), ElementRef,\n        function(scope: angular.IScope, elementRef: ElementRef) {\n          return new UpgradeNg1ComponentAdapter(\n              self.linkFn !, scope, self.directive !, elementRef, self.$controller !, self.inputs,\n              self.outputs, self.propertyOutputs, self.checkProperties, self.propertyMap);\n        }\n      ],\n      ngOnInit: function() { /* needs to be here for ng2 to properly detect it */ },\n      ngOnChanges: function() { /* needs to be here for ng2 to properly detect it */ },\n      ngDoCheck: function() { /* needs to be here for ng2 to properly detect it */ },\n      ngOnDestroy: function() { /* needs to be here for ng2 to properly detect it */ },\n    });\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nextractDirective(injector: angular.IInjectorService): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = injector.get(this.name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const /** @type {?} */ directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    const /** @type {?} */ link = directive.link;\n    if (typeof link == 'object') {\n      if (( /** @type {?} */((<angular.IDirectivePrePost>link))).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n/**\n * @param {?} feature\n * @return {?}\n */\nprivate notSupported(feature: string) {\n    throw new Error(`Upgraded directive '${this.name}' does not support '${feature}'.`);\n  }\n/**\n * @return {?}\n */\nextractBindings() {\n    const /** @type {?} */ btcIsObject = typeof /** @type {?} */(( this.directive)).bindToController === 'object';\n    if (btcIsObject && Object.keys( /** @type {?} */((this.directive)).scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time are not supported.`);\n    }\n\n    const /** @type {?} */ context = (btcIsObject) ? /** @type {?} */(( this.directive)).bindToController : /** @type {?} */(( this.directive)).scope;\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const /** @type {?} */ definition = context[propName];\n        const /** @type {?} */ bindingType = definition.charAt(0);\n        const /** @type {?} */ bindingOptions = definition.charAt(1);\n        const /** @type {?} */ attrName = definition.substring(bindingOptions === '?' ? 2 : 1) || propName;\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        const /** @type {?} */ inputName = `input_${attrName}`;\n        const /** @type {?} */ inputNameRename = `${inputName}: ${attrName}`;\n        const /** @type {?} */ outputName = `output_${attrName}`;\n        const /** @type {?} */ outputNameRename = `${outputName}: ${attrName}`;\n        const /** @type {?} */ outputNameRenameChange = `${outputNameRename}Change`;\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            this.inputs.push(inputName);\n            this.inputsRename.push(inputNameRename);\n            this.propertyMap[inputName] = propName;\n            break;\n          case '=':\n            this.inputs.push(inputName);\n            this.inputsRename.push(inputNameRename);\n            this.propertyMap[inputName] = propName;\n\n            this.outputs.push(outputName);\n            this.outputsRename.push(outputNameRenameChange);\n            this.propertyMap[outputName] = propName;\n\n            this.checkProperties.push(propName);\n            this.propertyOutputs.push(outputName);\n            break;\n          case '&':\n            this.outputs.push(outputName);\n            this.outputsRename.push(outputNameRename);\n            this.propertyMap[outputName] = propName;\n            break;\n          default:\n            let /** @type {?} */ json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n  }\n/**\n * @param {?} compile\n * @param {?} templateCache\n * @param {?} httpBackend\n * @return {?}\n */\ncompileTemplate(\n      compile: angular.ICompileService, templateCache: angular.ITemplateCacheService,\n      httpBackend: angular.IHttpBackendService): Promise<angular.ILinkFn>|null {\n    if ( /** @type {?} */((this.directive)).template !== undefined) {\n      this.linkFn = compileHtml(\n          isFunction( /** @type {?} */((this.directive)).template) ? ( /** @type {?} */(( /** @type {?} */((this.directive)).template as Function)))() : /** @type {?} */((\n                                                  this.directive)).template);\n    } else if ( /** @type {?} */((this.directive)).templateUrl) {\n      const /** @type {?} */ url = isFunction( /** @type {?} */((this.directive)).templateUrl) ?\n          ( /** @type {?} */(( /** @type {?} */((this.directive)).templateUrl as Function)))() : /** @type {?} */((\n          this.directive)).templateUrl;\n      const /** @type {?} */ html = templateCache.get(url);\n      if (html !== undefined) {\n        this.linkFn = compileHtml(html);\n      } else {\n        return new Promise((resolve, err) => {\n          httpBackend(\n              'GET', url, null,\n              (status: any /** TODO #9100 */, response: any /** TODO #9100 */) => {\n                if (status == 200) {\n                  resolve(this.linkFn = compileHtml(templateCache.put(url, response)));\n                } else {\n                  err(`GET ${url} returned ${status}: ${response}`);\n                }\n              });\n        });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n    return null;\n/**\n * @param {?} html\n * @return {?}\n */\nfunction compileHtml(html: any /** TODO #9100 */): angular.ILinkFn {\n      const /** @type {?} */ div = document.createElement('div');\n      div.innerHTML = html;\n      return compile(div.childNodes);\n    }\n  }\n/**\n * Upgrade ng1 components into Angular.\n * @param {?} exportedComponents\n * @param {?} injector\n * @return {?}\n */\nstatic resolve(\n      exportedComponents: {[name: string]: UpgradeNg1ComponentAdapterBuilder},\n      injector: angular.IInjectorService): Promise<angular.ILinkFn[]> {\n    const /** @type {?} */ promises: Promise<angular.ILinkFn>[] = [];\n    const /** @type {?} */ compile: angular.ICompileService = injector.get($COMPILE);\n    const /** @type {?} */ templateCache: angular.ITemplateCacheService = injector.get($TEMPLATE_CACHE);\n    const /** @type {?} */ httpBackend: angular.IHttpBackendService = injector.get($HTTP_BACKEND);\n    const /** @type {?} */ $controller: angular.IControllerService = injector.get($CONTROLLER);\n    for (const /** @type {?} */ name in exportedComponents) {\n      if (( /** @type {?} */((<any>exportedComponents))).hasOwnProperty(name)) {\n        const /** @type {?} */ exportedComponent = exportedComponents[name];\n        exportedComponent.directive = exportedComponent.extractDirective(injector);\n        exportedComponent.$controller = $controller;\n        exportedComponent.extractBindings();\n        const /** @type {?} */ promise: Promise<angular.ILinkFn> = /** @type {?} */((\n            exportedComponent.compileTemplate(compile, templateCache, httpBackend)));\n        if (promise) promises.push(promise);\n      }\n    }\n    return Promise.all(promises);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapterBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.type;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyOutputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyMap;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.linkFn;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.$controller;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.name;\n}\n\nclass UpgradeNg1ComponentAdapter implements OnInit, OnChanges, DoCheck {\nprivate controllerInstance: IControllerInstance|null = null;\n  destinationObj: IBindingDestination|null = null;\n  checkLastValues: any[] = [];\n  componentScope: angular.IScope;\n  element: Element;\n  $element: any = null;\n/**\n * @param {?} linkFn\n * @param {?} scope\n * @param {?} directive\n * @param {?} elementRef\n * @param {?} $controller\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} propOuts\n * @param {?} checkProperties\n * @param {?} propertyMap\n */\nconstructor(\nprivate linkFn: angular.ILinkFn, scope: angular.IScope,\nprivate directive: angular.IDirective,\n      elementRef: ElementRef,\nprivate $controller: angular.IControllerService,\nprivate inputs: string[],\nprivate outputs: string[],\nprivate propOuts: string[],\nprivate checkProperties: string[],\nprivate propertyMap: {[key: string]: string}) {\n    this.element = elementRef.nativeElement;\n    this.componentScope = scope.$new(!!directive.scope);\n    this.$element = angular.element(this.element);\n    const controllerType = directive.controller;\n    if (directive.bindToController && controllerType) {\n      this.controllerInstance = this.buildController(controllerType);\n      this.destinationObj = this.controllerInstance;\n    } else {\n      this.destinationObj = this.componentScope;\n    }\n\n    for (let i = 0; i < inputs.length; i++) {\n      (this as any /** TODO #9100 */)[inputs[i]] = null;\n    }\n    for (let j = 0; j < outputs.length; j++) {\n      const emitter = (this as any)[outputs[j]] = new EventEmitter<any>();\n      this.setComponentProperty(\n          outputs[j], (emitter => (value: any) => emitter.emit(value))(emitter));\n    }\n    for (let k = 0; k < propOuts.length; k++) {\n      this.checkLastValues.push(INITIAL_VALUE);\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.directive.bindToController && this.directive.controller) {\n      this.controllerInstance = this.buildController(this.directive.controller);\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    let /** @type {?} */ link = this.directive.link;\n    if (typeof link == 'object') link = ( /** @type {?} */((<angular.IDirectivePrePost>link))).pre;\n    if (link) {\n      const /** @type {?} */ attrs: angular.IAttributes = NOT_SUPPORTED;\n      const /** @type {?} */ transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n      const /** @type {?} */ linkController = this.resolveRequired(this.$element, /** @type {?} */(( this.directive.require)));\n      ( /** @type {?} */((<angular.IDirectiveLinkFn>this.directive.link)))(\n          this.componentScope, this.$element, attrs, linkController, transcludeFn);\n    }\n\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: any /** TODO #9100 */;\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n    this.linkFn(this.componentScope, (clonedElement, scope) => {\n      for (let /** @type {?} */ i = 0, /** @type {?} */ ii = /** @type {?} */(( clonedElement)).length; i < ii; i++) {\n        this.element.appendChild( /** @type {?} */((clonedElement))[i]);\n      }\n    }, {\n      parentBoundTranscludeFn: (scope: any /** TODO #9100 */,\n                                cloneAttach: any /** TODO #9100 */) => { cloneAttach(childNodes); }\n    });\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ ng1Changes: any = {};\n    Object.keys(changes).forEach(name => {\n      const /** @type {?} */ change: SimpleChange = changes[name];\n      this.setComponentProperty(name, change.currentValue);\n      ng1Changes[this.propertyMap[name]] = change;\n    });\n\n    if (isFunction( /** @type {?} */((this.destinationObj)).$onChanges)) { /** @type {?} */(( /** @type {?} */((\n      this.destinationObj)).$onChanges))(ng1Changes);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    const /** @type {?} */ destinationObj = this.destinationObj;\n    const /** @type {?} */ lastValues = this.checkLastValues;\n    const /** @type {?} */ checkProperties = this.checkProperties;\n    const /** @type {?} */ propOuts = this.propOuts;\n    checkProperties.forEach((propName, i) => {\n      const /** @type {?} */ value = /** @type {?} */(( destinationObj))[propName];\n      const /** @type {?} */ last = lastValues[i];\n      if (!strictEquals(last, value)) {\n        const /** @type {?} */ eventEmitter: EventEmitter<any> = ( /** @type {?} */((this as any)))[propOuts[i]];\n        eventEmitter.emit(lastValues[i] = value);\n      }\n    });\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      this.controllerInstance.$doCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetComponentProperty(name: string, value: any) { /** @type {?} */((\n    this.destinationObj))[this.propertyMap[name]] = value;\n  }\n/**\n * @param {?} controllerType\n * @return {?}\n */\nprivate buildController(controllerType: any /** TODO #9100 */) {\n    const /** @type {?} */ locals = {$scope: this.componentScope, $element: this.$element};\n    const /** @type {?} */ controller: any =\n        this.$controller(controllerType, locals, null, this.directive.controllerAs);\n    this.$element.data(controllerKey( /** @type {?} */((this.directive.name))), controller);\n    return controller;\n  }\n/**\n * @param {?} $element\n * @param {?} require\n * @return {?}\n */\nprivate resolveRequired(\n      $element: angular.IAugmentedJQuery, require: angular.DirectiveRequireProperty): any {\n    if (!require) {\n      return undefined;\n    } else if (typeof require == 'string') {\n      let /** @type {?} */ name: string = /** @type {?} */(( <string>require));\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ startParent = false;\n      let /** @type {?} */ searchParents = false;\n      if (name.charAt(0) == '?') {\n        isOptional = true;\n        name = name.substr(1);\n      }\n      if (name.charAt(0) == '^') {\n        searchParents = true;\n        name = name.substr(1);\n      }\n      if (name.charAt(0) == '^') {\n        startParent = true;\n        name = name.substr(1);\n      }\n\n      const /** @type {?} */ key = controllerKey(name);\n      if (startParent) $element = /** @type {?} */(( $element.parent))();\n      const /** @type {?} */ dep = searchParents ? /** @type {?} */(( $element.inheritedData))(key) : /** @type {?} */(( $element.data))(key);\n      if (!dep && !isOptional) {\n        throw new Error(`Can not locate '${require}' in '${this.directive.name}'.`);\n      }\n      return dep;\n    } else if (require instanceof Array) {\n      const /** @type {?} */ deps: any[] = [];\n      for (let /** @type {?} */ i = 0; i < require.length; i++) {\n        deps.push(this.resolveRequired($element, require[i]));\n      }\n      return deps;\n    }\n    throw new Error(\n        `Directive '${this.directive.name}' require syntax unrecognized: ${this.directive.require}`);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.controllerInstance;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.destinationObj;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkLastValues;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.componentScope;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.linkFn;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$controller;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propOuts;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propertyMap;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allow an Angular service to be accessible from AngularJS.\n * \n * \\@howToUse \n * \n * First ensure that the service to be downgraded is provided in an {\\@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n * \n * and that we have included this in our upgrade app {\\@link NgModule}\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n * \n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n * \n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"example-app\"}\n * \n * \\@description \n * \n * Takes a `token` that identifies a service provided from Angular.\n * \n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n * \n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n * \n * \\@experimental\n * @param {?} token\n * @return {?}\n */\nexport function downgradeInjectable(token: any): Function {\n  const /** @type {?} */ factory = function(i: Injector) { return i.get(token); };\n  ( /** @type {?} */((factory as any)))['$inject'] = [INJECTOR_KEY];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {controllerKey, getComponentName} from './util';\n\nlet /** @type {?} */ downgradeCount = 0;\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an Angular component to be used from AngularJS.\n * \n * \\@howToUse \n * \n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n * \n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n * \n * \\@description \n * \n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n * \n * The parameter contains information about the Component that is being downgraded:\n * \n * * `component: Type<any>`: The type of the Component that will be downgraded\n * \n * \\@experimental\n * @param {?} info\n * @return {?}\n */\nexport function downgradeComponent(info: {\n  component: Type<any>;\n  /** @deprecated since v4. This parameter is no longer used */\n  inputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  outputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  selectors?: string[];\n}): any /* angular.IInjectable */ {\n  const /** @type {?} */ idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let /** @type {?} */ idCount = 0;\n\n  const /** @type {?} */ directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const /** @type {?} */ parentInjector: Injector|ParentInjectorPromise =\n            required[0] || $injector.get(INJECTOR_KEY);\n        const /** @type {?} */ ngModel: angular.INgModelController = required[1];\n\n        const /** @type {?} */ downgradeFn = (injector: Injector) => {\n          const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const /** @type {?} */ componentFactory: ComponentFactory<any> = /** @type {?} */((\n              componentFactoryResolver.resolveComponentFactory(info.component)));\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const /** @type {?} */ id = idPrefix + (idCount++);\n          const /** @type {?} */ injectorPromise = new ParentInjectorPromise(element);\n          const /** @type {?} */ facade = new DowngradeComponentAdapter(\n              id, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory);\n\n          const /** @type {?} */ projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs();\n          facade.setupOutputs();\n          facade.registerCleanup();\n\n          injectorPromise.resolve(facade.getInjector());\n        };\n\n        if (parentInjector instanceof ParentInjectorPromise) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate injectorKey: string = controllerKey(INJECTOR_KEY);\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) {\n    // Store the promise on the element.\n    element.data !(this.injectorKey, this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector; /** @type {?} */((\n\n    // Store the real injector on the element.\n    this.element.data))(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = /** @type {?} */(( null));\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.injectorKey;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, ReflectiveInjector, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {getAttributesAsArray, getComponentName, hookupNgModel, strictEquals} from './util';\n\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nexport class DowngradeComponentAdapter {\nprivate inputChangeCount: number = 0;\nprivate inputChanges: SimpleChanges|null = null;\nprivate componentScope: angular.IScope;\nprivate componentRef: ComponentRef<any>|null = null;\nprivate component: any = null;\nprivate changeDetector: ChangeDetectorRef|null = null;\n/**\n * @param {?} id\n * @param {?} element\n * @param {?} attrs\n * @param {?} scope\n * @param {?} ngModel\n * @param {?} parentInjector\n * @param {?} $injector\n * @param {?} $compile\n * @param {?} $parse\n * @param {?} componentFactory\n */\nconstructor(\nprivate id: string,\nprivate element: angular.IAugmentedJQuery,\nprivate attrs: angular.IAttributes,\nprivate scope: angular.IScope,\nprivate ngModel: angular.INgModelController,\nprivate parentInjector: Injector,\nprivate $injector: angular.IInjectorService,\nprivate $compile: angular.ICompileService,\nprivate $parse: angular.IParseService,\nprivate componentFactory: ComponentFactory<any>) {\n    (this.element[0] as any).id = id;\n    this.componentScope = scope.$new();\n  }\n/**\n * @return {?}\n */\ncompileContents(): Node[][] {\n    const /** @type {?} */ compiledProjectableNodes: Node[][] = [];\n    const /** @type {?} */ projectableNodes: Node[][] = this.groupProjectableNodes();\n    const /** @type {?} */ linkFns = projectableNodes.map(nodes => this.$compile(nodes)); /** @type {?} */((\n\n    this.element.empty))();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone); /** @type {?} */((\n        this.element.append))(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n/**\n * @param {?} projectableNodes\n * @return {?}\n */\ncreateComponent(projectableNodes: Node[][]) {\n    const /** @type {?} */ childInjector = ReflectiveInjector.resolveAndCreate(\n        [{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n/**\n * @return {?}\n */\nsetupInputs(): void {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ inputs = this.componentFactory.inputs || [];\n    for (let /** @type {?} */ i = 0; i < inputs.length; i++) {\n      const /** @type {?} */ input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n      let /** @type {?} */ expr: any /** TODO #9100 */ = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const /** @type {?} */ observeFn = (prop => {\n          let /** @type {?} */ prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            // Initially, both `$observe()` and `$watch()` will call this function.\n            if (!strictEquals(prevValue, currValue)) {\n              if (prevValue === INITIAL_VALUE) {\n                prevValue = currValue;\n              }\n\n              this.updateInput(prop, prevValue, currValue);\n              prevValue = currValue;\n            }\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n        // Use `$watch()` (in addition to `$observe()`) in order to initialize the input  in time\n        // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n        // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n        let /** @type {?} */ unwatch: any = this.componentScope.$watch(() => {\n          unwatch('');\n          unwatch = null;\n          observeFn(( /** @type {?} */((attrs as any)))[input.attr]);\n        });\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const /** @type {?} */ watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    const /** @type {?} */ prototype = this.componentFactory.componentType.prototype;\n    if (prototype && ( /** @type {?} */((<OnChanges>prototype))).ngOnChanges) {\n      // Detect: OnChanges interface\n      this.inputChanges = {};\n      this.componentScope.$watch(() => this.inputChangeCount, () => {\n        const /** @type {?} */ inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        ( /** @type {?} */((<OnChanges>this.component))).ngOnChanges( /** @type {?} */((inputChanges)));\n      });\n    }\n    this.componentScope.$watch(() => this.changeDetector && this.changeDetector.detectChanges());\n  }\n/**\n * @return {?}\n */\nsetupOutputs() {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ outputs = this.componentFactory.outputs || [];\n    for (let /** @type {?} */ j = 0; j < outputs.length; j++) {\n      const /** @type {?} */ output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n      let /** @type {?} */ expr: any /** TODO #9100 */ = null;\n      let /** @type {?} */ assignExpr = false;\n\n      const /** @type {?} */ bindonAttr =\n          output.bindonAttr ? output.bindonAttr.substring(0, output.bindonAttr.length - 6) : null;\n      const /** @type {?} */ bracketParenAttr = output.bracketParenAttr ?\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]` :\n          null;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[output.parenAttr];\n      } else if (attrs.hasOwnProperty( /** @type {?} */((bindonAttr)))) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[ /** @type {?} */((bindonAttr))];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty( /** @type {?} */((bracketParenAttr)))) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[ /** @type {?} */((bracketParenAttr))];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const /** @type {?} */ getter = this.$parse(expr);\n        const /** @type {?} */ setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const /** @type {?} */ emitter = /** @type {?} */(( this.component[output.prop] as EventEmitter<any>));\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ?\n                ((setter: any) => (v: any /** TODO #9100 */) => setter(this.scope, v))(setter) :\n                ((getter: any) => (v: any /** TODO #9100 */) =>\n                     getter(this.scope, {'$event': v}))(getter)\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.componentFactory.componentType)}'!`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nregisterCleanup() { /** @type {?} */((\n    this.element.bind))('$destroy', () => {\n      this.componentScope.$destroy(); /** @type {?} */((\n      this.componentRef)).destroy();\n    });\n  }\n/**\n * @return {?}\n */\ngetInjector(): Injector { return /** @type {?} */(( this.componentRef)) && /** @type {?} */(( this.componentRef)).injector; }\n/**\n * @param {?} prop\n * @param {?} prevValue\n * @param {?} currValue\n * @return {?}\n */\nprivate updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.inputChanges) {\n      this.inputChangeCount++;\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.component[prop] = currValue;\n  }\n/**\n * @return {?}\n */\ngroupProjectableNodes() {\n    let /** @type {?} */ ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, /** @type {?} */(( this.element.contents))());\n  }\n}\n\nfunction DowngradeComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChangeCount;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentScope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.component;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.changeDetector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.id;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.element;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.attrs;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.scope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.ngModel;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.parentInjector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$injector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$compile;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$parse;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentFactory;\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const /** @type {?} */ projectableNodes: Node[][] = [];\n  let /** @type {?} */ wildcardNgContentIndex: number;\n\n  for (let /** @type {?} */ i = 0, /** @type {?} */ ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let /** @type {?} */ j = 0, /** @type {?} */ jj = nodes.length; j < jj; ++j) {\n    const /** @type {?} */ node = nodes[j];\n    const /** @type {?} */ ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n/**\n * @param {?} element\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number|null {\n  const /** @type {?} */ ngContentIndices: number[] = [];\n  let /** @type {?} */ wildcardNgContentIndex: number = -1;\n  for (let /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n    const /** @type {?} */ selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nlet /** @type {?} */ _matches: (this: any, selector: string) => boolean;\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nfunction matchesSelector(el: any, selector: string): boolean {\n  if (!_matches) {\n    const /** @type {?} */ elProto = /** @type {?} */(( <any>Element.prototype));\n    _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n        elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n  }\n  return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\nimport * as angular from './angular1';\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const /** @type {?} */ attributes = node.attributes;\n  let /** @type {?} */ asArray: [string, string][] = /** @type {?} */(( undefined));\n  if (attributes) {\n    let /** @type {?} */ attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let /** @type {?} */ i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, /** @type {?} */(( attributes[i].nodeValue))];\n    }\n  }\n  return asArray || [];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return ( /** @type {?} */((component as any))).overriddenName || component.name || component.toString().split('\\n')[0];\n}\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\nconstructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nfunction Deferred_tsickle_Closure_declarations() {\n/** @type {?} */\nDeferred.prototype.promise;\n/** @type {?} */\nDeferred.prototype.resolve;\n/** @type {?} */\nDeferred.prototype.reject;\n}\n\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n  }\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} val1\n * @param {?} val2\n * @return {?}\n */\nexport function strictEquals(val1: any, val2: any): boolean {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n","\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n/**\n * @param {?} prop\n * @param {?} attr\n */\nconstructor(public prop: string,\npublic attr: string) { this.parseBinding(); }\n/**\n * @return {?}\n */\nprivate parseBinding() {\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const /** @type {?} */ capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n\nfunction PropertyBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyBinding.prototype.bracketAttr;\n/** @type {?} */\nPropertyBinding.prototype.bracketParenAttr;\n/** @type {?} */\nPropertyBinding.prototype.parenAttr;\n/** @type {?} */\nPropertyBinding.prototype.onAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindonAttr;\n/** @type {?} */\nPropertyBinding.prototype.prop;\n/** @type {?} */\nPropertyBinding.prototype.attr;\n}\n\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const $COMPILE = '$compile';\nexport const /** @type {?} */ $CONTROLLER = '$controller';\nexport const /** @type {?} */ $DELEGATE = '$delegate';\nexport const /** @type {?} */ $HTTP_BACKEND = '$httpBackend';\nexport const /** @type {?} */ $INJECTOR = '$injector';\nexport const /** @type {?} */ $PARSE = '$parse';\nexport const /** @type {?} */ $PROVIDE = '$provide';\nexport const /** @type {?} */ $ROOT_SCOPE = '$rootScope';\nexport const /** @type {?} */ $SCOPE = '$scope';\nexport const /** @type {?} */ $TEMPLATE_CACHE = '$templateCache';\nexport const /** @type {?} */ $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const /** @type {?} */ $$TESTABILITY = '$$testability';\n\nexport const /** @type {?} */ COMPILER_KEY = '$$angularCompiler';\nexport const /** @type {?} */ GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const /** @type {?} */ INJECTOR_KEY = '$$angularInjector';\nexport const /** @type {?} */ NG_ZONE_KEY = '$$angularNgZone';\n\nexport const /** @type {?} */ REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const /** @type {?} */ REQUIRE_NG_MODEL = '?ngModel';\n\nexport const /** @type {?} */ UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function { $inject?: Ng1Token[]; }\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(): any;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: boolean|'element'|{[key: string]: string};\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: boolean;\n}\nexport interface IAttributes { $observe(attr: string, fn: (v: string) => void): void; }\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction {\n  // Let's hint but not force cloneAttachFn's signature\n  (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  bind?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n};\nexport interface IProvider { $get: IInjectable; }\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService { (expression: string): ICompiledExpression; }\nexport interface ICompiledExpression { assign(context: any, value: any): any; }\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n/**\n * @return {?}\n */\nfunction noNg() {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\n\nlet /** @type {?} */ angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig) =>\n                 void,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: (e: Element | string) => IAugmentedJQuery,\n  version: {major: number},\n  resumeBootstrap: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = /** @type {?} */(( <any>{\n  bootstrap: noNg,\n  module: noNg,\n  element: noNg,\n  version: noNg,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n}));\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = ( /** @type {?} */((<any>window))).angular;\n  }\n} catch ( /** @type {?} */e) {\n  // ignore in CJS mode.\n}\n/**\n * Resets the AngularJS library.\n * \n * Used when angularjs is loaded lazily, and not available on `window`.\n * \n * \\@stable\n * @param {?} ng\n * @return {?}\n */\nexport function setAngularLib(ng: any): void {\n  angular = ng;\n}\n/**\n * Returns the current version of the AngularJS library.\n * \n * \\@stable\n * @return {?}\n */\nexport function getAngularLib(): any {\n  return angular;\n}\n\nexport const /** @type {?} */ bootstrap =\n    (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig): void =>\n        angular.bootstrap(e, modules, config);\n\nexport const /** @type {?} */ module = (prefix: string, dependencies?: string[]): IModule =>\n    angular.module(prefix, dependencies);\n\nexport const /** @type {?} */ element = (e: Element | string): IAugmentedJQuery => angular.element(e);\n\nexport const /** @type {?} */ resumeBootstrap = (): void => angular.resumeBootstrap();\n\nexport const /** @type {?} */ getTestability = (e: Element): ITestabilityService => angular.getTestability(e);\n\nexport const /** @type {?} */ version = angular.version;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * \\@stable\n */\nexport const VERSION = new Version('4.2.0-rc.1-c20f60b');\n"],"names":["angular.module","angular.element","element","angular.bootstrap","INITIAL_VALUE","ParentInjectorPromise","module"],"mappings":"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"}
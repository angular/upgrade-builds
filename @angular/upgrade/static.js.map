{"version":3,"file":"static.js","sources":["../../../../../packages/upgrade/static/index.ts","../../../../../packages/upgrade/static/public_api.ts","../../../../../packages/upgrade/static/src/static/upgrade_module.ts","../../../../../packages/upgrade/static/src/static/angular1_providers.ts","../../../../../packages/upgrade/static/src/static/upgrade_component.ts","../../../../../packages/upgrade/static/src/common/version.ts","../../../../../packages/upgrade/static/src/common/downgrade_injectable.ts","../../../../../packages/upgrade/static/src/common/downgrade_component.ts","../../../../../packages/upgrade/static/src/common/downgrade_component_adapter.ts","../../../../../packages/upgrade/static/src/common/util.ts","../../../../../packages/upgrade/static/src/common/component_info.ts","../../../../../packages/upgrade/static/src/common/constants.ts","../../../../../packages/upgrade/static/src/common/angular1.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {angular1Providers as ɵe,compileFactory as ɵc,injectorFactory as ɵa,parseFactory as ɵd,rootScopeFactory as ɵb} from './src/static/angular1_providers';","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the upgrade/static package, allowing\n * Angular 1 and Angular 2+ to run side by side in the same application.\n */\nexport {getAngularLib, setAngularLib} from './src/common/angular1';\nexport {downgradeComponent} from './src/common/downgrade_component';\nexport {downgradeInjectable} from './src/common/downgrade_injectable';\nexport {VERSION} from './src/common/version';\nexport {UpgradeComponent} from './src/static/upgrade_component';\nexport {UpgradeModule} from './src/static/upgrade_module';\n\n// This file only re-exports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, NgModule, NgZone, Testability, ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$$TESTABILITY, $DELEGATE, $INJECTOR, $PROVIDE, INJECTOR_KEY, UPGRADE_MODULE_NAME} from '../common/constants';\nimport {controllerKey} from '../common/util';\n\nimport {angular1Providers, setTempInjectorRef} from './angular1_providers';\n\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows AngularJS and Angular components to be used together inside a hybrid upgrade\n * application, which supports AoT compilation.\n *\n * Specifically, the classes and functions in the `upgrade/static` module allow the following:\n * 1. Creation of an Angular directive that wraps and exposes an AngularJS component so\n *    that it can be used in an Angular template. See {@link UpgradeComponent}.\n * 2. Creation of an AngularJS directive that wraps and exposes an Angular component so\n *    that it can be used in an AngularJS template. See {@link downgradeComponent}.\n * 3. Creation of an Angular root injector provider that wraps and exposes an AngularJS\n *    service so that it can be injected into an Angular context. See\n *    {@link UpgradeModule#upgrading-an-angular-1-service Upgrading an AngularJS service} below.\n * 4. Creation of an AngularJS service that wraps and exposes an Angular injectable\n *    so that it can be injected into an AngularJS context. See {@link downgradeInjectable}.\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application. See the\n *    {@link UpgradeModule#example example} below.\n *\n * ## Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside the AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside the Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\n *    defining an Angular directive, which bootstraps the AngularJS component at its location\n *    in the DOM. See {@link UpgradeComponent}.\n * 6. An Angular component can be \"downgraded\"\" to an AngularJS component. This is achieved by\n *    defining an AngularJS directive, which bootstraps the Angular component at its location\n *    in the DOM. See {@link downgradeComponent}.\n * 7. Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\n *    the framework doing the instantiation. The other framework then instantiates and owns the\n *    view for that component.\n *    a. This implies that the component bindings will always follow the semantics of the\n *       instantiation framework.\n *    b. The DOM attributes are parsed by the framework that owns the current template. So\n * attributes\n *       in AngularJS templates must use kebab-case, while AngularJS templates must use camelCase.\n *    c. However the template binding syntax will always use the Angular style, e.g. square\n *       brackets (`[...]`) for property binding.\n * 8. AngularJS is always bootstrapped first and owns the root component.\n * 9. The new application is running in an Angular zone, and therefore it no longer needs calls\n * to\n *    `$apply()`.\n *\n * @howToUse\n *\n * `import {UpgradeModule} from '@angular/upgrade/static';`\n *\n * ## Example\n * Import the {@link UpgradeModule} into your top level {@link NgModule Angular `NgModule`}.\n *\n * {@example upgrade/static/ts/module.ts region='ng2-module'}\n *\n * Then bootstrap the hybrid upgrade app's module, get hold of the {@link UpgradeModule} instance\n * and use it to bootstrap the top level [AngularJS\n * module](https://docs.angularjs.org/api/ng/type/angular.Module).\n *\n * {@example upgrade/static/ts/module.ts region='bootstrap'}\n *\n *\n * ## Upgrading an AngularJS service\n *\n * There is no specific API for upgrading an AngularJS service. Instead you should just follow the\n * following recipe:\n *\n * Let's say you have an AngularJS service:\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-title-case-service\"}\n *\n * Then you should define an Angular provider to be included in your {@link NgModule} `providers`\n * property.\n *\n * {@example upgrade/static/ts/module.ts region=\"upgrade-ng1-service\"}\n *\n * Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\n * or service.\n *\n * {@example upgrade/static/ts/module.ts region=\"use-ng1-upgraded-service\"}\n *\n * @description\n *\n * This class is an `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * ## Core AngularJS services\n * Importing this {@link NgModule} will add providers for the core\n * [AngularJS services](https://docs.angularjs.org/api/ng/service) to the root injector.\n *\n * ## Bootstrap\n * The runtime instance of this class contains a {@link UpgradeModule#bootstrap `bootstrap()`}\n * method, which you use to bootstrap the top level AngularJS module onto an element in the\n * DOM for the hybrid upgrade app.\n *\n * It also contains properties to access the {@link UpgradeModule#injector root injector}, the\n * bootstrap {@link NgZone} and the\n * [AngularJS $injector](https://docs.angularjs.org/api/auto/service/$injector).\n *\n * @experimental\n */\n\nexport class UpgradeModule {\n  /**\n   * The AngularJS `$injector` for the upgrade application.\n   */\n  public $injector: any /*angular.IInjectorService*/;\n  /** The Angular Injector **/\n  public injector: Injector;\n\n  constructor(\n      /** The root {@link Injector} for the upgrade application. */\n      injector: Injector,\n      /** The bootstrap zone for the upgrade application */\n      public ngZone: NgZone) {\n    this.injector = new NgAdapterInjector(injector);\n  }\n\n  /**\n   * Bootstrap an AngularJS application from this NgModule\n   * @param element the element on which to bootstrap the AngularJS application\n   * @param [modules] the AngularJS modules to bootstrap for this application\n   * @param [config] optional extra AngularJS bootstrap configuration\n   */\n  bootstrap(\n      element: Element, modules: string[] = [], config?: any /*angular.IAngularBootstrapConfig*/) {\n    const INIT_MODULE_NAME = UPGRADE_MODULE_NAME + '.init';\n\n    // Create an ng1 module to bootstrap\n    const initModule =\n        angular\n            .module(INIT_MODULE_NAME, [])\n\n            .value(INJECTOR_KEY, this.injector)\n\n            .config([\n              $PROVIDE, $INJECTOR,\n              ($provide: angular.IProvideService, $injector: angular.IInjectorService) => {\n                if ($injector.has($$TESTABILITY)) {\n                  $provide.decorator($$TESTABILITY, [\n                    $DELEGATE,\n                    (testabilityDelegate: angular.ITestabilityService) => {\n                      const originalWhenStable: Function = testabilityDelegate.whenStable;\n                      const injector = this.injector;\n                      // Cannot use arrow function below because we need the context\n                      const newWhenStable = function(callback: Function) {\n                        originalWhenStable.call(testabilityDelegate, function() {\n                          const ng2Testability: Testability = injector.get(Testability);\n                          if (ng2Testability.isStable()) {\n                            callback();\n                          } else {\n                            ng2Testability.whenStable(\n                                newWhenStable.bind(testabilityDelegate, callback));\n                          }\n                        });\n                      };\n\n                      testabilityDelegate.whenStable = newWhenStable;\n                      return testabilityDelegate;\n                    }\n                  ]);\n                }\n              }\n            ])\n\n            .run([\n              $INJECTOR,\n              ($injector: angular.IInjectorService) => {\n                this.$injector = $injector;\n\n                // Initialize the ng1 $injector provider\n                setTempInjectorRef($injector);\n                this.injector.get($INJECTOR);\n\n                // Put the injector on the DOM, so that it can be \"required\"\n                angular.element(element).data !(controllerKey(INJECTOR_KEY), this.injector);\n\n                // Wire up the ng1 rootScope to run a digest cycle whenever the zone settles\n                // We need to do this in the next tick so that we don't prevent the bootup\n                // stabilizing\n                setTimeout(() => {\n                  const $rootScope = $injector.get('$rootScope');\n                  const subscription =\n                      this.ngZone.onMicrotaskEmpty.subscribe(() => $rootScope.$digest());\n                  $rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                }, 0);\n              }\n            ]);\n\n    const upgradeModule = angular.module(UPGRADE_MODULE_NAME, [INIT_MODULE_NAME].concat(modules));\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const windowAngular = (window as any /** TODO #???? */)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    // Bootstrap the AngularJS application inside our zone\n    this.ngZone.run(() => { angular.bootstrap(element, [upgradeModule.name], config); });\n\n    // Patch resumeBootstrap() to run inside the ngZone\n    if (windowAngular.resumeBootstrap) {\n      const originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n      const ngZone = this.ngZone;\n      windowAngular.resumeBootstrap = function() {\n        let args = arguments;\n        windowAngular.resumeBootstrap = originalResumeBootstrap;\n        ngZone.run(() => { windowAngular.resumeBootstrap.apply(this, args); });\n      };\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{providers: [angular1Providers]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: NgZone, },\n];\n}\n\nclass NgAdapterInjector implements Injector {\n  constructor(private modInjector: Injector) {}\n\n  // When Angular locate a service in the component injector tree, the not found value is set to\n  // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n  // injector.\n  // AngularJS only supports a single tree and should always check the module injector.\n  get(token: any, notFoundValue?: any): any {\n    if (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n      return notFoundValue;\n    }\n\n    return this.modInjector.get(token, notFoundValue);\n  }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as angular from '../common/angular1';\n\n// We have to do a little dance to get the ng1 injector into the module injector.\n// We store the ng1 injector so that the provider in the module injector can access it\n// Then we \"get\" the ng1 injector from the module injector, which triggers the provider to read\n// the stored injector and release the reference to it.\nlet tempInjectorRef: angular.IInjectorService|null;\nexport function setTempInjectorRef(injector: angular.IInjectorService) {\n  tempInjectorRef = injector;\n}\nexport function injectorFactory() {\n  const injector: angular.IInjectorService|null = tempInjectorRef;\n  tempInjectorRef = null;  // clear the value to prevent memory leaks\n  return injector;\n}\n\nexport function rootScopeFactory(i: angular.IInjectorService) {\n  return i.get('$rootScope');\n}\n\nexport function compileFactory(i: angular.IInjectorService) {\n  return i.get('$compile');\n}\n\nexport function parseFactory(i: angular.IInjectorService) {\n  return i.get('$parse');\n}\n\nexport const angular1Providers = [\n  // We must use exported named functions for the ng2 factories to keep the compiler happy:\n  // > Metadata collected contains an error that will be reported at runtime:\n  // >   Function calls are not supported.\n  // >   Consider replacing the function or lambda with a reference to an exported function\n  {provide: '$injector', useFactory: injectorFactory},\n  {provide: '$rootScope', useFactory: rootScopeFactory, deps: ['$injector']},\n  {provide: '$compile', useFactory: compileFactory, deps: ['$injector']},\n  {provide: '$parse', useFactory: parseFactory, deps: ['$injector']}\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DoCheck, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges, ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport * as angular from '../common/angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $SCOPE, $TEMPLATE_CACHE} from '../common/constants';\nimport {controllerKey} from '../common/util';\n\nconst REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\nconst NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nclass Bindings {\n  twoWayBoundProperties: string[] = [];\n  twoWayBoundLastValues: any[] = [];\n\n  expressionBoundProperties: string[] = [];\n\n  propertyToOutputMap: {[propName: string]: string} = {};\n}\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an AngularJS component to be used from Angular.\n *\n * @howToUse\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n *\n * We must create a {@link Directive} that will make this AngularJS component\n * available inside Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the {@link UpgradeComponent}\n * base class but also provide an {@link Directive `@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the {@link ElementRef} and {@link Injector} for the component wrapper\n *\n * @description\n *\n * A helper class that should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * @experimental\n */\nexport class UpgradeComponent implements OnInit, OnChanges, DoCheck, OnDestroy {\n  private $injector: angular.IInjectorService;\n  private $compile: angular.ICompileService;\n  private $templateCache: angular.ITemplateCacheService;\n  private $httpBackend: angular.IHttpBackendService;\n  private $controller: angular.IControllerService;\n\n  private element: Element;\n  private $element: angular.IAugmentedJQuery;\n  private $componentScope: angular.IScope;\n\n  private directive: angular.IDirective;\n  private bindings: Bindings;\n\n  private controllerInstance: IControllerInstance;\n  private bindingDestination: IBindingDestination;\n\n  // We will be instantiating the controller in the `ngOnInit` hook, when the first `ngOnChanges`\n  // will have been already triggered. We store the `SimpleChanges` and \"play them back\" later.\n  private pendingChanges: SimpleChanges|null;\n\n  private unregisterDoCheckWatcher: Function;\n\n  /**\n   * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n   * Instead you should derive a new class from this one and call the super constructor\n   * from the base class.\n   *\n   * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\" }\n   *\n   * * The `name` parameter should be the name of the AngularJS directive.\n   * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n   *   injection into the base class constructor.\n   *\n   * Note that we must manually implement lifecycle hooks that call through to the super class.\n   * This is because, at the moment, the AoT compiler is not able to tell that the\n   * `UpgradeComponent`\n   * already implements them and so does not wire up calls to them at runtime.\n   */\n  constructor(private name: string, private elementRef: ElementRef, private injector: Injector) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$templateCache = this.$injector.get($TEMPLATE_CACHE);\n    this.$httpBackend = this.$injector.get($HTTP_BACKEND);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = this.getDirective(name);\n    this.bindings = this.initializeBindings(this.directive);\n\n    // We ask for the AngularJS scope from the Angular injector, since\n    // we will put the new component scope onto the new injector for each component\n    const $parentScope = injector.get($SCOPE);\n    // QUESTION 1: Should we create an isolated scope if the scope is only true?\n    // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n    this.$componentScope = $parentScope.$new(!!this.directive.scope);\n\n    this.initializeOutputs();\n  }\n\n  ngOnInit() {\n    // Collect contents, insert and compile template\n    const contentChildNodes = this.extractChildNodes(this.element);\n    const linkFn = this.compileTemplate(this.directive);\n\n    // Instantiate controller\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    if (controllerType) {\n      this.controllerInstance = this.buildController(\n          controllerType, this.$componentScope, this.$element, this.directive.controllerAs !);\n    } else if (bindToController) {\n      throw new Error(\n          `Upgraded directive '${this.directive.name}' specifies 'bindToController' but no controller.`);\n    }\n\n    // Set up outputs\n    this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n    this.bindOutputs();\n\n    // Require other controllers\n    const directiveRequire = this.getDirectiveRequire(this.directive);\n    const requiredControllers =\n        this.resolveRequire(this.directive.name !, this.$element, directiveRequire);\n\n    if (this.directive.bindToController && isMap(directiveRequire)) {\n      const requiredControllersMap = requiredControllers as{[key: string]: IControllerInstance};\n      Object.keys(requiredControllersMap).forEach(key => {\n        this.controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    // Hook: $onChanges\n    if (this.pendingChanges) {\n      this.forwardChanges(this.pendingChanges);\n      this.pendingChanges = null;\n    }\n\n    // Hook: $onInit\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    // Hook: $doCheck\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      const callDoCheck = () => this.controllerInstance.$doCheck !();\n\n      this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n      callDoCheck();\n    }\n\n    // Linking\n    const link = this.directive.link;\n    const preLink = (typeof link == 'object') && (link as angular.IDirectivePrePost).pre;\n    const postLink = (typeof link == 'object') ? (link as angular.IDirectivePrePost).post : link;\n    const attrs: angular.IAttributes = NOT_SUPPORTED;\n    const transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n    if (preLink) {\n      preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    const attachChildNodes: angular.ILinkFn = (scope, cloneAttach) =>\n        cloneAttach !(contentChildNodes);\n    linkFn(this.$componentScope, null !, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    // Hook: $postLink\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.bindingDestination) {\n      this.pendingChanges = changes;\n    } else {\n      this.forwardChanges(changes);\n    }\n  }\n\n  ngDoCheck() {\n    const twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n    const twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n    const propertyToOutputMap = this.bindings.propertyToOutputMap;\n\n    twoWayBoundProperties.forEach((propName, idx) => {\n      const newValue = this.bindingDestination[propName];\n      const oldValue = twoWayBoundLastValues[idx];\n\n      if (!looseIdentical(newValue, oldValue)) {\n        const outputName = propertyToOutputMap[propName];\n        const eventEmitter: EventEmitter<any> = (this as any)[outputName];\n\n        eventEmitter.emit(newValue);\n        twoWayBoundLastValues[idx] = newValue;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (isFunction(this.unregisterDoCheckWatcher)) {\n      this.unregisterDoCheckWatcher();\n    }\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n    this.$componentScope.$destroy();\n  }\n\n  private getDirective(name: string): angular.IDirective {\n    const directives: angular.IDirective[] = this.$injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    if (directive.compile) this.notSupported('compile');\n    const link = directive.link;\n    // QUESTION: why not support link.post?\n    if (typeof link == 'object') {\n      if ((<angular.IDirectivePrePost>link).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n\n  private getDirectiveRequire(directive: angular.IDirective): angular.DirectiveRequireProperty {\n    const require = directive.require || (directive.controller && directive.name) !;\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const value = require[key];\n        const match = value.match(REQUIRE_PREFIX_RE) !;\n        const name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n\n  private initializeBindings(directive: angular.IDirective) {\n    const btcIsObject = typeof directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time is not supported.`);\n    }\n\n    const context = (btcIsObject) ? directive.bindToController : directive.scope;\n    const bindings = new Bindings();\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const definition = context[propName];\n        const bindingType = definition.charAt(0);\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            // We don't need to do anything special. They will be defined as inputs on the\n            // upgraded component facade and the change propagation will be handled by\n            // `ngOnChanges()`.\n            break;\n          case '=':\n            bindings.twoWayBoundProperties.push(propName);\n            bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n            bindings.propertyToOutputMap[propName] = propName + 'Change';\n            break;\n          case '&':\n            bindings.expressionBoundProperties.push(propName);\n            bindings.propertyToOutputMap[propName] = propName;\n            break;\n          default:\n            let json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n\n    return bindings;\n  }\n\n  private extractChildNodes(element: Element): Node[] {\n    const childNodes: Node[] = [];\n    let childNode: Node|null;\n\n    while (childNode = element.firstChild) {\n      element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n\n  private compileTemplate(directive: angular.IDirective): angular.ILinkFn {\n    if (this.directive.template !== undefined) {\n      return this.compileHtml(getOrCall(this.directive.template));\n    } else if (this.directive.templateUrl) {\n      const url = getOrCall(this.directive.templateUrl);\n      const html = this.$templateCache.get(url) as string;\n      if (html !== undefined) {\n        return this.compileHtml(html);\n      } else {\n        throw new Error('loading directive templates asynchronously is not supported');\n        // return new Promise((resolve, reject) => {\n        //   this.$httpBackend('GET', url, null, (status: number, response: string) => {\n        //     if (status == 200) {\n        //       resolve(this.compileHtml(this.$templateCache.put(url, response)));\n        //     } else {\n        //       reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n        //     }\n        //   });\n        // });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n  }\n\n  private buildController(\n      controllerType: angular.IController, $scope: angular.IScope,\n      $element: angular.IAugmentedJQuery, controllerAs: string) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const locals = {'$scope': $scope, '$element': $element};\n    const controller = this.$controller(controllerType, locals, null, controllerAs);\n    $element.data !(controllerKey(this.directive.name !), controller);\n    return controller;\n  }\n\n  private resolveRequire(\n      directiveName: string, $element: angular.IAugmentedJQuery,\n      require: angular.DirectiveRequireProperty):\n      angular.SingleOrListOrMap<IControllerInstance>|null {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(directiveName, $element, req));\n    } else if (typeof require === 'object') {\n      const value: {[key: string]: IControllerInstance} = {};\n\n      Object.keys(require).forEach(\n          key => value[key] = this.resolveRequire(directiveName, $element, require[key]) !);\n\n      return value;\n    } else if (typeof require === 'string') {\n      const match = require.match(REQUIRE_PREFIX_RE) !;\n      const inheritType = match[1] || match[3];\n\n      const name = require.substring(match[0].length);\n      const isOptional = !!match[2];\n      const searchParents = !!inheritType;\n      const startOnParent = inheritType === '^^';\n\n      const ctrlKey = controllerKey(name);\n\n      if (startOnParent) {\n        $element = $element.parent !();\n      }\n\n      const value = searchParents ? $element.inheritedData !(ctrlKey) : $element.data !(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${directiveName}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized require syntax on upgraded directive '${directiveName}': ${require}`);\n    }\n  }\n\n  private initializeOutputs() {\n    // Initialize the outputs for `=` and `&` bindings\n    this.bindings.twoWayBoundProperties.concat(this.bindings.expressionBoundProperties)\n        .forEach(propName => {\n          const outputName = this.bindings.propertyToOutputMap[propName];\n          (this as any)[outputName] = new EventEmitter();\n        });\n  }\n\n  private bindOutputs() {\n    // Bind `&` bindings to the corresponding outputs\n    this.bindings.expressionBoundProperties.forEach(propName => {\n      const outputName = this.bindings.propertyToOutputMap[propName];\n      const emitter = (this as any)[outputName];\n\n      this.bindingDestination[propName] = (value: any) => emitter.emit(value);\n    });\n  }\n\n  private forwardChanges(changes: SimpleChanges) {\n    // Forward input changes to `bindingDestination`\n    Object.keys(changes).forEach(\n        propName => this.bindingDestination[propName] = changes[propName].currentValue);\n\n    if (isFunction(this.bindingDestination.$onChanges)) {\n      this.bindingDestination.$onChanges(changes);\n    }\n  }\n\n  private notSupported(feature: string) {\n    throw new Error(\n        `Upgraded directive '${this.name}' contains unsupported feature: '${feature}'.`);\n  }\n\n  private compileHtml(html: string): angular.ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n}\n\n\nfunction getOrCall<T>(property: Function | T): T {\n  return isFunction(property) ? property() : property;\n}\n\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\n// NOTE: Only works for `typeof T !== 'object'`.\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const VERSION = new Version('4.1.0-3f46645');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allow an Angular service to be accessible from AngularJS.\n *\n * @howToUse\n *\n * First ensure that the service to be downgraded is provided in an {@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app {@link NgModule}\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {@example upgrade/static/ts/module.ts region=\"example-app\"}\n *\n * @description\n *\n * Takes a `token` that identifies a service provided from Angular.\n *\n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n *\n * @experimental\n */\nexport function downgradeInjectable(token: any): Function {\n  const factory = function(i: Injector) { return i.get(token); };\n  (factory as any).$inject = [INJECTOR_KEY];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {controllerKey, getComponentName} from './util';\n\nlet downgradeCount = 0;\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an Angular component to be used from AngularJS.\n *\n * @howToUse\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * @description\n *\n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * The parameter contains information about the Component that is being downgraded:\n *\n * * `component: Type<any>`: The type of the Component that will be downgraded\n *\n * @experimental\n */\nexport function downgradeComponent(info: {\n  component: Type<any>;\n  /** @deprecated since v4. This parameter is no longer used */\n  inputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  outputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  selectors?: string[];\n}): any /* angular.IInjectable */ {\n  const idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let idCount = 0;\n\n  const directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const parentInjector: Injector|ParentInjectorPromise =\n            required[0] || $injector.get(INJECTOR_KEY);\n        const ngModel: angular.INgModelController = required[1];\n\n        const downgradeFn = (injector: Injector) => {\n          const componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const componentFactory: ComponentFactory<any> =\n              componentFactoryResolver.resolveComponentFactory(info.component) !;\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const id = idPrefix + (idCount++);\n          const injectorPromise = new ParentInjectorPromise(element);\n          const facade = new DowngradeComponentAdapter(\n              id, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory);\n\n          const projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs();\n          facade.setupOutputs();\n          facade.registerCleanup();\n\n          injectorPromise.resolve(facade.getInjector());\n        };\n\n        if (parentInjector instanceof ParentInjectorPromise) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\n  private injector: Injector;\n  private injectorKey: string = controllerKey(INJECTOR_KEY);\n  private callbacks: ((injector: Injector) => any)[] = [];\n\n  constructor(private element: angular.IAugmentedJQuery) {\n    // Store the promise on the element.\n    element.data !(this.injectorKey, this);\n  }\n\n  then(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n\n  resolve(injector: Injector) {\n    this.injector = injector;\n\n    // Store the real injector on the element.\n    this.element.data !(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = null !;\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, ReflectiveInjector, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {getAttributesAsArray, getComponentName, hookupNgModel} from './util';\n\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nexport class DowngradeComponentAdapter {\n  private inputChangeCount: number = 0;\n  private inputChanges: SimpleChanges|null = null;\n  private componentScope: angular.IScope;\n  private componentRef: ComponentRef<any>|null = null;\n  private component: any = null;\n  private changeDetector: ChangeDetectorRef|null = null;\n\n  constructor(\n      private id: string, private element: angular.IAugmentedJQuery,\n      private attrs: angular.IAttributes, private scope: angular.IScope,\n      private ngModel: angular.INgModelController, private parentInjector: Injector,\n      private $injector: angular.IInjectorService, private $compile: angular.ICompileService,\n      private $parse: angular.IParseService, private componentFactory: ComponentFactory<any>) {\n    (this.element[0] as any).id = id;\n    this.componentScope = scope.$new();\n  }\n\n  compileContents(): Node[][] {\n    const compiledProjectableNodes: Node[][] = [];\n    const projectableNodes: Node[][] = this.groupProjectableNodes();\n    const linkFns = projectableNodes.map(nodes => this.$compile(nodes));\n\n    this.element.empty !();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append !(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n\n  createComponent(projectableNodes: Node[][]) {\n    const childInjector = ReflectiveInjector.resolveAndCreate(\n        [{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n\n  setupInputs(): void {\n    const attrs = this.attrs;\n    const inputs = this.componentFactory.inputs || [];\n    for (let i = 0; i < inputs.length; i++) {\n      const input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n      let expr: any /** TODO #9100 */ = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const observeFn = (prop => {\n          let prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            if (prevValue === INITIAL_VALUE) {\n              prevValue = currValue;\n            }\n\n            this.updateInput(prop, prevValue, currValue);\n            prevValue = currValue;\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    const prototype = this.componentFactory.componentType.prototype;\n    if (prototype && (<OnChanges>prototype).ngOnChanges) {\n      // Detect: OnChanges interface\n      this.inputChanges = {};\n      this.componentScope.$watch(() => this.inputChangeCount, () => {\n        const inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        (<OnChanges>this.component).ngOnChanges(inputChanges !);\n      });\n    }\n    this.componentScope.$watch(() => this.changeDetector && this.changeDetector.detectChanges());\n  }\n\n  setupOutputs() {\n    const attrs = this.attrs;\n    const outputs = this.componentFactory.outputs || [];\n    for (let j = 0; j < outputs.length; j++) {\n      const output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n      let expr: any /** TODO #9100 */ = null;\n      let assignExpr = false;\n\n      const bindonAttr =\n          output.bindonAttr ? output.bindonAttr.substring(0, output.bindonAttr.length - 6) : null;\n      const bracketParenAttr = output.bracketParenAttr ?\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]` :\n          null;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[output.parenAttr];\n      } else if (attrs.hasOwnProperty(bindonAttr !)) {\n        expr = (attrs as any /** TODO #9100 */)[bindonAttr !];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty(bracketParenAttr !)) {\n        expr = (attrs as any /** TODO #9100 */)[bracketParenAttr !];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const getter = this.$parse(expr);\n        const setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const emitter = this.component[output.prop] as EventEmitter<any>;\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ?\n                ((setter: any) => (v: any /** TODO #9100 */) => setter(this.scope, v))(setter) :\n                ((getter: any) => (v: any /** TODO #9100 */) =>\n                     getter(this.scope, {$event: v}))(getter)\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.componentFactory.componentType)}'!`);\n        }\n      }\n    }\n  }\n\n  registerCleanup() {\n    this.element.bind !('$destroy', () => {\n      this.componentScope.$destroy();\n      this.componentRef !.destroy();\n    });\n  }\n\n  getInjector(): Injector { return this.componentRef ! && this.componentRef !.injector; }\n\n  private updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.inputChanges) {\n      this.inputChangeCount++;\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.component[prop] = currValue;\n  }\n\n  groupProjectableNodes() {\n    let ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, this.element.contents !());\n  }\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const projectableNodes: Node[][] = [];\n  let wildcardNgContentIndex: number;\n\n  for (let i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let j = 0, jj = nodes.length; j < jj; ++j) {\n    const node = nodes[j];\n    const ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number|null {\n  const ngContentIndices: number[] = [];\n  let wildcardNgContentIndex: number = -1;\n  for (let i = 0; i < ngContentSelectors.length; i++) {\n    const selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nlet _matches: (this: any, selector: string) => boolean;\n\nfunction matchesSelector(el: any, selector: string): boolean {\n  if (!_matches) {\n    const elProto = <any>Element.prototype;\n    _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n        elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n  }\n  return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\nimport * as angular from './angular1';\n\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const attributes = node.attributes;\n  let asArray: [string, string][] = undefined !;\n  if (attributes) {\n    let attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, attributes[i].nodeValue !];\n    }\n  }\n  return asArray || [];\n}\n\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return (component as any).overriddenName || component.name || component.toString().split('\\n')[0];\n}\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * @return Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n\n  constructor(public prop: string, public attr: string) { this.parseBinding(); }\n\n  private parseBinding() {\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const $COMPILE = '$compile';\nexport const $CONTROLLER = '$controller';\nexport const $DELEGATE = '$delegate';\nexport const $HTTP_BACKEND = '$httpBackend';\nexport const $INJECTOR = '$injector';\nexport const $PARSE = '$parse';\nexport const $PROVIDE = '$provide';\nexport const $ROOT_SCOPE = '$rootScope';\nexport const $SCOPE = '$scope';\nexport const $TEMPLATE_CACHE = '$templateCache';\nexport const $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const $$TESTABILITY = '$$testability';\n\nexport const COMPILER_KEY = '$$angularCompiler';\nexport const GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const INJECTOR_KEY = '$$angularInjector';\nexport const NG_ZONE_KEY = '$$angularNgZone';\n\nexport const REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const REQUIRE_NG_MODEL = '?ngModel';\n\nexport const UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function { $inject?: Ng1Token[]; }\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(): any;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: boolean|'element'|{[key: string]: string};\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: boolean;\n}\nexport interface IAttributes { $observe(attr: string, fn: (v: string) => void): void; }\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction {\n  // Let's hint but not force cloneAttachFn's signature\n  (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  bind?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n};\nexport interface IProvider { $get: IInjectable; }\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService { (expression: string): ICompiledExpression; }\nexport interface ICompiledExpression { assign(context: any, value: any): any; }\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n\nfunction noNg() {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\n\nlet angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig) =>\n                 void,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: (e: Element | string) => IAugmentedJQuery,\n  version: {major: number},\n  resumeBootstrap: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = <any>{\n  bootstrap: noNg,\n  module: noNg,\n  element: noNg,\n  version: noNg,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n};\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = (<any>window).angular;\n  }\n} catch (e) {\n  // ignore in CJS mode.\n}\n\n/**\n * Resets the AngularJS library.\n *\n * Used when angularjs is loaded lazily, and not available on `window`.\n *\n * @stable\n */\nexport function setAngularLib(ng: any): void {\n  angular = ng;\n}\n\n/**\n * Returns the current version of the AngularJS library.\n *\n * @stable\n */\nexport function getAngularLib(): any {\n  return angular;\n}\n\nexport const bootstrap =\n    (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig): void =>\n        angular.bootstrap(e, modules, config);\n\nexport const module = (prefix: string, dependencies?: string[]): IModule =>\n    angular.module(prefix, dependencies);\n\nexport const element = (e: Element | string): IAugmentedJQuery => angular.element(e);\n\nexport const resumeBootstrap = (): void => angular.resumeBootstrap();\n\nexport const getTestability = (e: Element): ITestabilityService => angular.getTestability(e);\n\nexport const version = angular.version;\n"],"names":["NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","angular.bootstrap","element","angular.module","angular.element","angular\n            .module","INITIAL_VALUE","looseIdentical","module"],"mappings":"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"}
{"version":3,"file":"upgrade.mjs","sources":["../../../../../../packages/upgrade/src/common/src/version.ts","../../../../../../packages/upgrade/src/common/src/angular1.ts","../../../../../../packages/upgrade/src/common/src/constants.ts","../../../../../../packages/upgrade/src/common/src/component_info.ts","../../../../../../packages/upgrade/src/common/src/util.ts","../../../../../../packages/upgrade/src/common/src/downgrade_component_adapter.ts","../../../../../../packages/upgrade/src/common/src/promise_util.ts","../../../../../../packages/upgrade/src/common/src/downgrade_component.ts","../../../../../../packages/upgrade/src/common/src/downgrade_injectable.ts","../../../../../../packages/upgrade/src/common/src/security/trusted_types.ts","../../../../../../packages/upgrade/src/common/src/upgrade_helper.ts","../../../../../../packages/upgrade/src/dynamic/src/upgrade_ng1_adapter.ts","../../../../../../packages/upgrade/src/dynamic/src/upgrade_adapter.ts","../../../../../../packages/upgrade/public_api.ts","../../../../../../packages/upgrade/index.ts","../../../../../../packages/upgrade/upgrade.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the upgrade package.\n */\n\nimport {Version} from '@angular/core';\n\n/**\n * @publicApi\n */\nexport const VERSION = new Version('19.2.0-next.2+sha-a7f20eb');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function {\n  // Older versions of `@types/angular` typings extend the global `Function` interface with\n  // `$inject?: string[]`, which is not compatible with `$inject?: ReadonlyArray<string>` (used in\n  // latest versions).\n  $inject?: Function extends {$inject?: string[]} ? Ng1Token[] : ReadonlyArray<Ng1Token>;\n}\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string | IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element | NodeList | Node[] | string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n  $$slots?: {[slotName: string]: ILinkFn};\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(exp: Ng1Expression, locals?: any): void;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  $$phase: any;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig {\n  strictDi?: boolean;\n}\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean | {[key: string]: string};\n  link?: IDirectiveLinkFn | IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean | {[key: string]: string};\n  template?: string | Function;\n  templateUrl?: string | Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: DirectiveTranscludeProperty;\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport type DirectiveTranscludeProperty = boolean | 'element' | {[key: string]: string};\nexport interface IDirectiveCompileFn {\n  (\n    templateElement: IAugmentedJQuery,\n    templateAttributes: IAttributes,\n    transclude: ITranscludeFunction,\n  ): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (\n    scope: IScope,\n    instanceElement: IAugmentedJQuery,\n    instanceAttributes: IAttributes,\n    controller: any,\n    transclude: ITranscludeFunction,\n  ): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string | IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string | Function;\n  templateUrl?: string | Function;\n  transclude?: DirectiveTranscludeProperty;\n}\nexport interface IAttributes {\n  $observe(attr: string, fn: (v: string) => void): void;\n  [key: string]: any;\n}\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction {\n  (clonedElement: IAugmentedJQuery, scope: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  on?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  children?: () => IAugmentedJQuery;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n  triggerHandler?: (eventTypeOrObject: string | Event, extraParameters?: any[]) => IAugmentedJQuery;\n  remove?: () => void;\n  removeData?: () => void;\n};\nexport interface IProvider {\n  $get: IInjectable;\n}\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService {\n  (expression: string): ICompiledExpression;\n}\nexport interface ICompiledExpression {\n  (context: any, locals: any): any;\n  assign?: (context: any, value: any) => any;\n}\nexport interface IHttpBackendService {\n  (\n    method: string,\n    url: string,\n    post?: any,\n    callback?: Function,\n    headers?: any,\n    timeout?: number,\n    withCredentials?: boolean,\n  ): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface IIntervalService {\n  (\n    func: Function,\n    delay: number,\n    count?: number,\n    invokeApply?: boolean,\n    ...args: any[]\n  ): Promise<any>;\n  cancel(promise: Promise<any>): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n\nfunction noNg(): never {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\nconst noNgElement: typeof angular.element = (() => noNg()) as any;\nnoNgElement.cleanData = noNg;\n\nlet angular: {\n  bootstrap: (\n    e: Element,\n    modules: (string | IInjectable)[],\n    config?: IAngularBootstrapConfig,\n  ) => IInjectorService;\n  module: (prefix: string, dependencies?: string[]) => IModule;\n  element: {\n    (e: string | Element | Document | IAugmentedJQuery): IAugmentedJQuery;\n    cleanData: (nodes: Node[] | NodeList) => void;\n  };\n  injector: (modules: Array<string | IInjectable>, strictDi?: boolean) => IInjectorService;\n  version: {major: number};\n  resumeBootstrap: () => void;\n  getTestability: (e: Element) => ITestabilityService;\n} = {\n  bootstrap: noNg,\n  module: noNg,\n  element: noNgElement,\n  injector: noNg,\n  version: undefined as any,\n  resumeBootstrap: noNg,\n  getTestability: noNg,\n};\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = (<any>window).angular;\n  }\n} catch {\n  // ignore in CJS mode.\n}\n\n/**\n * @deprecated Use `setAngularJSGlobal` instead.\n *\n * @publicApi\n */\nexport function setAngularLib(ng: any): void {\n  setAngularJSGlobal(ng);\n}\n\n/**\n * @deprecated Use `getAngularJSGlobal` instead.\n *\n * @publicApi\n */\nexport function getAngularLib(): any {\n  return getAngularJSGlobal();\n}\n\n/**\n * Resets the AngularJS global.\n *\n * Used when AngularJS is loaded lazily, and not available on `window`.\n *\n * @publicApi\n */\nexport function setAngularJSGlobal(ng: any): void {\n  angular = ng;\n}\n\n/**\n * Returns the current AngularJS global.\n *\n * @publicApi\n */\nexport function getAngularJSGlobal(): any {\n  return angular;\n}\n\nexport const bootstrap: typeof angular.bootstrap = (e, modules, config?) =>\n  angular.bootstrap(e, modules, config);\n\n// Do not declare as `module` to avoid webpack bug\n// (see https://github.com/angular/angular/issues/30050).\nexport const module_: typeof angular.module = (prefix, dependencies?) =>\n  angular.module(prefix, dependencies);\n\nexport const element: typeof angular.element = ((e) =>\n  angular.element(e)) as typeof angular.element;\nelement.cleanData = (nodes) => angular.element.cleanData(nodes);\n\nexport const injector: typeof angular.injector = (\n  modules: Array<string | IInjectable>,\n  strictDi?: boolean,\n) => angular.injector(modules, strictDi);\n\nexport const resumeBootstrap: typeof angular.resumeBootstrap = () => angular.resumeBootstrap();\n\nexport const getTestability: typeof angular.getTestability = (e) => angular.getTestability(e);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nexport const $COMPILE = '$compile';\nexport const $CONTROLLER = '$controller';\nexport const $DELEGATE = '$delegate';\nexport const $EXCEPTION_HANDLER = '$exceptionHandler';\nexport const $HTTP_BACKEND = '$httpBackend';\nexport const $INJECTOR = '$injector';\nexport const $INTERVAL = '$interval';\nexport const $PARSE = '$parse';\nexport const $PROVIDE = '$provide';\nexport const $ROOT_ELEMENT = '$rootElement';\nexport const $ROOT_SCOPE = '$rootScope';\nexport const $SCOPE = '$scope';\nexport const $TEMPLATE_CACHE = '$templateCache';\nexport const $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const $$TESTABILITY = '$$testability';\n\nexport const COMPILER_KEY = '$$angularCompiler';\nexport const DOWNGRADED_MODULE_COUNT_KEY = '$$angularDowngradedModuleCount';\nexport const GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const INJECTOR_KEY = '$$angularInjector';\nexport const LAZY_MODULE_REF = '$$angularLazyModuleRef';\nexport const NG_ZONE_KEY = '$$angularNgZone';\nexport const UPGRADE_APP_TYPE_KEY = '$$angularUpgradeAppType';\n\nexport const REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const REQUIRE_NG_MODEL = '?ngModel';\n\nexport const UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n\n  constructor(\n    public prop: string,\n    public attr: string,\n  ) {\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.slice(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Injector, Type, ɵNG_MOD_DEF} from '@angular/core';\n\nimport {\n  element as angularElement,\n  IAugmentedJQuery,\n  IInjectorService,\n  INgModelController,\n  IRootScopeService,\n} from './angular1';\nimport {\n  $ROOT_ELEMENT,\n  $ROOT_SCOPE,\n  DOWNGRADED_MODULE_COUNT_KEY,\n  UPGRADE_APP_TYPE_KEY,\n} from './constants';\n\nconst DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nconst DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  console.error(e, e.stack);\n  throw e;\n}\n\n/**\n * Clean the jqLite/jQuery data on the element and all its descendants.\n * Equivalent to how jqLite/jQuery invoke `cleanData()` on an Element when removed:\n *   https://github.com/angular/angular.js/blob/2e72ea13fa98bebf6ed4b5e3c45eaf5f990ed16f/src/jqLite.js#L349-L355\n *   https://github.com/jquery/jquery/blob/6984d1747623dbc5e87fd6c261a5b6b1628c107c/src/manipulation.js#L182\n *\n * NOTE:\n * `cleanData()` will also invoke the AngularJS `$destroy` DOM event on the element:\n *   https://github.com/angular/angular.js/blob/2e72ea13fa98bebf6ed4b5e3c45eaf5f990ed16f/src/Angular.js#L1932-L1945\n *\n * @param node The DOM node whose data needs to be cleaned.\n */\nexport function cleanData(node: Node): void {\n  angularElement.cleanData([node]);\n  if (isParentNode(node)) {\n    angularElement.cleanData(node.querySelectorAll('*'));\n  }\n}\n\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n\n/**\n * Destroy an AngularJS app given the app `$injector`.\n *\n * NOTE: Destroying an app is not officially supported by AngularJS, but try to do our best by\n *       destroying `$rootScope` and clean the jqLite/jQuery data on `$rootElement` and all\n *       descendants.\n *\n * @param $injector The `$injector` of the AngularJS app to destroy.\n */\nexport function destroyApp($injector: IInjectorService): void {\n  const $rootElement: IAugmentedJQuery = $injector.get($ROOT_ELEMENT);\n  const $rootScope: IRootScopeService = $injector.get($ROOT_SCOPE);\n\n  $rootScope.$destroy();\n  cleanData($rootElement[0]);\n}\n\nexport function directiveNormalize(name: string): string {\n  return name\n    .replace(DIRECTIVE_PREFIX_REGEXP, '')\n    .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, (_, letter) => letter.toUpperCase());\n}\n\nexport function getTypeName(type: Type<any>): string {\n  // Return the name of the type or the first line of its stringified version.\n  return (type as any).overriddenName || type.name || type.toString().split('\\n')[0];\n}\n\nexport function getDowngradedModuleCount($injector: IInjectorService): number {\n  return $injector.has(DOWNGRADED_MODULE_COUNT_KEY)\n    ? $injector.get(DOWNGRADED_MODULE_COUNT_KEY)\n    : 0;\n}\n\nexport function getUpgradeAppType($injector: IInjectorService): UpgradeAppType {\n  return $injector.has(UPGRADE_APP_TYPE_KEY)\n    ? $injector.get(UPGRADE_APP_TYPE_KEY)\n    : UpgradeAppType.None;\n}\n\nexport function isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\nexport function isNgModuleType(value: any): value is Type<unknown> {\n  // NgModule class should have the `ɵmod` static property attached by AOT or JIT compiler.\n  return isFunction(value) && !!value[ɵNG_MOD_DEF];\n}\n\nfunction isParentNode(node: Node | ParentNode): node is ParentNode {\n  return isFunction((node as unknown as ParentNode).querySelectorAll);\n}\n\nexport function validateInjectionKey(\n  $injector: IInjectorService,\n  downgradedModule: string,\n  injectionKey: string,\n  attemptedAction: string,\n): void {\n  const upgradeAppType = getUpgradeAppType($injector);\n  const downgradedModuleCount = getDowngradedModuleCount($injector);\n\n  // Check for common errors.\n  switch (upgradeAppType) {\n    case UpgradeAppType.Dynamic:\n    case UpgradeAppType.Static:\n      if (downgradedModule) {\n        throw new Error(\n          `Error while ${attemptedAction}: 'downgradedModule' unexpectedly specified.\\n` +\n            \"You should not specify a value for 'downgradedModule', unless you are downgrading \" +\n            \"more than one Angular module (via 'downgradeModule()').\",\n        );\n      }\n      break;\n    case UpgradeAppType.Lite:\n      if (!downgradedModule && downgradedModuleCount >= 2) {\n        throw new Error(\n          `Error while ${attemptedAction}: 'downgradedModule' not specified.\\n` +\n            'This application contains more than one downgraded Angular module, thus you need to ' +\n            \"always specify 'downgradedModule' when downgrading components and injectables.\",\n        );\n      }\n\n      if (!$injector.has(injectionKey)) {\n        throw new Error(\n          `Error while ${attemptedAction}: Unable to find the specified downgraded module.\\n` +\n            'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n            'application?',\n        );\n      }\n\n      break;\n    default:\n      throw new Error(\n        `Error while ${attemptedAction}: Not a valid '@angular/upgrade' application.\\n` +\n          'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n          'application?',\n      );\n  }\n}\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve!: (value: R | PromiseLike<R>) => void;\n  reject!: (error?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nexport interface LazyModuleRef {\n  injector?: Injector;\n  promise?: Promise<Injector>;\n}\n\nexport const enum UpgradeAppType {\n  // App NOT using `@angular/upgrade`. (This should never happen in an `ngUpgrade` app.)\n  None,\n\n  // App using the deprecated `@angular/upgrade` APIs (a.k.a. dynamic `ngUpgrade`).\n  Dynamic,\n\n  // App using `@angular/upgrade/static` with `UpgradeModule`.\n  Static,\n\n  // App using @angular/upgrade/static` with `downgradeModule()` (a.k.a `ngUpgrade`-lite ).\n  Lite,\n}\n\n/**\n * @return Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return (\n    typeof component.writeValue === 'function' && typeof component.registerOnChange === 'function'\n  );\n}\n\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n */\nexport function hookupNgModel(ngModel: INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => {\n      component.writeValue(ngModel.$viewValue);\n    };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n    if (typeof component.registerOnTouched === 'function') {\n      component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n    }\n  }\n}\n\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nexport function strictEquals(val1: any, val2: any): boolean {\n  return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  ApplicationRef,\n  ChangeDetectorRef,\n  ComponentFactory,\n  ComponentRef,\n  EventEmitter,\n  Injector,\n  OnChanges,\n  SimpleChange,\n  SimpleChanges,\n  StaticProvider,\n  Testability,\n  TestabilityRegistry,\n  type ɵInputSignalNode as InputSignalNode,\n  ɵSIGNAL as SIGNAL,\n} from '@angular/core';\n\nimport {\n  IAttributes,\n  IAugmentedJQuery,\n  ICompileService,\n  INgModelController,\n  IParseService,\n  IScope,\n} from './angular1';\nimport {PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {cleanData, getTypeName, hookupNgModel, strictEquals} from './util';\n\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true,\n};\n\nexport class DowngradeComponentAdapter {\n  private implementsOnChanges = false;\n  private inputChangeCount: number = 0;\n  private inputChanges: SimpleChanges = {};\n  private componentScope: IScope;\n\n  constructor(\n    private element: IAugmentedJQuery,\n    private attrs: IAttributes,\n    private scope: IScope,\n    private ngModel: INgModelController,\n    private parentInjector: Injector,\n    private $compile: ICompileService,\n    private $parse: IParseService,\n    private componentFactory: ComponentFactory<any>,\n    private wrapCallback: <T>(cb: () => T) => () => T,\n    private readonly unsafelyOverwriteSignalInputs: boolean,\n  ) {\n    this.componentScope = scope.$new();\n  }\n\n  compileContents(): Node[][] {\n    const compiledProjectableNodes: Node[][] = [];\n    const projectableNodes: Node[][] = this.groupProjectableNodes();\n    const linkFns = projectableNodes.map((nodes) => this.$compile(nodes));\n\n    this.element.empty!();\n\n    linkFns.forEach((linkFn) => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append!(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n\n  createComponentAndSetup(\n    projectableNodes: Node[][],\n    manuallyAttachView = false,\n    propagateDigest = true,\n  ): ComponentRef<any> {\n    const component = this.createComponent(projectableNodes);\n    this.setupInputs(manuallyAttachView, propagateDigest, component);\n    this.setupOutputs(component.componentRef);\n    this.registerCleanup(component.componentRef);\n\n    return component.componentRef;\n  }\n\n  private createComponent(projectableNodes: Node[][]): ComponentInfo {\n    const providers: StaticProvider[] = [{provide: $SCOPE, useValue: this.componentScope}];\n    const childInjector = Injector.create({\n      providers: providers,\n      parent: this.parentInjector,\n      name: 'DowngradeComponentAdapter',\n    });\n\n    const componentRef = this.componentFactory.create(\n      childInjector,\n      projectableNodes,\n      this.element[0],\n    );\n    const viewChangeDetector = componentRef.injector.get(ChangeDetectorRef);\n    const changeDetector = componentRef.changeDetectorRef;\n\n    // testability hook is commonly added during component bootstrap in\n    // packages/core/src/application_ref.bootstrap()\n    // in downgraded application, component creation will take place here as well as adding the\n    // testability hook.\n    const testability = componentRef.injector.get(Testability, null);\n    if (testability) {\n      componentRef.injector\n        .get(TestabilityRegistry)\n        .registerApplication(componentRef.location.nativeElement, testability);\n    }\n\n    hookupNgModel(this.ngModel, componentRef.instance);\n\n    return {viewChangeDetector, componentRef, changeDetector};\n  }\n\n  private setupInputs(\n    manuallyAttachView: boolean,\n    propagateDigest = true,\n    {componentRef, changeDetector, viewChangeDetector}: ComponentInfo,\n  ): void {\n    const attrs = this.attrs;\n    const inputs = this.componentFactory.inputs || [];\n    for (const input of inputs) {\n      const inputBinding = new PropertyBinding(input.propName, input.templateName);\n      let expr: string | null = null;\n\n      if (attrs.hasOwnProperty(inputBinding.attr)) {\n        const observeFn = ((prop, isSignal) => {\n          let prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            // Initially, both `$observe()` and `$watch()` will call this function.\n            if (!strictEquals(prevValue, currValue)) {\n              if (prevValue === INITIAL_VALUE) {\n                prevValue = currValue;\n              }\n\n              this.updateInput(componentRef, prop, prevValue, currValue, isSignal);\n              prevValue = currValue;\n            }\n          };\n        })(inputBinding.prop, input.isSignal);\n        attrs.$observe(inputBinding.attr, observeFn);\n\n        // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n        // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n        // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n        let unwatch: Function | null = this.componentScope.$watch(() => {\n          unwatch!();\n          unwatch = null;\n          observeFn(attrs[inputBinding.attr]);\n        });\n      } else if (attrs.hasOwnProperty(inputBinding.bindAttr)) {\n        expr = attrs[inputBinding.bindAttr];\n      } else if (attrs.hasOwnProperty(inputBinding.bracketAttr)) {\n        expr = attrs[inputBinding.bracketAttr];\n      } else if (attrs.hasOwnProperty(inputBinding.bindonAttr)) {\n        expr = attrs[inputBinding.bindonAttr];\n      } else if (attrs.hasOwnProperty(inputBinding.bracketParenAttr)) {\n        expr = attrs[inputBinding.bracketParenAttr];\n      }\n      if (expr != null) {\n        const watchFn = (\n          (prop, isSignal) => (currValue: unknown, prevValue: unknown) =>\n            this.updateInput(componentRef, prop, prevValue, currValue, isSignal)\n        )(inputBinding.prop, input.isSignal);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    // Invoke `ngOnChanges()` and Change Detection (when necessary)\n    const detectChanges = () => changeDetector.detectChanges();\n    const prototype = this.componentFactory.componentType.prototype;\n    this.implementsOnChanges = !!(prototype && (<OnChanges>prototype).ngOnChanges);\n\n    this.componentScope.$watch(\n      () => this.inputChangeCount,\n      this.wrapCallback(() => {\n        // Invoke `ngOnChanges()`\n        if (this.implementsOnChanges) {\n          const inputChanges = this.inputChanges;\n          this.inputChanges = {};\n          (<OnChanges>componentRef.instance).ngOnChanges(inputChanges);\n        }\n\n        viewChangeDetector.markForCheck();\n\n        // If opted out of propagating digests, invoke change detection when inputs change.\n        if (!propagateDigest) {\n          detectChanges();\n        }\n      }),\n    );\n\n    // If not opted out of propagating digests, invoke change detection on every digest\n    if (propagateDigest) {\n      this.componentScope.$watch(this.wrapCallback(detectChanges));\n    }\n\n    // If necessary, attach the view so that it will be dirty-checked.\n    // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n    if (manuallyAttachView || !propagateDigest) {\n      let unwatch: Function | null = this.componentScope.$watch(() => {\n        unwatch!();\n        unwatch = null;\n\n        const appRef = this.parentInjector.get<ApplicationRef>(ApplicationRef);\n        appRef.attachView(componentRef.hostView);\n      });\n    }\n  }\n\n  private setupOutputs(componentRef: ComponentRef<any>) {\n    const attrs = this.attrs;\n    const outputs = this.componentFactory.outputs || [];\n    for (const output of outputs) {\n      const outputBindings = new PropertyBinding(output.propName, output.templateName);\n      const bindonAttr = outputBindings.bindonAttr.substring(\n        0,\n        outputBindings.bindonAttr.length - 6,\n      );\n      const bracketParenAttr = `[(${outputBindings.bracketParenAttr.substring(\n        2,\n        outputBindings.bracketParenAttr.length - 8,\n      )})]`;\n      // order below is important - first update bindings then evaluate expressions\n      if (attrs.hasOwnProperty(bindonAttr)) {\n        this.subscribeToOutput(componentRef, outputBindings, attrs[bindonAttr], true);\n      }\n      if (attrs.hasOwnProperty(bracketParenAttr)) {\n        this.subscribeToOutput(componentRef, outputBindings, attrs[bracketParenAttr], true);\n      }\n      if (attrs.hasOwnProperty(outputBindings.onAttr)) {\n        this.subscribeToOutput(componentRef, outputBindings, attrs[outputBindings.onAttr]);\n      }\n      if (attrs.hasOwnProperty(outputBindings.parenAttr)) {\n        this.subscribeToOutput(componentRef, outputBindings, attrs[outputBindings.parenAttr]);\n      }\n    }\n  }\n\n  private subscribeToOutput(\n    componentRef: ComponentRef<any>,\n    output: PropertyBinding,\n    expr: string,\n    isAssignment: boolean = false,\n  ) {\n    const getter = this.$parse(expr);\n    const setter = getter.assign;\n    if (isAssignment && !setter) {\n      throw new Error(`Expression '${expr}' is not assignable!`);\n    }\n    const emitter = componentRef.instance[output.prop] as EventEmitter<any>;\n    if (emitter) {\n      const subscription = emitter.subscribe({\n        next: isAssignment\n          ? (v: any) => setter!(this.scope, v)\n          : (v: any) => getter(this.scope, {'$event': v}),\n      });\n      componentRef.onDestroy(() => subscription.unsubscribe());\n    } else {\n      throw new Error(\n        `Missing emitter '${output.prop}' on component '${getTypeName(\n          this.componentFactory.componentType,\n        )}'!`,\n      );\n    }\n  }\n\n  private registerCleanup(componentRef: ComponentRef<any>) {\n    const testabilityRegistry = componentRef.injector.get(TestabilityRegistry);\n    const destroyComponentRef = this.wrapCallback(() => componentRef.destroy());\n    let destroyed = false;\n\n    this.element.on!('$destroy', () => {\n      // The `$destroy` event may have been triggered by the `cleanData()` call in the\n      // `componentScope` `$destroy` handler below. In that case, we don't want to call\n      // `componentScope.$destroy()` again.\n      if (!destroyed) this.componentScope.$destroy();\n    });\n    this.componentScope.$on('$destroy', () => {\n      if (!destroyed) {\n        destroyed = true;\n        testabilityRegistry.unregisterApplication(componentRef.location.nativeElement);\n\n        // The `componentScope` might be getting destroyed, because an ancestor element is being\n        // removed/destroyed. If that is the case, jqLite/jQuery would normally invoke `cleanData()`\n        // on the removed element and all descendants.\n        //   https://github.com/angular/angular.js/blob/2e72ea13fa98bebf6ed4b5e3c45eaf5f990ed16f/src/jqLite.js#L349-L355\n        //   https://github.com/jquery/jquery/blob/6984d1747623dbc5e87fd6c261a5b6b1628c107c/src/manipulation.js#L182\n        //\n        // Here, however, `destroyComponentRef()` may under some circumstances remove the element\n        // from the DOM and therefore it will no longer be a descendant of the removed element when\n        // `cleanData()` is called. This would result in a memory leak, because the element's data\n        // and event handlers (and all objects directly or indirectly referenced by them) would be\n        // retained.\n        //\n        // To ensure the element is always properly cleaned up, we manually call `cleanData()` on\n        // this element and its descendants before destroying the `ComponentRef`.\n        cleanData(this.element[0]);\n\n        destroyComponentRef();\n      }\n    });\n  }\n\n  private updateInput(\n    componentRef: ComponentRef<any>,\n    prop: string,\n    prevValue: any,\n    currValue: any,\n    isSignal: boolean,\n  ) {\n    if (this.implementsOnChanges) {\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.inputChangeCount++;\n    if (isSignal && !this.unsafelyOverwriteSignalInputs) {\n      const node = componentRef.instance[prop][SIGNAL] as InputSignalNode<unknown, unknown>;\n      node.applyValueToInputSignal(node, currValue);\n    } else {\n      componentRef.instance[prop] = currValue;\n    }\n  }\n\n  private groupProjectableNodes() {\n    let ngContentSelectors = this.componentFactory.ngContentSelectors;\n    return groupNodesBySelector(ngContentSelectors, this.element.contents!());\n  }\n}\n\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n */\nexport function groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n  const projectableNodes: Node[][] = [];\n\n  for (let i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n    projectableNodes[i] = [];\n  }\n\n  for (let j = 0, jj = nodes.length; j < jj; ++j) {\n    const node = nodes[j];\n    const ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n    if (ngContentIndex != null) {\n      projectableNodes[ngContentIndex].push(node);\n    }\n  }\n\n  return projectableNodes;\n}\n\nfunction findMatchingNgContentIndex(element: any, ngContentSelectors: string[]): number | null {\n  const ngContentIndices: number[] = [];\n  let wildcardNgContentIndex: number = -1;\n  for (let i = 0; i < ngContentSelectors.length; i++) {\n    const selector = ngContentSelectors[i];\n    if (selector === '*') {\n      wildcardNgContentIndex = i;\n    } else {\n      if (matchesSelector(element, selector)) {\n        ngContentIndices.push(i);\n      }\n    }\n  }\n  ngContentIndices.sort();\n\n  if (wildcardNgContentIndex !== -1) {\n    ngContentIndices.push(wildcardNgContentIndex);\n  }\n  return ngContentIndices.length ? ngContentIndices[0] : null;\n}\n\nfunction matchesSelector(el: any, selector: string): boolean {\n  const elProto = <any>Element.prototype;\n\n  return el.nodeType === Node.ELEMENT_NODE\n    ? // matches is supported by all browsers from 2014 onwards except non-chromium edge\n      (elProto.matches ?? elProto.msMatchesSelector).call(el, selector)\n    : false;\n}\n\ninterface ComponentInfo {\n  componentRef: ComponentRef<any>;\n  changeDetector: ChangeDetectorRef;\n  viewChangeDetector: ChangeDetectorRef;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {isFunction} from './util';\n\nexport interface Thenable<T> {\n  then(callback: (value: T) => any): any;\n}\n\nexport function isThenable<T>(obj: unknown): obj is Thenable<T> {\n  return !!obj && isFunction((obj as any).then);\n}\n\n/**\n * Synchronous, promise-like object.\n */\nexport class SyncPromise<T> {\n  protected value: T | undefined;\n  private resolved = false;\n  private callbacks: ((value: T) => unknown)[] = [];\n\n  static all<T>(valuesOrPromises: (T | Thenable<T>)[]): SyncPromise<T[]> {\n    const aggrPromise = new SyncPromise<T[]>();\n\n    let resolvedCount = 0;\n    const results: T[] = [];\n    const resolve = (idx: number, value: T) => {\n      results[idx] = value;\n      if (++resolvedCount === valuesOrPromises.length) aggrPromise.resolve(results);\n    };\n\n    valuesOrPromises.forEach((p, idx) => {\n      if (isThenable(p)) {\n        p.then((v) => resolve(idx, v));\n      } else {\n        resolve(idx, p);\n      }\n    });\n\n    return aggrPromise;\n  }\n\n  resolve(value: T): void {\n    // Do nothing, if already resolved.\n    if (this.resolved) return;\n\n    this.value = value;\n    this.resolved = true;\n\n    // Run the queued callbacks.\n    this.callbacks.forEach((callback) => callback(value));\n    this.callbacks.length = 0;\n  }\n\n  then(callback: (value: T) => unknown): void {\n    if (this.resolved) {\n      callback(this.value!);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, NgZone, Type} from '@angular/core';\n\nimport {\n  IAnnotatedFunction,\n  IAttributes,\n  IAugmentedJQuery,\n  ICompileService,\n  IDirective,\n  IInjectorService,\n  INgModelController,\n  IParseService,\n  IScope,\n} from './angular1';\nimport {\n  $COMPILE,\n  $INJECTOR,\n  $PARSE,\n  INJECTOR_KEY,\n  LAZY_MODULE_REF,\n  REQUIRE_INJECTOR,\n  REQUIRE_NG_MODEL,\n} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {SyncPromise, Thenable} from './promise_util';\nimport {\n  controllerKey,\n  getDowngradedModuleCount,\n  getTypeName,\n  getUpgradeAppType,\n  LazyModuleRef,\n  UpgradeAppType,\n  validateInjectionKey,\n} from './util';\n\n/**\n * @description\n *\n * A helper function that allows an Angular component to be used from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AOT compilation*\n *\n * This helper function returns a factory function to be used for registering\n * an AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * @usageNotes\n * ### Examples\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * For more details and examples on downgrading Angular components to AngularJS components please\n * visit the [Upgrade guide](https://angular.io/guide/upgrade#using-angular-components-from-angularjs-code).\n *\n * @param info contains information about the Component that is being downgraded:\n *\n * - `component: Type<any>`: The type of the Component that will be downgraded\n * - `downgradedModule?: string`: The name of the downgraded module (if any) that the component\n *   \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose\n *   corresponding Angular module will be bootstrapped, when the component needs to be instantiated.\n *   <br />\n *   (This option is only necessary when using `downgradeModule()` to downgrade more than one\n *   Angular module.)\n * - `propagateDigest?: boolean`: Whether to perform {@link ChangeDetectorRef#detectChanges} on the\n * component on every\n *   [$digest](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest). If set to `false`,\n *   change detection will still be performed when any of the component's inputs changes.\n *   (Default: true)\n *\n * @returns a factory function that can be used to register the component in an\n * AngularJS module.\n *\n * @publicApi\n */\nexport function downgradeComponent(info: {\n  component: Type<any>;\n  downgradedModule?: string;\n  propagateDigest?: boolean;\n  /** @deprecated since v4. This parameter is no longer used */\n  inputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  outputs?: string[];\n  /** @deprecated since v4. This parameter is no longer used */\n  selectors?: string[];\n}): any /* angular.IInjectable */ {\n  const directiveFactory: IAnnotatedFunction = function (\n    $compile: ICompileService,\n    $injector: IInjectorService,\n    $parse: IParseService,\n  ): IDirective {\n    const unsafelyOverwriteSignalInputs =\n      (info as {unsafelyOverwriteSignalInputs?: boolean}).unsafelyOverwriteSignalInputs ?? false;\n    // When using `downgradeModule()`, we need to handle certain things specially. For example:\n    // - We always need to attach the component view to the `ApplicationRef` for it to be\n    //   dirty-checked.\n    // - We need to ensure callbacks to Angular APIs (e.g. change detection) are run inside the\n    //   Angular zone.\n    //   NOTE: This is not needed, when using `UpgradeModule`, because `$digest()` will be run\n    //         inside the Angular zone (except if explicitly escaped, in which case we shouldn't\n    //         force it back in).\n    const isNgUpgradeLite = getUpgradeAppType($injector) === UpgradeAppType.Lite;\n    const wrapCallback: <T>(cb: () => T) => typeof cb = !isNgUpgradeLite\n      ? (cb) => cb\n      : (cb) => () => (NgZone.isInAngularZone() ? cb() : ngZone.run(cb));\n    let ngZone: NgZone;\n\n    // When downgrading multiple modules, special handling is needed wrt injectors.\n    const hasMultipleDowngradedModules = isNgUpgradeLite && getDowngradedModuleCount($injector) > 1;\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      // Controller needs to be set so that `angular-component-router.js` (from beta Angular 2)\n      // configuration properties can be made available. See:\n      // See G3: javascript/angular2/angular1_router_lib.js\n      // https://github.com/angular/angular.js/blob/47bf11ee94664367a26ed8c91b9b586d3dd420f5/src/ng/compile.js#L1670-L1691.\n      controller: function () {},\n      link: (scope: IScope, element: IAugmentedJQuery, attrs: IAttributes, required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const ngModel: INgModelController = required[1];\n        const parentInjector: Injector | Thenable<Injector> | undefined = required[0];\n        let moduleInjector: Injector | Thenable<Injector> | undefined = undefined;\n        let ranAsync = false;\n\n        if (!parentInjector || hasMultipleDowngradedModules) {\n          const downgradedModule = info.downgradedModule || '';\n          const lazyModuleRefKey = `${LAZY_MODULE_REF}${downgradedModule}`;\n          const attemptedAction = `instantiating component '${getTypeName(info.component)}'`;\n\n          validateInjectionKey($injector, downgradedModule, lazyModuleRefKey, attemptedAction);\n\n          const lazyModuleRef = $injector.get(lazyModuleRefKey) as LazyModuleRef;\n          moduleInjector = lazyModuleRef.injector ?? lazyModuleRef.promise;\n        }\n\n        // Notes:\n        //\n        // There are two injectors: `finalModuleInjector` and `finalParentInjector` (they might be\n        // the same instance, but that is irrelevant):\n        // - `finalModuleInjector` is used to retrieve `ComponentFactoryResolver`, thus it must be\n        //   on the same tree as the `NgModule` that declares this downgraded component.\n        // - `finalParentInjector` is used for all other injection purposes.\n        //   (Note that Angular knows to only traverse the component-tree part of that injector,\n        //   when looking for an injectable and then switch to the module injector.)\n        //\n        // There are basically three cases:\n        // - If there is no parent component (thus no `parentInjector`), we bootstrap the downgraded\n        //   `NgModule` and use its injector as both `finalModuleInjector` and\n        //   `finalParentInjector`.\n        // - If there is a parent component (and thus a `parentInjector`) and we are sure that it\n        //   belongs to the same `NgModule` as this downgraded component (e.g. because there is only\n        //   one downgraded module, we use that `parentInjector` as both `finalModuleInjector` and\n        //   `finalParentInjector`.\n        // - If there is a parent component, but it may belong to a different `NgModule`, then we\n        //   use the `parentInjector` as `finalParentInjector` and this downgraded component's\n        //   declaring `NgModule`'s injector as `finalModuleInjector`.\n        //   Note 1: If the `NgModule` is already bootstrapped, we just get its injector (we don't\n        //           bootstrap again).\n        //   Note 2: It is possible that (while there are multiple downgraded modules) this\n        //           downgraded component and its parent component both belong to the same NgModule.\n        //           In that case, we could have used the `parentInjector` as both\n        //           `finalModuleInjector` and `finalParentInjector`, but (for simplicity) we are\n        //           treating this case as if they belong to different `NgModule`s. That doesn't\n        //           really affect anything, since `parentInjector` has `moduleInjector` as ancestor\n        //           and trying to resolve `ComponentFactoryResolver` from either one will return\n        //           the same instance.\n\n        // If there is a parent component, use its injector as parent injector.\n        // If this is a \"top-level\" Angular component, use the module injector.\n        const finalParentInjector = parentInjector || moduleInjector!;\n\n        // If this is a \"top-level\" Angular component or the parent component may belong to a\n        // different `NgModule`, use the module injector for module-specific dependencies.\n        // If there is a parent component that belongs to the same `NgModule`, use its injector.\n        const finalModuleInjector = moduleInjector || parentInjector!;\n\n        const doDowngrade = (injector: Injector, moduleInjector: Injector) => {\n          // Retrieve `ComponentFactoryResolver` from the injector tied to the `NgModule` this\n          // component belongs to.\n          const componentFactoryResolver: ComponentFactoryResolver =\n            moduleInjector.get(ComponentFactoryResolver);\n          const componentFactory: ComponentFactory<any> =\n            componentFactoryResolver.resolveComponentFactory(info.component)!;\n\n          if (!componentFactory) {\n            throw new Error(`Expecting ComponentFactory for: ${getTypeName(info.component)}`);\n          }\n\n          const injectorPromise = new ParentInjectorPromise(element);\n          const facade = new DowngradeComponentAdapter(\n            element,\n            attrs,\n            scope,\n            ngModel,\n            injector,\n            $compile,\n            $parse,\n            componentFactory,\n            wrapCallback,\n            unsafelyOverwriteSignalInputs,\n          );\n\n          const projectableNodes = facade.compileContents();\n          const componentRef = facade.createComponentAndSetup(\n            projectableNodes,\n            isNgUpgradeLite,\n            info.propagateDigest,\n          );\n\n          injectorPromise.resolve(componentRef.injector);\n\n          if (ranAsync) {\n            // If this is run async, it is possible that it is not run inside a\n            // digest and initial input values will not be detected.\n            scope.$evalAsync(() => {});\n          }\n        };\n\n        const downgradeFn = !isNgUpgradeLite\n          ? doDowngrade\n          : (pInjector: Injector, mInjector: Injector) => {\n              if (!ngZone) {\n                ngZone = pInjector.get(NgZone);\n              }\n\n              wrapCallback(() => doDowngrade(pInjector, mInjector))();\n            };\n\n        // NOTE:\n        // Not using `ParentInjectorPromise.all()` (which is inherited from `SyncPromise`), because\n        // Closure Compiler (or some related tool) complains:\n        // `TypeError: ...$src$downgrade_component_ParentInjectorPromise.all is not a function`\n        SyncPromise.all([finalParentInjector, finalModuleInjector]).then(([pInjector, mInjector]) =>\n          downgradeFn(pInjector, mInjector),\n        );\n\n        ranAsync = true;\n      },\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's `$compile`.\n */\nclass ParentInjectorPromise extends SyncPromise<Injector> {\n  private injectorKey: string = controllerKey(INJECTOR_KEY);\n\n  constructor(private element: IAugmentedJQuery) {\n    super();\n\n    // Store the promise on the element.\n    element.data!(this.injectorKey, this);\n  }\n\n  override resolve(injector: Injector): void {\n    // Store the real injector on the element.\n    this.element.data!(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = null!;\n\n    // Resolve the promise.\n    super.resolve(injector);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Injector} from '@angular/core';\n\nimport {IInjectorService} from './angular1';\nimport {$INJECTOR, INJECTOR_KEY} from './constants';\nimport {getTypeName, isFunction, validateInjectionKey} from './util';\n\n/**\n * @description\n *\n * A helper function to allow an Angular service to be accessible from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AOT compilation*\n *\n * This helper function returns a factory function that provides access to the Angular\n * service identified by the `token` parameter.\n *\n * @usageNotes\n * ### Examples\n *\n * First ensure that the service to be downgraded is provided in an `NgModule`\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app `NgModule`\n *\n * {@example upgrade/static/ts/full/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {@example upgrade/static/ts/full/module.ts region=\"example-app\"}\n *\n * <div class=\"docs-alert docs-alert-important\">\n *\n *   When using `downgradeModule()`, downgraded injectables will not be available until the Angular\n *   module that provides them is instantiated. In order to be safe, you need to ensure that the\n *   downgraded injectables are not used anywhere _outside_ the part of the app where it is\n *   guaranteed that their module has been instantiated.\n *\n *   For example, it is _OK_ to use a downgraded service in an upgraded component that is only used\n *   from a downgraded Angular component provided by the same Angular module as the injectable, but\n *   it is _not OK_ to use it in an AngularJS component that may be used independently of Angular or\n *   use it in a downgraded Angular component from a different module.\n *\n * </div>\n *\n * @param token an `InjectionToken` that identifies a service provided from Angular.\n * @param downgradedModule the name of the downgraded module (if any) that the injectable\n * \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose injector will\n * be used for instantiating the injectable.<br />\n * (This option is only necessary when using `downgradeModule()` to downgrade more than one Angular\n * module.)\n *\n * @returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * @publicApi\n */\nexport function downgradeInjectable(token: any, downgradedModule: string = ''): Function {\n  const factory = function ($injector: IInjectorService) {\n    const injectorKey = `${INJECTOR_KEY}${downgradedModule}`;\n    const injectableName = isFunction(token) ? getTypeName(token) : String(token);\n    const attemptedAction = `instantiating injectable '${injectableName}'`;\n\n    validateInjectionKey($injector, downgradedModule, injectorKey, attemptedAction);\n\n    try {\n      const injector: Injector = $injector.get(injectorKey);\n      return injector.get(token);\n    } catch (err) {\n      throw new Error(`Error while ${attemptedAction}: ${(err as Error).message || err}`);\n    }\n  };\n  (factory as any)['$inject'] = [$INJECTOR];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * @fileoverview\n * A module to facilitate use of a Trusted Types policy internally within\n * the upgrade package. It lazily constructs the Trusted Types policy, providing\n * helper utilities for promoting strings to Trusted Types. When Trusted Types\n * are not available, strings are used as a fallback.\n * @security All use of this module is security-sensitive and should go through\n * security review.\n */\n\nimport {TrustedHTML, TrustedTypePolicy, TrustedTypePolicyFactory} from './trusted_types_defs';\n\n/**\n * The Trusted Types policy, or null if Trusted Types are not\n * enabled/supported, or undefined if the policy has not been created yet.\n */\nlet policy: TrustedTypePolicy | null | undefined;\n\n/**\n * Returns the Trusted Types policy, or null if Trusted Types are not\n * enabled/supported. The first call to this function will create the policy.\n */\nfunction getPolicy(): TrustedTypePolicy | null {\n  if (policy === undefined) {\n    policy = null;\n    const windowWithTrustedTypes = window as unknown as {trustedTypes?: TrustedTypePolicyFactory};\n    if (windowWithTrustedTypes.trustedTypes) {\n      try {\n        policy = windowWithTrustedTypes.trustedTypes.createPolicy('angular#unsafe-upgrade', {\n          createHTML: (s: string) => s,\n        });\n      } catch {\n        // trustedTypes.createPolicy throws if called with a name that is\n        // already registered, even in report-only mode. Until the API changes,\n        // catch the error not to break the applications functionally. In such\n        // cases, the code will fall back to using strings.\n      }\n    }\n  }\n  return policy;\n}\n\n/**\n * Unsafely promote a legacy AngularJS template to a TrustedHTML, falling back\n * to strings when Trusted Types are not available.\n * @security This is a security-sensitive function; any use of this function\n * must go through security review. In particular, the template string should\n * always be under full control of the application author, as untrusted input\n * can cause an XSS vulnerability.\n */\nexport function trustedHTMLFromLegacyTemplate(html: string): TrustedHTML | string {\n  return getPolicy()?.createHTML(html) || html;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ElementRef, Injector, SimpleChanges} from '@angular/core';\n\nimport {\n  DirectiveRequireProperty,\n  element as angularElement,\n  IAugmentedJQuery,\n  ICloneAttachFunction,\n  ICompileService,\n  IController,\n  IControllerService,\n  IDirective,\n  IHttpBackendService,\n  IInjectorService,\n  ILinkFn,\n  IScope,\n  ITemplateCacheService,\n  SingleOrListOrMap,\n} from './angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE} from './constants';\nimport {cleanData, controllerKey, directiveNormalize, isFunction} from './util';\nimport {TrustedHTML} from './security/trusted_types_defs';\nimport {trustedHTMLFromLegacyTemplate} from './security/trusted_types';\n\n// Constants\nconst REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n\n// Interfaces\nexport interface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\nexport interface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\n// Classes\nexport class UpgradeHelper {\n  public readonly $injector: IInjectorService;\n  public readonly element: Element;\n  public readonly $element: IAugmentedJQuery;\n  public readonly directive: IDirective;\n\n  private readonly $compile: ICompileService;\n  private readonly $controller: IControllerService;\n\n  constructor(\n    injector: Injector,\n    private name: string,\n    elementRef: ElementRef,\n    directive?: IDirective,\n  ) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angularElement(this.element);\n\n    this.directive = directive ?? UpgradeHelper.getDirective(this.$injector, name);\n  }\n\n  static getDirective($injector: IInjectorService, name: string): IDirective {\n    const directives: IDirective[] = $injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error(`Only support single directive definition for: ${name}`);\n    }\n\n    const directive = directives[0];\n\n    // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n    // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n    if (directive.compile && !directive.link) notSupported(name, 'compile');\n    if (directive.replace) notSupported(name, 'replace');\n    if (directive.terminal) notSupported(name, 'terminal');\n\n    return directive;\n  }\n\n  static getTemplate(\n    $injector: IInjectorService,\n    directive: IDirective,\n    fetchRemoteTemplate = false,\n    $element?: IAugmentedJQuery,\n  ): string | TrustedHTML | Promise<string | TrustedHTML> {\n    if (directive.template !== undefined) {\n      return trustedHTMLFromLegacyTemplate(getOrCall<string>(directive.template, $element));\n    } else if (directive.templateUrl) {\n      const $templateCache = $injector.get($TEMPLATE_CACHE) as ITemplateCacheService;\n      const url = getOrCall<string>(directive.templateUrl, $element);\n      const template = $templateCache.get(url);\n\n      if (template !== undefined) {\n        return trustedHTMLFromLegacyTemplate(template);\n      } else if (!fetchRemoteTemplate) {\n        throw new Error('loading directive templates asynchronously is not supported');\n      }\n\n      return new Promise((resolve, reject) => {\n        const $httpBackend = $injector.get($HTTP_BACKEND) as IHttpBackendService;\n        $httpBackend('GET', url, null, (status: number, response: string) => {\n          if (status === 200) {\n            resolve(trustedHTMLFromLegacyTemplate($templateCache.put(url, response)));\n          } else {\n            reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n          }\n        });\n      });\n    } else {\n      throw new Error(`Directive '${directive.name}' is not a component, it is missing template.`);\n    }\n  }\n\n  buildController(controllerType: IController, $scope: IScope) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance.\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const locals = {'$scope': $scope, '$element': this.$element};\n    const controller = this.$controller(controllerType, locals, null, this.directive.controllerAs);\n\n    this.$element.data?.(controllerKey(this.directive.name!), controller);\n\n    return controller;\n  }\n\n  compileTemplate(template?: string | TrustedHTML): ILinkFn {\n    if (template === undefined) {\n      template = UpgradeHelper.getTemplate(this.$injector, this.directive, false, this.$element) as\n        | string\n        | TrustedHTML;\n    }\n\n    return this.compileHtml(template);\n  }\n\n  onDestroy($scope: IScope, controllerInstance?: any) {\n    if (controllerInstance && isFunction(controllerInstance.$onDestroy)) {\n      controllerInstance.$onDestroy();\n    }\n    $scope.$destroy();\n    cleanData(this.element);\n  }\n\n  prepareTransclusion(): ILinkFn | undefined {\n    const transclude = this.directive.transclude;\n    const contentChildNodes = this.extractChildNodes();\n    const attachChildrenFn: ILinkFn = (scope, cloneAttachFn) => {\n      // Since AngularJS v1.5.8, `cloneAttachFn` will try to destroy the transclusion scope if\n      // `$template` is empty. Since the transcluded content comes from Angular, not AngularJS,\n      // there will be no transclusion scope here.\n      // Provide a dummy `scope.$destroy()` method to prevent `cloneAttachFn` from throwing.\n      scope = scope || {$destroy: () => undefined};\n      return cloneAttachFn!($template, scope);\n    };\n    let $template = contentChildNodes;\n\n    if (transclude) {\n      const slots = Object.create(null);\n\n      if (typeof transclude === 'object') {\n        $template = [];\n\n        const slotMap = Object.create(null);\n        const filledSlots = Object.create(null);\n\n        // Parse the element selectors.\n        Object.keys(transclude).forEach((slotName) => {\n          let selector = transclude[slotName];\n          const optional = selector.charAt(0) === '?';\n          selector = optional ? selector.substring(1) : selector;\n\n          slotMap[selector] = slotName;\n          slots[slotName] = null; // `null`: Defined but not yet filled.\n          filledSlots[slotName] = optional; // Consider optional slots as filled.\n        });\n\n        // Add the matching elements into their slot.\n        contentChildNodes.forEach((node) => {\n          const slotName = slotMap[directiveNormalize(node.nodeName.toLowerCase())];\n          if (slotName) {\n            filledSlots[slotName] = true;\n            slots[slotName] = slots[slotName] || [];\n            slots[slotName].push(node);\n          } else {\n            $template.push(node);\n          }\n        });\n\n        // Check for required slots that were not filled.\n        Object.keys(filledSlots).forEach((slotName) => {\n          if (!filledSlots[slotName]) {\n            throw new Error(`Required transclusion slot '${slotName}' on directive: ${this.name}`);\n          }\n        });\n\n        Object.keys(slots)\n          .filter((slotName) => slots[slotName])\n          .forEach((slotName) => {\n            const nodes = slots[slotName];\n            slots[slotName] = (scope: IScope, cloneAttach: ICloneAttachFunction) => {\n              return cloneAttach!(nodes, scope);\n            };\n          });\n      }\n\n      // Attach `$$slots` to default slot transclude fn.\n      attachChildrenFn.$$slots = slots;\n\n      // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n      // removes all text content after the first interpolation and updates it later, after\n      // evaluating the expressions. This would result in AngularJS failing to recognize text\n      // nodes that start with an interpolation as transcluded content and use the fallback\n      // content instead.\n      // To avoid this issue, we add a\n      // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n      // to empty text nodes (which can only be a result of Angular removing their initial content).\n      // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n      //       will still fail to be detected by AngularJS v1.6+\n      $template.forEach((node) => {\n        if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n          node.nodeValue = '\\u200C';\n        }\n      });\n    }\n\n    return attachChildrenFn;\n  }\n\n  resolveAndBindRequiredControllers(controllerInstance: IControllerInstance | null) {\n    const directiveRequire = this.getDirectiveRequire();\n    const requiredControllers = this.resolveRequire(directiveRequire);\n\n    if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n      const requiredControllersMap = requiredControllers as {[key: string]: IControllerInstance};\n      Object.keys(requiredControllersMap).forEach((key) => {\n        controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    return requiredControllers;\n  }\n\n  private compileHtml(html: string | TrustedHTML): ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n\n  private extractChildNodes(): Node[] {\n    const childNodes: Node[] = [];\n    let childNode: Node | null;\n\n    while ((childNode = this.element.firstChild)) {\n      (childNode as Element | Comment | Text).remove();\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n\n  private getDirectiveRequire(): DirectiveRequireProperty {\n    const require = this.directive.require || (this.directive.controller && this.directive.name)!;\n\n    if (isMap(require)) {\n      Object.entries(require).forEach(([key, value]) => {\n        const match = value.match(REQUIRE_PREFIX_RE)!;\n        const name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n\n  private resolveRequire(\n    require: DirectiveRequireProperty,\n  ): SingleOrListOrMap<IControllerInstance> | null {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map((req) => this.resolveRequire(req));\n    } else if (typeof require === 'object') {\n      const value: {[key: string]: IControllerInstance} = {};\n      Object.keys(require).forEach((key) => (value[key] = this.resolveRequire(require[key])!));\n      return value;\n    } else if (typeof require === 'string') {\n      const match = require.match(REQUIRE_PREFIX_RE)!;\n      const inheritType = match[1] || match[3];\n\n      const name = require.substring(match[0].length);\n      const isOptional = !!match[2];\n      const searchParents = !!inheritType;\n      const startOnParent = inheritType === '^^';\n\n      const ctrlKey = controllerKey(name);\n      const elem = startOnParent ? this.$element.parent!() : this.$element;\n      const value = searchParents ? elem.inheritedData!(ctrlKey) : elem.data!(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n          `Unable to find required '${require}' in upgraded directive '${this.name}'.`,\n        );\n      }\n\n      return value;\n    } else {\n      throw new Error(\n        `Unrecognized 'require' syntax on upgraded directive '${this.name}': ${require}`,\n      );\n    }\n  }\n}\n\nfunction getOrCall<T>(property: T | Function, ...args: any[]): T {\n  return isFunction(property) ? property(...args) : property;\n}\n\n// NOTE: Only works for `typeof T !== 'object'`.\nfunction isMap<T>(value: SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n\nfunction notSupported(name: string, feature: string) {\n  throw new Error(`Upgraded directive '${name}' contains unsupported feature: '${feature}'.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChange,\n  SimpleChanges,\n  Type,\n} from '@angular/core';\n\nimport {\n  IAttributes,\n  IDirective,\n  IInjectorService,\n  ILinkFn,\n  IScope,\n  ITranscludeFunction,\n} from '../../common/src/angular1';\nimport {$SCOPE} from '../../common/src/constants';\nimport {\n  IBindingDestination,\n  IControllerInstance,\n  UpgradeHelper,\n} from '../../common/src/upgrade_helper';\nimport {isFunction, strictEquals} from '../../common/src/util';\nimport {trustedHTMLFromLegacyTemplate} from '../../common/src/security/trusted_types';\n\nconst CAMEL_CASE = /([A-Z])/g;\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true,\n};\nconst NOT_SUPPORTED: any = 'NOT_SUPPORTED';\n\nfunction getInputPropertyMapName(name: string): string {\n  return `input_${name}`;\n}\n\nfunction getOutputPropertyMapName(name: string): string {\n  return `output_${name}`;\n}\n\nexport class UpgradeNg1ComponentAdapterBuilder {\n  type: Type<any>;\n  inputs: string[] = [];\n  inputsRename: string[] = [];\n  outputs: string[] = [];\n  outputsRename: string[] = [];\n  propertyOutputs: string[] = [];\n  checkProperties: string[] = [];\n  propertyMap: {[name: string]: string} = {};\n  directive: IDirective | null = null;\n  template!: string;\n\n  constructor(public name: string) {\n    const selector = name.replace(\n      CAMEL_CASE,\n      (all: string, next: string) => '-' + next.toLowerCase(),\n    );\n    const self = this;\n\n    @Directive({\n      jit: true,\n      selector: selector,\n      inputs: this.inputsRename,\n      outputs: this.outputsRename,\n      standalone: false,\n    })\n    class MyClass\n      extends UpgradeNg1ComponentAdapter\n      implements OnInit, OnChanges, DoCheck, OnDestroy\n    {\n      constructor(@Inject($SCOPE) scope: IScope, injector: Injector, elementRef: ElementRef) {\n        super(\n          new UpgradeHelper(injector, name, elementRef, self.directive || undefined),\n          scope,\n          self.template,\n          self.inputs,\n          self.outputs,\n          self.propertyOutputs,\n          self.checkProperties,\n          self.propertyMap,\n        ) as any;\n      }\n    }\n    this.type = MyClass;\n  }\n\n  extractBindings() {\n    const btcIsObject = typeof this.directive!.bindToController === 'object';\n    if (btcIsObject && Object.keys(this.directive!.scope!).length) {\n      throw new Error(\n        `Binding definitions on scope and controller at the same time are not supported.`,\n      );\n    }\n\n    const context = btcIsObject ? this.directive!.bindToController : this.directive!.scope;\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach((propName) => {\n        const definition = context[propName];\n        const bindingType = definition.charAt(0);\n        const bindingOptions = definition.charAt(1);\n        const attrName = definition.substring(bindingOptions === '?' ? 2 : 1) || propName;\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        const inputName = getInputPropertyMapName(attrName);\n        const inputNameRename = `${inputName}: ${attrName}`;\n        const outputName = getOutputPropertyMapName(attrName);\n        const outputNameRename = `${outputName}: ${attrName}`;\n        const outputNameRenameChange = `${outputNameRename}Change`;\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            this.inputs.push(inputName);\n            this.inputsRename.push(inputNameRename);\n            this.propertyMap[inputName] = propName;\n            break;\n          case '=':\n            this.inputs.push(inputName);\n            this.inputsRename.push(inputNameRename);\n            this.propertyMap[inputName] = propName;\n\n            this.outputs.push(outputName);\n            this.outputsRename.push(outputNameRenameChange);\n            this.propertyMap[outputName] = propName;\n\n            this.checkProperties.push(propName);\n            this.propertyOutputs.push(outputName);\n            break;\n          case '&':\n            this.outputs.push(outputName);\n            this.outputsRename.push(outputNameRename);\n            this.propertyMap[outputName] = propName;\n            break;\n          default:\n            let json = JSON.stringify(context);\n            throw new Error(\n              `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`,\n            );\n        }\n      });\n    }\n  }\n\n  /**\n   * Upgrade ng1 components into Angular.\n   */\n  static resolve(\n    exportedComponents: {[name: string]: UpgradeNg1ComponentAdapterBuilder},\n    $injector: IInjectorService,\n  ): Promise<string[]> {\n    const promises = Object.entries(exportedComponents).map(([name, exportedComponent]) => {\n      exportedComponent.directive = UpgradeHelper.getDirective($injector, name);\n      exportedComponent.extractBindings();\n\n      return Promise.resolve(\n        UpgradeHelper.getTemplate($injector, exportedComponent.directive, true),\n      ).then((template) => (exportedComponent.template = template));\n    });\n\n    return Promise.all(promises);\n  }\n}\n\n@Directive()\nclass UpgradeNg1ComponentAdapter implements OnInit, OnChanges, DoCheck {\n  private controllerInstance: IControllerInstance | null = null;\n  destinationObj: IBindingDestination | null = null;\n  checkLastValues: any[] = [];\n  directive: IDirective;\n  element: Element;\n  $element: any = null;\n  componentScope: IScope;\n\n  constructor(\n    private helper: UpgradeHelper,\n    scope: IScope,\n    private template: string,\n    private inputs: string[],\n    private outputs: string[],\n    private propOuts: string[],\n    private checkProperties: string[],\n    private propertyMap: {[key: string]: string},\n  ) {\n    this.directive = helper.directive;\n    this.element = helper.element;\n    this.$element = helper.$element;\n    this.componentScope = scope.$new(!!this.directive.scope);\n\n    const controllerType = this.directive.controller;\n\n    if (this.directive.bindToController && controllerType) {\n      this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n      this.destinationObj = this.controllerInstance;\n    } else {\n      this.destinationObj = this.componentScope;\n    }\n\n    for (const input of this.inputs) {\n      (this as any)[input] = null;\n    }\n    for (const output of this.outputs) {\n      const emitter = ((this as any)[output] = new EventEmitter());\n      if (this.propOuts.indexOf(output) === -1) {\n        this.setComponentProperty(\n          output,\n          (\n            (emitter) => (value: any) =>\n              emitter.emit(value)\n          )(emitter),\n        );\n      }\n    }\n    this.checkLastValues.push(...Array(propOuts.length).fill(INITIAL_VALUE));\n  }\n\n  ngOnInit() {\n    // Collect contents, insert and compile template\n    const attachChildNodes: ILinkFn | undefined = this.helper.prepareTransclusion();\n    const linkFn = this.helper.compileTemplate(trustedHTMLFromLegacyTemplate(this.template));\n\n    // Instantiate controller (if not already done so)\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    if (controllerType && !bindToController) {\n      this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n    }\n\n    // Require other controllers\n    const requiredControllers = this.helper.resolveAndBindRequiredControllers(\n      this.controllerInstance,\n    );\n\n    // Hook: $onInit\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    // Linking\n    const link = this.directive.link;\n    const preLink = typeof link == 'object' && link.pre;\n    const postLink = typeof link == 'object' ? link.post : link;\n    const attrs: IAttributes = NOT_SUPPORTED;\n    const transcludeFn: ITranscludeFunction = NOT_SUPPORTED;\n    if (preLink) {\n      preLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    linkFn(this.componentScope, null!, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    // Hook: $postLink\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const ng1Changes: any = {};\n    Object.keys(changes).forEach((propertyMapName) => {\n      const change: SimpleChange = changes[propertyMapName];\n      this.setComponentProperty(propertyMapName, change.currentValue);\n      ng1Changes[this.propertyMap[propertyMapName]] = change;\n    });\n\n    if (isFunction(this.destinationObj!.$onChanges)) {\n      this.destinationObj!.$onChanges!(ng1Changes);\n    }\n  }\n\n  ngDoCheck() {\n    const destinationObj = this.destinationObj;\n    const lastValues = this.checkLastValues;\n    const checkProperties = this.checkProperties;\n    const propOuts = this.propOuts;\n    checkProperties.forEach((propName, i) => {\n      const value = destinationObj![propName];\n      const last = lastValues[i];\n      if (!strictEquals(last, value)) {\n        const eventEmitter: EventEmitter<any> = (this as any)[propOuts[i]];\n        eventEmitter.emit((lastValues[i] = value));\n      }\n    });\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      this.controllerInstance.$doCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this.helper.onDestroy(this.componentScope, this.controllerInstance);\n  }\n\n  setComponentProperty(name: string, value: any) {\n    this.destinationObj![this.propertyMap[name]] = value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  Compiler,\n  CompilerOptions,\n  Injector,\n  NgModule,\n  NgModuleRef,\n  NgZone,\n  resolveForwardRef,\n  StaticProvider,\n  Testability,\n  Type,\n} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {\n  bootstrap,\n  element as angularElement,\n  IAngularBootstrapConfig,\n  IAugmentedJQuery,\n  IInjectorService,\n  IModule,\n  IProvideService,\n  IRootScopeService,\n  ITestabilityService,\n  module_ as angularModule,\n} from '../../common/src/angular1';\nimport {\n  $$TESTABILITY,\n  $COMPILE,\n  $INJECTOR,\n  $ROOT_SCOPE,\n  COMPILER_KEY,\n  INJECTOR_KEY,\n  LAZY_MODULE_REF,\n  NG_ZONE_KEY,\n  UPGRADE_APP_TYPE_KEY,\n} from '../../common/src/constants';\nimport {downgradeComponent} from '../../common/src/downgrade_component';\nimport {downgradeInjectable} from '../../common/src/downgrade_injectable';\nimport {\n  controllerKey,\n  Deferred,\n  destroyApp,\n  LazyModuleRef,\n  onError,\n  UpgradeAppType,\n} from '../../common/src/util';\n\nimport {UpgradeNg1ComponentAdapterBuilder} from './upgrade_ng1_adapter';\n\nlet upgradeCount: number = 0;\n\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n *\n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See {@link UpgradeAdapter#upgradeNg1Component})\n * 2. creation of AngularJS directive from Angular component.\n *    (See {@link UpgradeAdapter#downgradeNg2Component})\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n *\n * @usageNotes\n * ### Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n *\n * ### Example\n *\n * ```ts\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n *\n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n *\n *\n * @Component({\n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n *\n * @NgModule({\n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n *\n *\n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n *\n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n *\n * ```\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](tools/cli/aot-compiler).\n * @publicApi\n */\nexport class UpgradeAdapter {\n  private idPrefix: string = `NG2_UPGRADE_${upgradeCount++}_`;\n  private downgradedComponents: Type<any>[] = [];\n  /**\n   * An internal map of ng1 components which need to up upgraded to ng2.\n   *\n   * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n   * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n   *\n   * @internal\n   */\n  private ng1ComponentsToBeUpgraded: {[name: string]: UpgradeNg1ComponentAdapterBuilder} = {};\n  private upgradedProviders: StaticProvider[] = [];\n  private moduleRef: NgModuleRef<any> | null = null;\n\n  constructor(\n    private ng2AppModule: Type<any>,\n    private compilerOptions?: CompilerOptions,\n  ) {\n    if (!ng2AppModule) {\n      throw new Error(\n        'UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.',\n      );\n    }\n  }\n\n  /**\n   * Allows Angular Component to be used from AngularJS.\n   *\n   * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n   * Angular Component. The adapter will bootstrap Angular component from within the\n   * AngularJS template.\n   *\n   * @usageNotes\n   * ### Mental Model\n   *\n   * 1. The component is instantiated by being listed in AngularJS template. This means that the\n   *    host element is controlled by AngularJS, but the component's view will be controlled by\n   *    Angular.\n   * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n   *    syntax. This has to be done, this way because we must follow Angular components do not\n   *    declare how the attributes should be interpreted.\n   * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n   *    by way of the `ControlValueAccessor` interface from @angular/forms. Only components that\n   *    implement this interface are eligible.\n   *\n   * ### Supported Features\n   *\n   * - Bindings:\n   *   - Attribute: `<comp name=\"World\">`\n   *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n   *   - Expression:  `<comp [name]=\"username\">`\n   *   - Event:  `<comp (close)=\"doSomething()\">`\n   *   - ng-model: `<comp ng-model=\"name\">`\n   * - Content projection: yes\n   *\n   * ### Example\n   *\n   * ```angular-ts\n   * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n   * const module = angular.module('myExample', []);\n   * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n   *\n   * @Component({\n   *   selector: 'greet',\n   *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n   * })\n   * class Greeter {\n   *   @Input() salutation: string;\n   *   @Input() name: string;\n   * }\n   *\n   * @NgModule({\n   *   declarations: [Greeter],\n   *   imports: [BrowserModule]\n   * })\n   * class MyNg2Module {}\n   *\n   * document.body.innerHTML =\n   *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n   *\n   * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n   *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n   * });\n   * ```\n   */\n  downgradeNg2Component(component: Type<any>): Function {\n    this.downgradedComponents.push(component);\n\n    return downgradeComponent({component});\n  }\n\n  /**\n   * Allows AngularJS Component to be used from Angular.\n   *\n   * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n   * directive. The adapter will bootstrap AngularJS component from within the Angular\n   * template.\n   *\n   * @usageNotes\n   * ### Mental Model\n   *\n   * 1. The component is instantiated by being listed in Angular template. This means that the\n   *    host element is controlled by Angular, but the component's view will be controlled by\n   *    AngularJS.\n   *\n   * ### Supported Features\n   *\n   * - Bindings:\n   *   - Attribute: `<comp name=\"World\">`\n   *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n   *   - Expression:  `<comp [name]=\"username\">`\n   *   - Event:  `<comp (close)=\"doSomething()\">`\n   * - Transclusion: yes\n   * - Only some of the features of\n   *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n   *   supported:\n   *   - `compile`: not supported because the host element is owned by Angular, which does\n   *     not allow modifying DOM structure during compilation.\n   *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n   *   - `controllerAs`: supported.\n   *   - `bindToController`: supported.\n   *   - `link`: supported. (NOTE: only pre-link function is supported.)\n   *   - `name`: supported.\n   *   - `priority`: ignored.\n   *   - `replace`: not supported.\n   *   - `require`: supported.\n   *   - `restrict`: must be set to 'E'.\n   *   - `scope`: supported.\n   *   - `template`: supported.\n   *   - `templateUrl`: supported.\n   *   - `terminal`: ignored.\n   *   - `transclude`: supported.\n   *\n   *\n   * ### Example\n   *\n   * ```angular-ts\n   * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n   * const module = angular.module('myExample', []);\n   *\n   * module.directive('greet', function() {\n   *   return {\n   *     scope: {salutation: '=', name: '=' },\n   *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n   *   };\n   * });\n   *\n   * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n   *\n   * @Component({\n   *   selector: 'ng2',\n   *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n   * })\n   * class Ng2Component {\n   * }\n   *\n   * @NgModule({\n   *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n   *   imports: [BrowserModule]\n   * })\n   * class MyNg2Module {}\n   *\n   * document.body.innerHTML = '<ng2></ng2>';\n   *\n   * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n   *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n   * });\n   * ```\n   */\n  upgradeNg1Component(name: string): Type<any> {\n    if (this.ng1ComponentsToBeUpgraded.hasOwnProperty(name)) {\n      return this.ng1ComponentsToBeUpgraded[name].type;\n    } else {\n      return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n        .type;\n    }\n  }\n\n  /**\n   * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n   * Use this instead of `angular.mock.module()` to load the upgrade module into\n   * the AngularJS testing injector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```ts\n   * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n   *\n   * // configure the adapter with upgrade/downgrade components and services\n   * upgradeAdapter.downgradeNg2Component(MyComponent);\n   *\n   * let upgradeAdapterRef: UpgradeAdapterRef;\n   * let $compile, $rootScope;\n   *\n   * // We must register the adapter before any calls to `inject()`\n   * beforeEach(() => {\n   *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n   * });\n   *\n   * beforeEach(inject((_$compile_, _$rootScope_) => {\n   *   $compile = _$compile_;\n   *   $rootScope = _$rootScope_;\n   * }));\n   *\n   * it(\"says hello\", (done) => {\n   *   upgradeAdapterRef.ready(() => {\n   *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n   *     $rootScope.$apply();\n   *     expect(element.html()).toContain(\"Hello World\");\n   *     done();\n   *   })\n   * });\n   *\n   * ```\n   *\n   * @param modules any AngularJS modules that the upgrade module should depend upon\n   * @returns an `UpgradeAdapterRef`, which lets you register a `ready()` callback to\n   * run assertions once the Angular components are ready to test through AngularJS.\n   */\n  registerForNg1Tests(modules?: string[]): UpgradeAdapterRef {\n    const windowNgMock = (window as any)['angular'].mock;\n    if (!windowNgMock || !windowNgMock.module) {\n      throw new Error(\"Failed to find 'angular.mock.module'.\");\n    }\n    const {ng1Module, ng2BootstrapDeferred} = this.declareNg1Module(modules);\n    windowNgMock.module(ng1Module.name);\n    const upgrade = new UpgradeAdapterRef();\n    ng2BootstrapDeferred.promise.then((ng1Injector) => {\n      // @ts-expect-error\n      upgrade._bootstrapDone(this.moduleRef!, ng1Injector);\n    }, onError);\n    return upgrade;\n  }\n\n  /**\n   * Bootstrap a hybrid AngularJS / Angular application.\n   *\n   * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n   * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n   * AngularJS, this bootstrap is asynchronous.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```angular-ts\n   * const adapter = new UpgradeAdapter(MyNg2Module);\n   * const module = angular.module('myExample', []);\n   * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n   *\n   * module.directive('ng1', function() {\n   *   return {\n   *      scope: { title: '=' },\n   *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n   *   };\n   * });\n   *\n   *\n   * @Component({\n   *   selector: 'ng2',\n   *   inputs: ['name'],\n   *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n   * })\n   * class Ng2 {\n   * }\n   *\n   * @NgModule({\n   *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n   *   imports: [BrowserModule]\n   * })\n   * class MyNg2Module {}\n   *\n   * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n   *\n   * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n   *   expect(document.body.textContent).toEqual(\n   *       \"ng2[ng1[Hello World!](transclude)](project)\");\n   * });\n   * ```\n   */\n  bootstrap(\n    element: Element,\n    modules?: any[],\n    config?: IAngularBootstrapConfig,\n  ): UpgradeAdapterRef {\n    const {ng1Module, ng2BootstrapDeferred, ngZone} = this.declareNg1Module(modules);\n\n    const upgrade = new UpgradeAdapterRef();\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const windowAngular = (window as any)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    ngZone.run(() => {\n      bootstrap(element, [ng1Module.name], config!);\n    });\n    const ng1BootstrapPromise = new Promise<void>((resolve) => {\n      if (windowAngular.resumeBootstrap) {\n        const originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n        windowAngular.resumeBootstrap = function () {\n          windowAngular.resumeBootstrap = originalResumeBootstrap;\n          const r = windowAngular.resumeBootstrap.apply(this, arguments);\n          resolve();\n          return r;\n        };\n      } else {\n        resolve();\n      }\n    });\n\n    Promise.all([ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(([ng1Injector]) => {\n      angularElement(element).data!(controllerKey(INJECTOR_KEY), this.moduleRef!.injector);\n      this.moduleRef!.injector.get<NgZone>(NgZone).run(() => {\n        // @ts-expect-error\n        upgrade._bootstrapDone(this.moduleRef, ng1Injector);\n      });\n    }, onError);\n    return upgrade;\n  }\n\n  /**\n   * Allows AngularJS service to be accessible from Angular.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```ts\n   * class Login { ... }\n   * class Server { ... }\n   *\n   * @Injectable()\n   * class Example {\n   *   constructor(@Inject('server') server, login: Login) {\n   *     ...\n   *   }\n   * }\n   *\n   * const module = angular.module('myExample', []);\n   * module.service('server', Server);\n   * module.service('login', Login);\n   *\n   * const adapter = new UpgradeAdapter(MyNg2Module);\n   * adapter.upgradeNg1Provider('server');\n   * adapter.upgradeNg1Provider('login', {asToken: Login});\n   *\n   * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n   *   const example: Example = ref.ng2Injector.get(Example);\n   * });\n   *\n   * ```\n   */\n  upgradeNg1Provider(name: string, options?: {asToken: any}) {\n    const token = (options && options.asToken) || name;\n    this.upgradedProviders.push({\n      provide: token,\n      useFactory: ($injector: IInjectorService) => $injector.get(name),\n      deps: [$INJECTOR],\n    });\n  }\n\n  /**\n   * Allows Angular service to be accessible from AngularJS.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```ts\n   * class Example {\n   * }\n   *\n   * const adapter = new UpgradeAdapter(MyNg2Module);\n   *\n   * const module = angular.module('myExample', []);\n   * module.factory('example', adapter.downgradeNg2Provider(Example));\n   *\n   * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n   *   const example: Example = ref.ng1Injector.get('example');\n   * });\n   *\n   * ```\n   */\n  downgradeNg2Provider(token: any): Function {\n    return downgradeInjectable(token);\n  }\n\n  /**\n   * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n   * hybrid application.\n   *\n   * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n   *\n   * @param modules The AngularJS modules that this upgrade module should depend upon.\n   * @returns The AngularJS upgrade module that is declared by this method\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * ```ts\n   * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n   * upgradeAdapter.declareNg1Module(['heroApp']);\n   * ```\n   */\n  private declareNg1Module(modules: string[] = []): {\n    ng1Module: IModule;\n    ng2BootstrapDeferred: Deferred<IInjectorService>;\n    ngZone: NgZone;\n  } {\n    const delayApplyExps: Function[] = [];\n    let original$applyFn: Function;\n    let rootScopePrototype: any;\n    const upgradeAdapter = this;\n    const ng1Module = angularModule(this.idPrefix, modules);\n    const platformRef = platformBrowserDynamic();\n\n    const ngZone = new NgZone({\n      enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec'),\n    });\n    const ng2BootstrapDeferred = new Deferred<IInjectorService>();\n    ng1Module\n      .constant(UPGRADE_APP_TYPE_KEY, UpgradeAppType.Dynamic)\n      .factory(INJECTOR_KEY, () => this.moduleRef!.injector.get(Injector))\n      .factory(LAZY_MODULE_REF, [\n        INJECTOR_KEY,\n        (injector: Injector) => ({injector}) as LazyModuleRef,\n      ])\n      .constant(NG_ZONE_KEY, ngZone)\n      .factory(COMPILER_KEY, () => this.moduleRef!.injector.get(Compiler))\n      .config([\n        '$provide',\n        '$injector',\n        (provide: IProvideService, ng1Injector: IInjectorService) => {\n          provide.decorator($ROOT_SCOPE, [\n            '$delegate',\n            function (rootScopeDelegate: IRootScopeService) {\n              // Capture the root apply so that we can delay first call to $apply until we\n              // bootstrap Angular and then we replay and restore the $apply.\n              rootScopePrototype = rootScopeDelegate.constructor.prototype;\n              if (rootScopePrototype.hasOwnProperty('$apply')) {\n                original$applyFn = rootScopePrototype.$apply;\n                rootScopePrototype.$apply = (exp: any) => delayApplyExps.push(exp);\n              } else {\n                throw new Error(\"Failed to find '$apply' on '$rootScope'!\");\n              }\n              return rootScopeDelegate;\n            },\n          ]);\n          if (ng1Injector.has($$TESTABILITY)) {\n            provide.decorator($$TESTABILITY, [\n              '$delegate',\n              function (testabilityDelegate: ITestabilityService) {\n                const originalWhenStable: Function = testabilityDelegate.whenStable;\n                // Cannot use arrow function below because we need the context\n                const newWhenStable = function (this: unknown, callback: Function) {\n                  originalWhenStable.call(this, function (this: unknown) {\n                    const ng2Testability: Testability =\n                      upgradeAdapter.moduleRef!.injector.get(Testability);\n                    if (ng2Testability.isStable()) {\n                      callback.apply(this, arguments);\n                    } else {\n                      ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                    }\n                  });\n                };\n\n                testabilityDelegate.whenStable = newWhenStable;\n                return testabilityDelegate;\n              },\n            ]);\n          }\n        },\n      ]);\n\n    ng1Module.run([\n      '$injector',\n      '$rootScope',\n      (ng1Injector: IInjectorService, rootScope: IRootScopeService) => {\n        UpgradeNg1ComponentAdapterBuilder.resolve(this.ng1ComponentsToBeUpgraded, ng1Injector)\n          .then(() => {\n            // At this point we have ng1 injector and we have prepared\n            // ng1 components to be upgraded, we now can bootstrap ng2.\n            @NgModule({\n              jit: true,\n              providers: [\n                {provide: $INJECTOR, useFactory: () => ng1Injector},\n                {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n                this.upgradedProviders,\n              ],\n              imports: [resolveForwardRef(this.ng2AppModule)],\n            })\n            class DynamicNgUpgradeModule {\n              ngDoBootstrap() {}\n            }\n            platformRef\n              .bootstrapModule(DynamicNgUpgradeModule, [this.compilerOptions!, {ngZone}])\n              .then((ref: NgModuleRef<any>) => {\n                this.moduleRef = ref;\n                ngZone.run(() => {\n                  if (rootScopePrototype) {\n                    rootScopePrototype.$apply = original$applyFn; // restore original $apply\n                    while (delayApplyExps.length) {\n                      rootScope.$apply(delayApplyExps.shift());\n                    }\n                    rootScopePrototype = null;\n                  }\n                });\n              })\n              .then(() => ng2BootstrapDeferred.resolve(ng1Injector), onError)\n              .then(() => {\n                let subscription = ngZone.onMicrotaskEmpty.subscribe({\n                  next: () => {\n                    if (rootScope.$$phase) {\n                      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                        console.warn(\n                          'A digest was triggered while one was already in progress. This may mean that something is triggering digests outside the Angular zone.',\n                        );\n                      }\n\n                      return rootScope.$evalAsync(() => {});\n                    }\n\n                    return rootScope.$digest();\n                  },\n                });\n                rootScope.$on('$destroy', () => {\n                  subscription.unsubscribe();\n                });\n\n                // Destroy the AngularJS app once the Angular `PlatformRef` is destroyed.\n                // This does not happen in a typical SPA scenario, but it might be useful for\n                // other use-cases where disposing of an Angular/AngularJS app is necessary\n                // (such as Hot Module Replacement (HMR)).\n                // See https://github.com/angular/angular/issues/39935.\n                platformRef.onDestroy(() => destroyApp(ng1Injector));\n              });\n          })\n          .catch((e) => ng2BootstrapDeferred.reject(e));\n      },\n    ]);\n\n    return {ng1Module, ng2BootstrapDeferred, ngZone};\n  }\n}\n\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](tools/cli/aot-compiler).\n * @publicApi\n */\nexport class UpgradeAdapterRef {\n  /* @internal */\n  private _readyFn: ((upgradeAdapterRef: UpgradeAdapterRef) => void) | null = null;\n\n  public ng1RootScope: IRootScopeService = null!;\n  public ng1Injector: IInjectorService = null!;\n  public ng2ModuleRef: NgModuleRef<any> = null!;\n  public ng2Injector: Injector = null!;\n\n  /* @internal */\n  private _bootstrapDone(ngModuleRef: NgModuleRef<any>, ng1Injector: IInjectorService) {\n    this.ng2ModuleRef = ngModuleRef;\n    this.ng2Injector = ngModuleRef.injector;\n    this.ng1Injector = ng1Injector;\n    this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n    this._readyFn && this._readyFn(this);\n  }\n\n  /**\n   * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n   * application has been bootstrapped.\n   *\n   * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n   * require a call to `$apply()`.\n   */\n  public ready(fn: (upgradeAdapterRef: UpgradeAdapterRef) => void) {\n    this._readyFn = fn;\n  }\n\n  /**\n   * Dispose of running hybrid AngularJS / Angular application.\n   */\n  public dispose() {\n    this.ng1Injector!.get($ROOT_SCOPE).$destroy();\n    this.ng2ModuleRef!.destroy();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package. allowing\n * Angular 1 and Angular 2+ to run side by side in the same application.\n */\nexport {VERSION} from './src/common/src/version';\nexport {UpgradeAdapter, UpgradeAdapterRef} from './src/dynamic/src/upgrade_adapter';\n\n// This file only re-exports content of the `src` folder. Keep it that way.\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verification. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["angularElement","INITIAL_VALUE","SIGNAL","element","angularModule"],"mappings":"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"}
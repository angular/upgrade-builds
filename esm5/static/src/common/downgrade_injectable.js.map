{"version":3,"file":"downgrade_injectable.js","sourceRoot":"","sources":["../../../../../../../packages/upgrade/static/src/common/downgrade_injectable.ts"],"names":[],"mappings":";;;;;;;AASA,OAAO,EAAC,YAAY,EAAC,MAAM,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CzC,MAAM,8BAA8B,KAAU;IAC5C,IAAM,OAAO,GAAG,UAAS,CAAW,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;IAC9D,OAAe,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAE7C,MAAM,CAAC,OAAO,CAAC;CAChB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n\n/**\n * @description\n *\n * A helper function to allow an Angular service to be accessible from AngularJS.\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * This helper function returns a factory function that provides access to the Angular\n * service identified by the `token` parameter.\n *\n * ### Examples\n *\n * First ensure that the service to be downgraded is provided in an `NgModule`\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app `NgModule`\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {@example upgrade/static/ts/module.ts region=\"example-app\"}\n *\n * @param token an `InjectionToken` that identifies a service provided from Angular.\n *\n * @returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * @experimental\n */\nexport function downgradeInjectable(token: any): Function {\n  const factory = function(i: Injector) { return i.get(token); };\n  (factory as any)['$inject'] = [INJECTOR_KEY];\n\n  return factory;\n}\n"]}
{"version":3,"file":"upgrade-static.umd.js","sources":["../../../../packages/upgrade/static/src/static/upgrade_module.ts","../../../../packages/upgrade/static/src/static/angular1_providers.ts","../../../../packages/upgrade/static/src/static/upgrade_component.ts","../../../../packages/upgrade/static/src/common/angular1.ts","../../../../packages/upgrade/static/src/common/version.ts","../../../../packages/upgrade/static/src/common/downgrade_injectable.ts","../../../../packages/upgrade/static/src/common/downgrade_component.ts","../../../../packages/upgrade/static/src/common/downgrade_component_adapter.ts","../../../../packages/upgrade/static/src/common/util.ts","../../../../packages/upgrade/static/src/common/ng_content_selector_helper.ts","../../../../packages/upgrade/static/src/common/component_info.ts","../../../../packages/upgrade/static/src/common/compiler_helpers/createElementCssSelector.ts","../../../../packages/upgrade/static/src/common/compiler_helpers/selector.ts","../../../../packages/upgrade/static/src/common/compiler_helpers/ml_parser/html_tags.ts","../../../../packages/upgrade/static/src/common/compiler_helpers/ml_parser/tags.ts","../../../../packages/upgrade/static/src/common/constants.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, NgModule, NgZone, Testability} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$$TESTABILITY, $DELEGATE, $INJECTOR, $PROVIDE, $ROOT_SCOPE, INJECTOR_KEY, UPGRADE_MODULE_NAME} from '../common/constants';\nimport {NgContentSelectorHelper} from '../common/ng_content_selector_helper';\nimport {controllerKey} from '../common/util';\n\nimport {angular1Providers, setTempInjectorRef} from './angular1_providers';\n\n\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows AngularJS and Angular components to be used together inside a hybrid upgrade\n * application, which supports AoT compilation.\n *\n * Specifically, the classes and functions in the `upgrade/static` module allow the following:\n * 1. Creation of an Angular directive that wraps and exposes an AngularJS component so\n *    that it can be used in an Angular template. See {@link UpgradeComponent}.\n * 2. Creation of an AngularJS directive that wraps and exposes an Angular component so\n *    that it can be used in an AngularJS template. See {@link downgradeComponent}.\n * 3. Creation of an Angular root injector provider that wraps and exposes an AngularJS\n *    service so that it can be injected into an Angular context. See\n *    {@link UpgradeModule#upgrading-an-angular-1-service Upgrading an AngularJS service} below.\n * 4. Creation of an AngularJS service that wraps and exposes an Angular injectable\n *    so that it can be injected into an AngularJS context. See {@link downgradeInjectable}.\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application. See the\n *    {@link UpgradeModule#example example} below.\n *\n * ## Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside the AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside the Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\n *    defining an Angular directive, which bootstraps the AngularJS component at its location\n *    in the DOM. See {@link UpgradeComponent}.\n * 6. An Angular component can be \"downgraded\"\" to an AngularJS component. This is achieved by\n *    defining an AngularJS directive, which bootstraps the Angular component at its location\n *    in the DOM. See {@link downgradeComponent}.\n * 7. Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\n *    the framework doing the instantiation. The other framework then instantiates and owns the\n *    view for that component.\n *    a. This implies that the component bindings will always follow the semantics of the\n *       instantiation framework.\n *    b. The DOM attributes are parsed by the framework that owns the current template. So\n * attributes\n *       in AngularJS templates must use kebab-case, while AngularJS templates must use camelCase.\n *    c. However the template binding syntax will always use the Angular style, e.g. square\n *       brackets (`[...]`) for property binding.\n * 8. AngularJS is always bootstrapped first and owns the root component.\n * 9. The new application is running in an Angular zone, and therefore it no longer needs calls\n * to\n *    `$apply()`.\n *\n * @howToUse\n *\n * `import {UpgradeModule} from '@angular/upgrade/static';`\n *\n * ## Example\n * Import the {@link UpgradeModule} into your top level {@link NgModule Angular `NgModule`}.\n *\n * {@example upgrade/static/ts/module.ts region='ng2-module'}\n *\n * Then bootstrap the hybrid upgrade app's module, get hold of the {@link UpgradeModule} instance\n * and use it to bootstrap the top level [AngularJS\n * module](https://docs.angularjs.org/api/ng/type/angular.Module).\n *\n * {@example upgrade/static/ts/module.ts region='bootstrap'}\n *\n *\n * ## Upgrading an AngularJS service\n *\n * There is no specific API for upgrading an AngularJS service. Instead you should just follow the\n * following recipe:\n *\n * Let's say you have an AngularJS service:\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-title-case-service\"}\n *\n * Then you should define an Angular provider to be included in your {@link NgModule} `providers`\n * property.\n *\n * {@example upgrade/static/ts/module.ts region=\"upgrade-ng1-service\"}\n *\n * Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\n * or service.\n *\n * {@example upgrade/static/ts/module.ts region=\"use-ng1-upgraded-service\"}\n *\n * @description\n *\n * This class is an `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * ## Core AngularJS services\n * Importing this {@link NgModule} will add providers for the core\n * [AngularJS services](https://docs.angularjs.org/api/ng/service) to the root injector.\n *\n * ## Bootstrap\n * The runtime instance of this class contains a {@link UpgradeModule#bootstrap `bootstrap()`}\n * method, which you use to bootstrap the top level AngularJS module onto an element in the\n * DOM for the hybrid upgrade app.\n *\n * It also contains properties to access the {@link UpgradeModule#injector root injector}, the\n * bootstrap {@link NgZone} and the\n * [AngularJS $injector](https://docs.angularjs.org/api/auto/service/$injector).\n *\n * @experimental\n */\n\nexport class UpgradeModule {\n  /**\n   * The AngularJS `$injector` for the upgrade application.\n   */\n  public $injector: any /*angular.IInjectorService*/;\n\n  constructor(\n      /** The root {@link Injector} for the upgrade application. */\n      public injector: Injector,\n      /** The bootstrap zone for the upgrade application */\n      public ngZone: NgZone) {}\n\n  /**\n   * Bootstrap an AngularJS application from this NgModule\n   * @param element the element on which to bootstrap the AngularJS application\n   * @param [modules] the AngularJS modules to bootstrap for this application\n   * @param [config] optional extra AngularJS bootstrap configuration\n   */\n  bootstrap(\n      element: Element, modules: string[] = [], config?: any /*angular.IAngularBootstrapConfig*/) {\n    const INIT_MODULE_NAME = UPGRADE_MODULE_NAME + '.init';\n\n    // Create an ng1 module to bootstrap\n    const initModule =\n        angular\n            .module(INIT_MODULE_NAME, [])\n\n            .value(INJECTOR_KEY, this.injector)\n\n            .config([\n              $PROVIDE, $INJECTOR,\n              ($provide: angular.IProvideService, $injector: angular.IInjectorService) => {\n                if ($injector.has($$TESTABILITY)) {\n                  $provide.decorator($$TESTABILITY, [\n                    $DELEGATE,\n                    (testabilityDelegate: angular.ITestabilityService) => {\n                      const originalWhenStable: Function = testabilityDelegate.whenStable;\n                      const injector = this.injector;\n                      // Cannot use arrow function below because we need the context\n                      const newWhenStable = function(callback: Function) {\n                        originalWhenStable.call(testabilityDelegate, function() {\n                          const ng2Testability: Testability = injector.get(Testability);\n                          if (ng2Testability.isStable()) {\n                            callback();\n                          } else {\n                            ng2Testability.whenStable(\n                                newWhenStable.bind(testabilityDelegate, callback));\n                          }\n                        });\n                      };\n\n                      testabilityDelegate.whenStable = newWhenStable;\n                      return testabilityDelegate;\n                    }\n                  ]);\n                }\n              }\n            ])\n\n            .run([\n              $INJECTOR,\n              ($injector: angular.IInjectorService) => {\n                this.$injector = $injector;\n\n                // Initialize the ng1 $injector provider\n                setTempInjectorRef($injector);\n                this.injector.get($INJECTOR);\n\n                // Put the injector on the DOM, so that it can be \"required\"\n                angular.element(element).data(controllerKey(INJECTOR_KEY), this.injector);\n\n                // Wire up the ng1 rootScope to run a digest cycle whenever the zone settles\n                // We need to do this in the next tick so that we don't prevent the bootup\n                // stabilizing\n                setTimeout(() => {\n                  const $rootScope = $injector.get('$rootScope');\n                  const subscription =\n                      this.ngZone.onMicrotaskEmpty.subscribe(() => $rootScope.$digest());\n                  $rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                }, 0);\n              }\n            ]);\n\n    const upgradeModule = angular.module(UPGRADE_MODULE_NAME, [INIT_MODULE_NAME].concat(modules));\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const windowAngular = (window as any /** TODO #???? */)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    // Bootstrap the AngularJS application inside our zone\n    this.ngZone.run(() => { angular.bootstrap(element, [upgradeModule.name], config); });\n\n    // Patch resumeBootstrap() to run inside the ngZone\n    if (windowAngular.resumeBootstrap) {\n      const originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n      const ngZone = this.ngZone;\n      windowAngular.resumeBootstrap = function() {\n        let args = arguments;\n        windowAngular.resumeBootstrap = originalResumeBootstrap;\n        ngZone.run(() => { windowAngular.resumeBootstrap.apply(this, args); });\n      };\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{providers: [angular1Providers, NgContentSelectorHelper]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: NgZone, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as angular from '../common/angular1';\n\n// We have to do a little dance to get the ng1 injector into the module injector.\n// We store the ng1 injector so that the provider in the module injector can access it\n// Then we \"get\" the ng1 injector from the module injector, which triggers the provider to read\n// the stored injector and release the reference to it.\nlet tempInjectorRef: angular.IInjectorService;\nexport function setTempInjectorRef(injector: angular.IInjectorService) {\n  tempInjectorRef = injector;\n}\nexport function injectorFactory() {\n  const injector: angular.IInjectorService = tempInjectorRef;\n  tempInjectorRef = null;  // clear the value to prevent memory leaks\n  return injector;\n}\n\nexport function rootScopeFactory(i: angular.IInjectorService) {\n  return i.get('$rootScope');\n}\n\nexport function compileFactory(i: angular.IInjectorService) {\n  return i.get('$compile');\n}\n\nexport function parseFactory(i: angular.IInjectorService) {\n  return i.get('$parse');\n}\n\nexport const angular1Providers = [\n  // We must use exported named functions for the ng2 factories to keep the compiler happy:\n  // > Metadata collected contains an error that will be reported at runtime:\n  // >   Function calls are not supported.\n  // >   Consider replacing the function or lambda with a reference to an exported function\n  {provide: '$injector', useFactory: injectorFactory},\n  {provide: '$rootScope', useFactory: rootScopeFactory, deps: ['$injector']},\n  {provide: '$compile', useFactory: compileFactory, deps: ['$injector']},\n  {provide: '$parse', useFactory: parseFactory, deps: ['$injector']}\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DoCheck, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges, ɵlooseIdentical as looseIdentical} from '@angular/core';\nimport * as angular from '../common/angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $SCOPE, $TEMPLATE_CACHE} from '../common/constants';\nimport {controllerKey} from '../common/util';\n\nconst REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\nconst NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nclass Bindings {\n  twoWayBoundProperties: string[] = [];\n  twoWayBoundLastValues: any[] = [];\n\n  expressionBoundProperties: string[] = [];\n\n  propertyToOutputMap: {[propName: string]: string} = {};\n}\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an AngularJS component to be used from Angular.\n *\n * @howToUse\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n *\n * We must create a {@link Directive} that will make this AngularJS component\n * available inside Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the {@link UpgradeComponent}\n * base class but also provide an {@link Directive `@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the {@link ElementRef} and {@link Injector} for the component wrapper\n *\n * @description\n *\n * A helper class that should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * @experimental\n */\nexport class UpgradeComponent implements OnInit, OnChanges, DoCheck, OnDestroy {\n  private $injector: angular.IInjectorService;\n  private $compile: angular.ICompileService;\n  private $templateCache: angular.ITemplateCacheService;\n  private $httpBackend: angular.IHttpBackendService;\n  private $controller: angular.IControllerService;\n\n  private element: Element;\n  private $element: angular.IAugmentedJQuery;\n  private $componentScope: angular.IScope;\n\n  private directive: angular.IDirective;\n  private bindings: Bindings;\n\n  private controllerInstance: IControllerInstance;\n  private bindingDestination: IBindingDestination;\n\n  // We will be instantiating the controller in the `ngOnInit` hook, when the first `ngOnChanges`\n  // will have been already triggered. We store the `SimpleChanges` and \"play them back\" later.\n  private pendingChanges: SimpleChanges;\n\n  private unregisterDoCheckWatcher: Function;\n\n  /**\n   * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n   * Instead you should derive a new class from this one and call the super constructor\n   * from the base class.\n   *\n   * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\" }\n   *\n   * * The `name` parameter should be the name of the AngularJS directive.\n   * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n   *   injection into the base class constructor.\n   *\n   * Note that we must manually implement lifecycle hooks that call through to the super class.\n   * This is because, at the moment, the AoT compiler is not able to tell that the\n   * `UpgradeComponent`\n   * already implements them and so does not wire up calls to them at runtime.\n   */\n  constructor(private name: string, private elementRef: ElementRef, private injector: Injector) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$templateCache = this.$injector.get($TEMPLATE_CACHE);\n    this.$httpBackend = this.$injector.get($HTTP_BACKEND);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = this.getDirective(name);\n    this.bindings = this.initializeBindings(this.directive);\n\n    // We ask for the AngularJS scope from the Angular injector, since\n    // we will put the new component scope onto the new injector for each component\n    const $parentScope = injector.get($SCOPE);\n    // QUESTION 1: Should we create an isolated scope if the scope is only true?\n    // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n    this.$componentScope = $parentScope.$new(!!this.directive.scope);\n\n    this.initializeOutputs();\n  }\n\n  ngOnInit() {\n    // Collect contents, insert and compile template\n    const contentChildNodes = this.extractChildNodes(this.element);\n    const linkFn = this.compileTemplate(this.directive);\n\n    // Instantiate controller\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    if (controllerType) {\n      this.controllerInstance = this.buildController(\n          controllerType, this.$componentScope, this.$element, this.directive.controllerAs);\n    } else if (bindToController) {\n      throw new Error(\n          `Upgraded directive '${this.directive.name}' specifies 'bindToController' but no controller.`);\n    }\n\n    // Set up outputs\n    this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n    this.bindOutputs();\n\n    // Require other controllers\n    const directiveRequire = this.getDirectiveRequire(this.directive);\n    const requiredControllers =\n        this.resolveRequire(this.directive.name, this.$element, directiveRequire);\n\n    if (this.directive.bindToController && isMap(directiveRequire)) {\n      const requiredControllersMap = requiredControllers as{[key: string]: IControllerInstance};\n      Object.keys(requiredControllersMap).forEach(key => {\n        this.controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    // Hook: $onChanges\n    if (this.pendingChanges) {\n      this.forwardChanges(this.pendingChanges);\n      this.pendingChanges = null;\n    }\n\n    // Hook: $onInit\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    // Hook: $doCheck\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      const callDoCheck = () => this.controllerInstance.$doCheck();\n\n      this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n      callDoCheck();\n    }\n\n    // Linking\n    const link = this.directive.link;\n    const preLink = (typeof link == 'object') && (link as angular.IDirectivePrePost).pre;\n    const postLink = (typeof link == 'object') ? (link as angular.IDirectivePrePost).post : link;\n    const attrs: angular.IAttributes = NOT_SUPPORTED;\n    const transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n    if (preLink) {\n      preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    const attachChildNodes: angular.ILinkFn = (scope, cloneAttach) =>\n        cloneAttach(contentChildNodes);\n    linkFn(this.$componentScope, null, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    // Hook: $postLink\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.bindingDestination) {\n      this.pendingChanges = changes;\n    } else {\n      this.forwardChanges(changes);\n    }\n  }\n\n  ngDoCheck() {\n    const twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n    const twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n    const propertyToOutputMap = this.bindings.propertyToOutputMap;\n\n    twoWayBoundProperties.forEach((propName, idx) => {\n      const newValue = this.bindingDestination[propName];\n      const oldValue = twoWayBoundLastValues[idx];\n\n      if (!looseIdentical(newValue, oldValue)) {\n        const outputName = propertyToOutputMap[propName];\n        const eventEmitter: EventEmitter<any> = (this as any)[outputName];\n\n        eventEmitter.emit(newValue);\n        twoWayBoundLastValues[idx] = newValue;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (isFunction(this.unregisterDoCheckWatcher)) {\n      this.unregisterDoCheckWatcher();\n    }\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n    this.$componentScope.$destroy();\n  }\n\n  private getDirective(name: string): angular.IDirective {\n    const directives: angular.IDirective[] = this.$injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    if (directive.compile) this.notSupported('compile');\n    const link = directive.link;\n    // QUESTION: why not support link.post?\n    if (typeof link == 'object') {\n      if ((<angular.IDirectivePrePost>link).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n\n  private getDirectiveRequire(directive: angular.IDirective): angular.DirectiveRequireProperty {\n    const require = directive.require || (directive.controller && directive.name);\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const value = require[key];\n        const match = value.match(REQUIRE_PREFIX_RE);\n        const name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n\n  private initializeBindings(directive: angular.IDirective) {\n    const btcIsObject = typeof directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time is not supported.`);\n    }\n\n    const context = (btcIsObject) ? directive.bindToController : directive.scope;\n    const bindings = new Bindings();\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const definition = context[propName];\n        const bindingType = definition.charAt(0);\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            // We don't need to do anything special. They will be defined as inputs on the\n            // upgraded component facade and the change propagation will be handled by\n            // `ngOnChanges()`.\n            break;\n          case '=':\n            bindings.twoWayBoundProperties.push(propName);\n            bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n            bindings.propertyToOutputMap[propName] = propName + 'Change';\n            break;\n          case '&':\n            bindings.expressionBoundProperties.push(propName);\n            bindings.propertyToOutputMap[propName] = propName;\n            break;\n          default:\n            let json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n\n    return bindings;\n  }\n\n  private extractChildNodes(element: Element): Node[] {\n    const childNodes: Node[] = [];\n    let childNode: Node;\n\n    while (childNode = element.firstChild) {\n      element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    return childNodes;\n  }\n\n  private compileTemplate(directive: angular.IDirective): angular.ILinkFn {\n    if (this.directive.template !== undefined) {\n      return this.compileHtml(getOrCall(this.directive.template));\n    } else if (this.directive.templateUrl) {\n      const url = getOrCall(this.directive.templateUrl);\n      const html = this.$templateCache.get(url) as string;\n      if (html !== undefined) {\n        return this.compileHtml(html);\n      } else {\n        throw new Error('loading directive templates asynchronously is not supported');\n        // return new Promise((resolve, reject) => {\n        //   this.$httpBackend('GET', url, null, (status: number, response: string) => {\n        //     if (status == 200) {\n        //       resolve(this.compileHtml(this.$templateCache.put(url, response)));\n        //     } else {\n        //       reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n        //     }\n        //   });\n        // });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n  }\n\n  private buildController(\n      controllerType: angular.IController, $scope: angular.IScope,\n      $element: angular.IAugmentedJQuery, controllerAs: string) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance\n    // Quoted properties below so that this code can be optimized with Closure Compiler.\n    const locals = {'$scope': $scope, '$element': $element};\n    const controller = this.$controller(controllerType, locals, null, controllerAs);\n    $element.data(controllerKey(this.directive.name), controller);\n    return controller;\n  }\n\n  private resolveRequire(\n      directiveName: string, $element: angular.IAugmentedJQuery,\n      require: angular.DirectiveRequireProperty): angular.SingleOrListOrMap<IControllerInstance> {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(directiveName, $element, req));\n    } else if (typeof require === 'object') {\n      const value: {[key: string]: IControllerInstance} = {};\n\n      Object.keys(require).forEach(\n          key => value[key] = this.resolveRequire(directiveName, $element, require[key]));\n\n      return value;\n    } else if (typeof require === 'string') {\n      const match = require.match(REQUIRE_PREFIX_RE);\n      const inheritType = match[1] || match[3];\n\n      const name = require.substring(match[0].length);\n      const isOptional = !!match[2];\n      const searchParents = !!inheritType;\n      const startOnParent = inheritType === '^^';\n\n      const ctrlKey = controllerKey(name);\n\n      if (startOnParent) {\n        $element = $element.parent();\n      }\n\n      const value = searchParents ? $element.inheritedData(ctrlKey) : $element.data(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${directiveName}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized require syntax on upgraded directive '${directiveName}': ${require}`);\n    }\n  }\n\n  private initializeOutputs() {\n    // Initialize the outputs for `=` and `&` bindings\n    this.bindings.twoWayBoundProperties.concat(this.bindings.expressionBoundProperties)\n        .forEach(propName => {\n          const outputName = this.bindings.propertyToOutputMap[propName];\n          (this as any)[outputName] = new EventEmitter();\n        });\n  }\n\n  private bindOutputs() {\n    // Bind `&` bindings to the corresponding outputs\n    this.bindings.expressionBoundProperties.forEach(propName => {\n      const outputName = this.bindings.propertyToOutputMap[propName];\n      const emitter = (this as any)[outputName];\n\n      this.bindingDestination[propName] = (value: any) => emitter.emit(value);\n    });\n  }\n\n  private forwardChanges(changes: SimpleChanges) {\n    // Forward input changes to `bindingDestination`\n    Object.keys(changes).forEach(\n        propName => this.bindingDestination[propName] = changes[propName].currentValue);\n\n    if (isFunction(this.bindingDestination.$onChanges)) {\n      this.bindingDestination.$onChanges(changes);\n    }\n  }\n\n  private notSupported(feature: string) {\n    throw new Error(\n        `Upgraded directive '${this.name}' contains unsupported feature: '${feature}'.`);\n  }\n\n  private compileHtml(html: string): angular.ILinkFn {\n    this.element.innerHTML = html;\n    return this.$compile(this.element.childNodes);\n  }\n}\n\n\nfunction getOrCall<T>(property: Function | T): T {\n  return isFunction(property) ? property() : property;\n}\n\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n\n// NOTE: Only works for `typeof T !== 'object'`.\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function { $inject?: Ng1Token[]; }\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(): any;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: boolean|'element'|{[key: string]: string};\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: boolean;\n}\nexport interface IAttributes { $observe(attr: string, fn: (v: string) => void): void; }\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction {\n  // Let's hint but not force cloneAttachFn's signature\n  (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  bind?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n};\nexport interface IProvider { $get: IInjectable; }\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService { (expression: string): ICompiledExpression; }\nexport interface ICompiledExpression { assign(context: any, value: any): any; }\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n\nfunction noNg() {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\nlet angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig) =>\n                 void,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: (e: Element | string) => IAugmentedJQuery,\n  version: {major: number}, resumeBootstrap?: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = <any>{\n  bootstrap: noNg,\n  module: noNg,\n  element: noNg,\n  version: noNg,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n};\n\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = (<any>window).angular;\n  }\n} catch (e) {\n  // ignore in CJS mode.\n}\n\nexport const bootstrap = angular.bootstrap;\nexport const module = angular.module;\nexport const element = angular.element;\nexport const version = angular.version;\nexport const resumeBootstrap = angular.resumeBootstrap;\nexport const getTestability = angular.getTestability;\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n\nimport {Version} from '@angular/core';\n/**\n * @stable\n */\nexport const VERSION = new Version('4.0.0-rc.4-b7212f5');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allow an Angular service to be accessible from AngularJS.\n *\n * @howToUse\n *\n * First ensure that the service to be downgraded is provided in an {@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app {@link NgModule}\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {@example upgrade/static/ts/module.ts region=\"example-app\"}\n *\n * @description\n *\n * Takes a `token` that identifies a service provided from Angular.\n *\n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n *\n * @experimental\n */\nexport function downgradeInjectable(token: any): Function {\n  const factory = function(i: Injector) { return i.get(token); };\n  (factory as any).$inject = [INJECTOR_KEY];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {NgContentSelectorHelper} from './ng_content_selector_helper';\nimport {controllerKey, getComponentName} from './util';\n\nlet downgradeCount = 0;\n\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an Angular component to be used from AngularJS.\n *\n * @howToUse\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * In this example you can see that we must provide information about the component being\n * \"downgraded\". This is because once the AoT compiler has run, all metadata about the\n * component has been removed from the code, and so cannot be inferred.\n *\n * We must do the following:\n * * specify the Angular component class that is to be downgraded\n * * specify all inputs and outputs that the AngularJS component expects\n * * specify the selectors used in any `ng-content` elements in the component's template\n *\n * @description\n *\n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * The parameter contains information about the Component that is being downgraded:\n *\n * * `component: Type<any>`: The type of the Component that will be downgraded\n * * `inputs: string[]`: A collection of strings that specify what inputs the component accepts\n * * `outputs: string[]`: A collection of strings that specify what outputs the component emits\n * * `selectors: string[]`: A collection of strings that specify what selectors are expected on\n *   `ng-content` elements in the template to enable content projection (a.k.a. transclusion in\n *   AngularJS)\n *\n * The `inputs` and `outputs` are strings that map the names of properties to camelCased\n * attribute names. They are of the form `\"prop: attr\"`; or simply `\"propAndAttr\" where the\n * property and attribute have the same identifier.\n *\n * The `selectors` are the values of the `select` attribute of each of the `ng-content` elements\n * that appear in the downgraded component's template.\n * These selectors must be provided in the order that they appear in the template as they are\n * mapped by index to the projected nodes.\n *\n * @experimental\n */\nexport function downgradeComponent(info: /* ComponentInfo */ {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n  selectors?: string[]\n}): any /* angular.IInjectable */ {\n  const idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let idCount = 0;\n\n  const directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const parentInjector: Injector|ParentInjectorPromise =\n            required[0] || $injector.get(INJECTOR_KEY);\n        const ngModel: angular.INgModelController = required[1];\n\n        const downgradeFn = (injector: Injector) => {\n          const componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const componentFactory: ComponentFactory<any> =\n              componentFactoryResolver.resolveComponentFactory(info.component);\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const id = idPrefix + (idCount++);\n          const injectorPromise = new ParentInjectorPromise(element);\n          const facade = new DowngradeComponentAdapter(\n              id, info, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory);\n\n          const projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs();\n          facade.setupOutputs();\n          facade.registerCleanup();\n\n          injectorPromise.resolve(facade.getInjector());\n        };\n\n        if (parentInjector instanceof ParentInjectorPromise) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\n  private injector: Injector;\n  private injectorKey: string = controllerKey(INJECTOR_KEY);\n  private callbacks: ((injector: Injector) => any)[] = [];\n\n  constructor(private element: angular.IAugmentedJQuery) {\n    // Store the promise on the element.\n    element.data(this.injectorKey, this);\n  }\n\n  then(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n\n  resolve(injector: Injector) {\n    this.injector = injector;\n\n    // Store the real injector on the element.\n    this.element.data(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = null;\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, ReflectiveInjector, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {createElementCssSelector} from './compiler_helpers/createElementCssSelector';\nimport {CssSelector, SelectorMatcher} from './compiler_helpers/selector';\nimport {ComponentInfo, PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {NgContentSelectorHelper} from './ng_content_selector_helper';\nimport {getAttributesAsArray, getComponentName, hookupNgModel} from './util';\n\nconst INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\n\nexport class DowngradeComponentAdapter {\n  private inputChangeCount: number = 0;\n  private inputChanges: SimpleChanges = null;\n  private componentScope: angular.IScope;\n  private componentRef: ComponentRef<any> = null;\n  private component: any = null;\n  private changeDetector: ChangeDetectorRef = null;\n\n  constructor(\n      private id: string, private info: ComponentInfo, private element: angular.IAugmentedJQuery,\n      private attrs: angular.IAttributes, private scope: angular.IScope,\n      private ngModel: angular.INgModelController, private parentInjector: Injector,\n      private $injector: angular.IInjectorService, private $compile: angular.ICompileService,\n      private $parse: angular.IParseService, private componentFactory: ComponentFactory<any>) {\n    (this.element[0] as any).id = id;\n    this.componentScope = scope.$new();\n  }\n\n  compileContents(): Node[][] {\n    const compiledProjectableNodes: Node[][] = [];\n    const projectableNodes: Node[][] = this.groupProjectableNodes();\n    const linkFns = projectableNodes.map(nodes => this.$compile(nodes));\n\n    this.element.empty();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n\n  createComponent(projectableNodes: Node[][]) {\n    const childInjector = ReflectiveInjector.resolveAndCreate(\n        [{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n\n  setupInputs(): void {\n    const attrs = this.attrs;\n    const inputs = this.info.inputs || [];\n    for (let i = 0; i < inputs.length; i++) {\n      const input = new PropertyBinding(inputs[i]);\n      let expr: any /** TODO #9100 */ = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const observeFn = (prop => {\n          let prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            if (prevValue === INITIAL_VALUE) {\n              prevValue = currValue;\n            }\n\n            this.updateInput(prop, prevValue, currValue);\n            prevValue = currValue;\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    const prototype = this.info.component.prototype;\n    if (prototype && (<OnChanges>prototype).ngOnChanges) {\n      // Detect: OnChanges interface\n      this.inputChanges = {};\n      this.componentScope.$watch(() => this.inputChangeCount, () => {\n        const inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        (<OnChanges>this.component).ngOnChanges(inputChanges);\n      });\n    }\n    this.componentScope.$watch(() => this.changeDetector && this.changeDetector.detectChanges());\n  }\n\n  setupOutputs() {\n    const attrs = this.attrs;\n    const outputs = this.info.outputs || [];\n    for (let j = 0; j < outputs.length; j++) {\n      const output = new PropertyBinding(outputs[j]);\n      let expr: any /** TODO #9100 */ = null;\n      let assignExpr = false;\n\n      const bindonAttr =\n          output.bindonAttr ? output.bindonAttr.substring(0, output.bindonAttr.length - 6) : null;\n      const bracketParenAttr = output.bracketParenAttr ?\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]` :\n          null;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[output.parenAttr];\n      } else if (attrs.hasOwnProperty(bindonAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[bindonAttr];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty(bracketParenAttr)) {\n        expr = (attrs as any /** TODO #9100 */)[bracketParenAttr];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const getter = this.$parse(expr);\n        const setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const emitter = this.component[output.prop] as EventEmitter<any>;\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ?\n                ((setter: any) => (v: any /** TODO #9100 */) => setter(this.scope, v))(setter) :\n                ((getter: any) => (v: any /** TODO #9100 */) =>\n                     getter(this.scope, {$event: v}))(getter)\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.info.component)}'!`);\n        }\n      }\n    }\n  }\n\n  registerCleanup() {\n    this.element.bind('$destroy', () => {\n      this.componentScope.$destroy();\n      this.componentRef.destroy();\n    });\n  }\n\n  getInjector(): Injector { return this.componentRef && this.componentRef.injector; }\n\n  private updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.inputChanges) {\n      this.inputChangeCount++;\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.component[prop] = currValue;\n  }\n\n  groupProjectableNodes() {\n    const ngContentSelectorHelper =\n        this.parentInjector.get(NgContentSelectorHelper) as NgContentSelectorHelper;\n    const ngContentSelectors = ngContentSelectorHelper.getNgContentSelectors(this.info);\n\n    if (!ngContentSelectors) {\n      throw new Error('Expecting ngContentSelectors for: ' + getComponentName(this.info.component));\n    }\n\n    return this._groupNodesBySelector(ngContentSelectors, this.element.contents());\n  }\n\n  /**\n   * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n   */\n  private _groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n    const projectableNodes: Node[][] = [];\n    let matcher = new SelectorMatcher();\n    let wildcardNgContentIndex: number;\n\n    for (let i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n      projectableNodes[i] = [];\n\n      const selector = ngContentSelectors[i];\n      if (selector === '*') {\n        wildcardNgContentIndex = i;\n      } else {\n        matcher.addSelectables(CssSelector.parse(selector), i);\n      }\n    }\n\n    for (let j = 0, jj = nodes.length; j < jj; ++j) {\n      const ngContentIndices: number[] = [];\n      const node = nodes[j];\n      const selector =\n          createElementCssSelector(node.nodeName.toLowerCase(), getAttributesAsArray(node));\n\n      matcher.match(selector, (_, index) => ngContentIndices.push(index));\n      ngContentIndices.sort();\n\n      if (wildcardNgContentIndex !== undefined) {\n        ngContentIndices.push(wildcardNgContentIndex);\n      }\n\n      if (ngContentIndices.length) {\n        projectableNodes[ngContentIndices[0]].push(node);\n      }\n    }\n\n    return projectableNodes;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\nimport * as angular from './angular1';\n\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const attributes = node.attributes;\n  let asArray: [string, string][];\n  if (attributes) {\n    let attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, attributes[i].nodeValue];\n    }\n  }\n  return asArray || [];\n}\n\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return (component as any).overriddenName || component.name || component.toString().split('\\n')[0];\n}\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\n/**\n * @return Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentInfo} from './component_info';\n\n/**\n * This class gives an extension point between the static and dynamic versions\n * of ngUpgrade:\n * * In the static version (this one) we must specify them manually as part of\n *   the call to `downgradeComponent(...)`.\n * * In the dynamic version (`DynamicNgContentSelectorHelper`) we are able to\n *   ask the compiler for the selectors of a component.\n */\nexport class NgContentSelectorHelper {\n  getNgContentSelectors(info: ComponentInfo): string[] {\n    // if no selectors are passed then default to a single \"wildcard\" selector\n    return info.selectors || ['*'];\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core';\n\nexport interface ComponentInfo {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n  selectors?: string[];\n}\n\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  prop: string;\n  attr: string;\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n\n  constructor(public binding: string) { this.parseBinding(); }\n\n  private parseBinding() {\n    const parts = this.binding.split(':');\n    this.prop = parts[0].trim();\n    this.attr = (parts[1] || this.prop).trim();\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CssSelector} from './selector';\n\n/*\n * The following items are copied from the Angular Compiler to be used here\n * without the need to import the entire compiler into the build\n */\n\nconst CLASS_ATTR = 'class';\n\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const cssSelector = new CssSelector();\n  const elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let i = 0; i < attributes.length; i++) {\n    const attrName = attributes[i][0];\n    const attrNameNoNs = splitNsName(attrName)[1];\n    const attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n\nexport function splitNsName(elementName: string): [string, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +  // \"[name]\", \"[name=value]\"\n        '(\\\\))|' +                                 // \")\"\n        '(\\\\s*,\\\\s*)',                             // \",\"\n    'g');\n\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n\n  static parse(selector: string): CssSelector[] {\n    const results: CssSelector[] = [];\n    const _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let cssSelector = new CssSelector();\n    let match: string[];\n    let current = cssSelector;\n    let inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (match[6]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[7]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n\n  isElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n\n  hasElementSelector(): boolean { return !!this.element; }\n\n  setElement(element: string = null) { this.element = element; }\n\n  /** Gets a template string for an element that matches the selector. */\n  getMatchingElementTemplate(): string {\n    const tagName = this.element || 'div';\n    const classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let attrs = '';\n    for (let i = 0; i < this.attrs.length; i += 2) {\n      const attrName = this.attrs[i];\n      const attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n\n  addAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n\n  addClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n\n  toString(): string {\n    let res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let i = 0; i < this.attrs.length; i += 2) {\n        const name = this.attrs[i];\n        const value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n  static createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\n\n  private _elementMap = new Map<string, SelectorContext[]>();\n  private _elementPartialMap = new Map<string, SelectorMatcher>();\n  private _classMap = new Map<string, SelectorContext[]>();\n  private _classPartialMap = new Map<string, SelectorMatcher>();\n  private _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\n  private _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\n  private _listContexts: SelectorListContext[] = [];\n\n  addSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let listContext: SelectorListContext = null;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n\n  /**\n   * Add an object that can be found later on by calling `match`.\n   * @param cssSelector A css selector\n   * @param callbackCtxt An opaque object that will be given to the callback of the `match` function\n   */\n  private _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let matcher: SelectorMatcher = this;\n    const element = cssSelector.element;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n    const selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let i = 0; i < classNames.length; i++) {\n        const isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let i = 0; i < attrs.length; i += 2) {\n        const isTerminal = i === attrs.length - 2;\n        const name = attrs[i];\n        const value = attrs[i + 1];\n        if (isTerminal) {\n          const terminalMap = matcher._attrValueMap;\n          let terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const partialMap = matcher._attrValuePartialMap;\n          let partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n\n  private _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n\n  private _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n\n  /**\n   * Find the objects that have been added via `addSelectable`\n   * whose css selector is contained in the given css selector.\n   * @param cssSelector A css selector\n   * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n   * @return boolean true if a match was found\n  */\n  match(cssSelector: CssSelector, matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    let result = false;\n    const element = cssSelector.element;\n    const classNames = cssSelector.classNames;\n    const attrs = cssSelector.attrs;\n\n    for (let i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let i = 0; i < classNames.length; i++) {\n        const className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let i = 0; i < attrs.length; i += 2) {\n        const name = attrs[i];\n        const value = attrs[i + 1];\n\n        const terminalValuesMap = this._attrValueMap.get(name);\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const partialValuesMap = this._attrValuePartialMap.get(name);\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let selectables: SelectorContext[] = map.get(name) || [];\n    const starSelectables: SelectorContext[] = map.get('*');\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let selectable: SelectorContext;\n    let result = false;\n    for (let i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n\n  /** @internal */\n  _matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n\n  constructor(public selectors: CssSelector[]) {}\n}\n\n// Store context to pass back selector and context when a selector is matched\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n\n  constructor(\n      public selector: CssSelector, public cbContext: any,\n      public listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n\n  finalize(cssSelector: CssSelector, callback: (c: CssSelector, a: any) => void): boolean {\n    let result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TagContentType, TagDefinition} from './tags';\n\nexport class HtmlTagDefinition implements TagDefinition {\n  private closedByChildren: {[key: string]: boolean} = {};\n\n  closedByParent: boolean = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean = false;\n\n  constructor(\n      {closedByChildren, requiredParents, implicitNamespacePrefix,\n       contentType = TagContentType.PARSABLE_DATA, closedByParent = false, isVoid = false,\n       ignoreFirstLf = false}: {\n        closedByChildren?: string[],\n        closedByParent?: boolean,\n        requiredParents?: string[],\n        implicitNamespacePrefix?: string,\n        contentType?: TagContentType,\n        isVoid?: boolean,\n        ignoreFirstLf?: boolean\n      } = {}) {\n    if (closedByChildren && closedByChildren.length > 0) {\n      closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n    }\n    this.isVoid = isVoid;\n    this.closedByParent = closedByParent || isVoid;\n    if (requiredParents && requiredParents.length > 0) {\n      this.requiredParents = {};\n      // The first parent is the list is automatically when none of the listed parents are present\n      this.parentToAdd = requiredParents[0];\n      requiredParents.forEach(tagName => this.requiredParents[tagName] = true);\n    }\n    this.implicitNamespacePrefix = implicitNamespacePrefix;\n    this.contentType = contentType;\n    this.ignoreFirstLf = ignoreFirstLf;\n  }\n\n  requireExtraParent(currentParent: string): boolean {\n    if (!this.requiredParents) {\n      return false;\n    }\n\n    if (!currentParent) {\n      return true;\n    }\n\n    const lcParent = currentParent.toLowerCase();\n    const isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n    return !isParentTemplate && this.requiredParents[lcParent] != true;\n  }\n\n  isClosedByChild(name: string): boolean {\n    return this.isVoid || name.toLowerCase() in this.closedByChildren;\n  }\n}\n\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nconst TAG_DEFINITIONS: {[key: string]: HtmlTagDefinition} = {\n  'base': new HtmlTagDefinition({isVoid: true}),\n  'meta': new HtmlTagDefinition({isVoid: true}),\n  'area': new HtmlTagDefinition({isVoid: true}),\n  'embed': new HtmlTagDefinition({isVoid: true}),\n  'link': new HtmlTagDefinition({isVoid: true}),\n  'img': new HtmlTagDefinition({isVoid: true}),\n  'input': new HtmlTagDefinition({isVoid: true}),\n  'param': new HtmlTagDefinition({isVoid: true}),\n  'hr': new HtmlTagDefinition({isVoid: true}),\n  'br': new HtmlTagDefinition({isVoid: true}),\n  'source': new HtmlTagDefinition({isVoid: true}),\n  'track': new HtmlTagDefinition({isVoid: true}),\n  'wbr': new HtmlTagDefinition({isVoid: true}),\n  'p': new HtmlTagDefinition({\n    closedByChildren: [\n      'address', 'article', 'aside', 'blockquote', 'div', 'dl',      'fieldset', 'footer', 'form',\n      'h1',      'h2',      'h3',    'h4',         'h5',  'h6',      'header',   'hgroup', 'hr',\n      'main',    'nav',     'ol',    'p',          'pre', 'section', 'table',    'ul'\n    ],\n    closedByParent: true\n  }),\n  'thead': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot']}),\n  'tbody': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot'], closedByParent: true}),\n  'tfoot': new HtmlTagDefinition({closedByChildren: ['tbody'], closedByParent: true}),\n  'tr': new HtmlTagDefinition({\n    closedByChildren: ['tr'],\n    requiredParents: ['tbody', 'tfoot', 'thead'],\n    closedByParent: true\n  }),\n  'td': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'th': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'col': new HtmlTagDefinition({requiredParents: ['colgroup'], isVoid: true}),\n  'svg': new HtmlTagDefinition({implicitNamespacePrefix: 'svg'}),\n  'math': new HtmlTagDefinition({implicitNamespacePrefix: 'math'}),\n  'li': new HtmlTagDefinition({closedByChildren: ['li'], closedByParent: true}),\n  'dt': new HtmlTagDefinition({closedByChildren: ['dt', 'dd']}),\n  'dd': new HtmlTagDefinition({closedByChildren: ['dt', 'dd'], closedByParent: true}),\n  'rb': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rt': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rtc': new HtmlTagDefinition({closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true}),\n  'rp': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'optgroup': new HtmlTagDefinition({closedByChildren: ['optgroup'], closedByParent: true}),\n  'option': new HtmlTagDefinition({closedByChildren: ['option', 'optgroup'], closedByParent: true}),\n  'pre': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'listing': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'style': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'script': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'title': new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT}),\n  'textarea':\n      new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true}),\n};\n\nconst _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n\nexport function getHtmlTagDefinition(tagName: string): HtmlTagDefinition {\n  return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport enum TagContentType {\n  RAW_TEXT,\n  ESCAPABLE_RAW_TEXT,\n  PARSABLE_DATA\n}\n\n// TODO(vicb): read-only when TS supports it\nexport interface TagDefinition {\n  closedByParent: boolean;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean;\n\n  requireExtraParent(currentParent: string): boolean;\n\n  isClosedByChild(name: string): boolean;\n}\n\nexport function splitNsName(elementName: string): [string, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n\nexport function getNsPrefix(fullName: string): string {\n  return fullName === null ? null : splitNsName(fullName)[0];\n}\n\nexport function mergeNsAndName(prefix: string, localName: string): string {\n  return prefix ? `:${prefix}:${localName}` : localName;\n}\n\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\nexport const NAMED_ENTITIES: {[k: string]: string} = {\n  'Aacute': '\\u00C1',\n  'aacute': '\\u00E1',\n  'Acirc': '\\u00C2',\n  'acirc': '\\u00E2',\n  'acute': '\\u00B4',\n  'AElig': '\\u00C6',\n  'aelig': '\\u00E6',\n  'Agrave': '\\u00C0',\n  'agrave': '\\u00E0',\n  'alefsym': '\\u2135',\n  'Alpha': '\\u0391',\n  'alpha': '\\u03B1',\n  'amp': '&',\n  'and': '\\u2227',\n  'ang': '\\u2220',\n  'apos': '\\u0027',\n  'Aring': '\\u00C5',\n  'aring': '\\u00E5',\n  'asymp': '\\u2248',\n  'Atilde': '\\u00C3',\n  'atilde': '\\u00E3',\n  'Auml': '\\u00C4',\n  'auml': '\\u00E4',\n  'bdquo': '\\u201E',\n  'Beta': '\\u0392',\n  'beta': '\\u03B2',\n  'brvbar': '\\u00A6',\n  'bull': '\\u2022',\n  'cap': '\\u2229',\n  'Ccedil': '\\u00C7',\n  'ccedil': '\\u00E7',\n  'cedil': '\\u00B8',\n  'cent': '\\u00A2',\n  'Chi': '\\u03A7',\n  'chi': '\\u03C7',\n  'circ': '\\u02C6',\n  'clubs': '\\u2663',\n  'cong': '\\u2245',\n  'copy': '\\u00A9',\n  'crarr': '\\u21B5',\n  'cup': '\\u222A',\n  'curren': '\\u00A4',\n  'dagger': '\\u2020',\n  'Dagger': '\\u2021',\n  'darr': '\\u2193',\n  'dArr': '\\u21D3',\n  'deg': '\\u00B0',\n  'Delta': '\\u0394',\n  'delta': '\\u03B4',\n  'diams': '\\u2666',\n  'divide': '\\u00F7',\n  'Eacute': '\\u00C9',\n  'eacute': '\\u00E9',\n  'Ecirc': '\\u00CA',\n  'ecirc': '\\u00EA',\n  'Egrave': '\\u00C8',\n  'egrave': '\\u00E8',\n  'empty': '\\u2205',\n  'emsp': '\\u2003',\n  'ensp': '\\u2002',\n  'Epsilon': '\\u0395',\n  'epsilon': '\\u03B5',\n  'equiv': '\\u2261',\n  'Eta': '\\u0397',\n  'eta': '\\u03B7',\n  'ETH': '\\u00D0',\n  'eth': '\\u00F0',\n  'Euml': '\\u00CB',\n  'euml': '\\u00EB',\n  'euro': '\\u20AC',\n  'exist': '\\u2203',\n  'fnof': '\\u0192',\n  'forall': '\\u2200',\n  'frac12': '\\u00BD',\n  'frac14': '\\u00BC',\n  'frac34': '\\u00BE',\n  'frasl': '\\u2044',\n  'Gamma': '\\u0393',\n  'gamma': '\\u03B3',\n  'ge': '\\u2265',\n  'gt': '>',\n  'harr': '\\u2194',\n  'hArr': '\\u21D4',\n  'hearts': '\\u2665',\n  'hellip': '\\u2026',\n  'Iacute': '\\u00CD',\n  'iacute': '\\u00ED',\n  'Icirc': '\\u00CE',\n  'icirc': '\\u00EE',\n  'iexcl': '\\u00A1',\n  'Igrave': '\\u00CC',\n  'igrave': '\\u00EC',\n  'image': '\\u2111',\n  'infin': '\\u221E',\n  'int': '\\u222B',\n  'Iota': '\\u0399',\n  'iota': '\\u03B9',\n  'iquest': '\\u00BF',\n  'isin': '\\u2208',\n  'Iuml': '\\u00CF',\n  'iuml': '\\u00EF',\n  'Kappa': '\\u039A',\n  'kappa': '\\u03BA',\n  'Lambda': '\\u039B',\n  'lambda': '\\u03BB',\n  'lang': '\\u27E8',\n  'laquo': '\\u00AB',\n  'larr': '\\u2190',\n  'lArr': '\\u21D0',\n  'lceil': '\\u2308',\n  'ldquo': '\\u201C',\n  'le': '\\u2264',\n  'lfloor': '\\u230A',\n  'lowast': '\\u2217',\n  'loz': '\\u25CA',\n  'lrm': '\\u200E',\n  'lsaquo': '\\u2039',\n  'lsquo': '\\u2018',\n  'lt': '<',\n  'macr': '\\u00AF',\n  'mdash': '\\u2014',\n  'micro': '\\u00B5',\n  'middot': '\\u00B7',\n  'minus': '\\u2212',\n  'Mu': '\\u039C',\n  'mu': '\\u03BC',\n  'nabla': '\\u2207',\n  'nbsp': '\\u00A0',\n  'ndash': '\\u2013',\n  'ne': '\\u2260',\n  'ni': '\\u220B',\n  'not': '\\u00AC',\n  'notin': '\\u2209',\n  'nsub': '\\u2284',\n  'Ntilde': '\\u00D1',\n  'ntilde': '\\u00F1',\n  'Nu': '\\u039D',\n  'nu': '\\u03BD',\n  'Oacute': '\\u00D3',\n  'oacute': '\\u00F3',\n  'Ocirc': '\\u00D4',\n  'ocirc': '\\u00F4',\n  'OElig': '\\u0152',\n  'oelig': '\\u0153',\n  'Ograve': '\\u00D2',\n  'ograve': '\\u00F2',\n  'oline': '\\u203E',\n  'Omega': '\\u03A9',\n  'omega': '\\u03C9',\n  'Omicron': '\\u039F',\n  'omicron': '\\u03BF',\n  'oplus': '\\u2295',\n  'or': '\\u2228',\n  'ordf': '\\u00AA',\n  'ordm': '\\u00BA',\n  'Oslash': '\\u00D8',\n  'oslash': '\\u00F8',\n  'Otilde': '\\u00D5',\n  'otilde': '\\u00F5',\n  'otimes': '\\u2297',\n  'Ouml': '\\u00D6',\n  'ouml': '\\u00F6',\n  'para': '\\u00B6',\n  'permil': '\\u2030',\n  'perp': '\\u22A5',\n  'Phi': '\\u03A6',\n  'phi': '\\u03C6',\n  'Pi': '\\u03A0',\n  'pi': '\\u03C0',\n  'piv': '\\u03D6',\n  'plusmn': '\\u00B1',\n  'pound': '\\u00A3',\n  'prime': '\\u2032',\n  'Prime': '\\u2033',\n  'prod': '\\u220F',\n  'prop': '\\u221D',\n  'Psi': '\\u03A8',\n  'psi': '\\u03C8',\n  'quot': '\\u0022',\n  'radic': '\\u221A',\n  'rang': '\\u27E9',\n  'raquo': '\\u00BB',\n  'rarr': '\\u2192',\n  'rArr': '\\u21D2',\n  'rceil': '\\u2309',\n  'rdquo': '\\u201D',\n  'real': '\\u211C',\n  'reg': '\\u00AE',\n  'rfloor': '\\u230B',\n  'Rho': '\\u03A1',\n  'rho': '\\u03C1',\n  'rlm': '\\u200F',\n  'rsaquo': '\\u203A',\n  'rsquo': '\\u2019',\n  'sbquo': '\\u201A',\n  'Scaron': '\\u0160',\n  'scaron': '\\u0161',\n  'sdot': '\\u22C5',\n  'sect': '\\u00A7',\n  'shy': '\\u00AD',\n  'Sigma': '\\u03A3',\n  'sigma': '\\u03C3',\n  'sigmaf': '\\u03C2',\n  'sim': '\\u223C',\n  'spades': '\\u2660',\n  'sub': '\\u2282',\n  'sube': '\\u2286',\n  'sum': '\\u2211',\n  'sup': '\\u2283',\n  'sup1': '\\u00B9',\n  'sup2': '\\u00B2',\n  'sup3': '\\u00B3',\n  'supe': '\\u2287',\n  'szlig': '\\u00DF',\n  'Tau': '\\u03A4',\n  'tau': '\\u03C4',\n  'there4': '\\u2234',\n  'Theta': '\\u0398',\n  'theta': '\\u03B8',\n  'thetasym': '\\u03D1',\n  'thinsp': '\\u2009',\n  'THORN': '\\u00DE',\n  'thorn': '\\u00FE',\n  'tilde': '\\u02DC',\n  'times': '\\u00D7',\n  'trade': '\\u2122',\n  'Uacute': '\\u00DA',\n  'uacute': '\\u00FA',\n  'uarr': '\\u2191',\n  'uArr': '\\u21D1',\n  'Ucirc': '\\u00DB',\n  'ucirc': '\\u00FB',\n  'Ugrave': '\\u00D9',\n  'ugrave': '\\u00F9',\n  'uml': '\\u00A8',\n  'upsih': '\\u03D2',\n  'Upsilon': '\\u03A5',\n  'upsilon': '\\u03C5',\n  'Uuml': '\\u00DC',\n  'uuml': '\\u00FC',\n  'weierp': '\\u2118',\n  'Xi': '\\u039E',\n  'xi': '\\u03BE',\n  'Yacute': '\\u00DD',\n  'yacute': '\\u00FD',\n  'yen': '\\u00A5',\n  'yuml': '\\u00FF',\n  'Yuml': '\\u0178',\n  'Zeta': '\\u0396',\n  'zeta': '\\u03B6',\n  'zwj': '\\u200D',\n  'zwnj': '\\u200C',\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const $COMPILE = '$compile';\nexport const $CONTROLLER = '$controller';\nexport const $DELEGATE = '$delegate';\nexport const $HTTP_BACKEND = '$httpBackend';\nexport const $INJECTOR = '$injector';\nexport const $PARSE = '$parse';\nexport const $PROVIDE = '$provide';\nexport const $ROOT_SCOPE = '$rootScope';\nexport const $SCOPE = '$scope';\nexport const $TEMPLATE_CACHE = '$templateCache';\nexport const $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const $$TESTABILITY = '$$testability';\n\nexport const COMPILER_KEY = '$$angularCompiler';\nexport const GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const INJECTOR_KEY = '$$angularInjector';\nexport const NG_ZONE_KEY = '$$angularNgZone';\n\nexport const REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const REQUIRE_NG_MODEL = '?ngModel';\n\nexport const UPGRADE_MODULE_NAME = '$$UpgradeModule';\n"],"names":["NgModule","angular.element","Testability","ɵlooseIdentical","INITIAL_VALUE","module","ComponentFactoryResolver","SimpleChange","ReflectiveInjector"],"mappings":";;;;;;;;;;;;;;;;;;;AeaA,IAAA,IAAa,IAAb,QAAA,GAAA,UAAA,CAAA;AACA,IAAA,IAAa,WAAW,GAAxB,aAAA,CAAA;AACA,IAAA,IACa,SAAS,GADtB,WAAA,CAAA;AAEA,IAAA,IAAa,aAAb,GAAA,cAAA,CAAA;AACA,IAAA,IAEa,SAFb,GAAA,WAAA,CAAA;AAIA,IAAA,IAEa,MAFb,GAAA,QAAA,CAAA;AAGA,IAAA,IAEa,QAFb,GAAA,UAAA,CAAA;AAGA,IAAA,IAAa,MAAb,GAAA,QAAA,CAAA;AAEA,IAAA,IAAa,eAAb,GAAA,gBAAA,CAAA;;AD9BA,IAAA,IAAA,YAAA,GAAA,mBAAA,CAAA;;;;;;;;;;;;;;;;;AAQA,IAAA,IAIA,IAAA,cAJY,CAIZ;;ADFA,IAAA,IAAA,cAAA,CAAA,cAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA,CAAA;AAYA,IAAA,IAAE,cAAF,CAAA,cAWY,CAXZ,oBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,oBAAA,CAAA;AACA,IAAA,IAAA,cAAA,CAAA,cAAA,CAAA,eAAA,CAAA,GAAA,CAAA,CAAA,GAAA,eAAA,CAAA;AADA,IAAA,CAAA,CAAA,CAAA,cAAA,IAAA,CAAA,cAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AATA,IAAA,IAAA,iBAAA,GAAA,CAAA,YAAA;AAOA,IAAA,IAAA,SAAA,iBAAA,CAAA,EAA+B,EAA/B;AAcA,IAAA,QAAI,IAAI,EAAR,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,EAAA,EAAA,gBAAsD,GAAG,EAAzD,CAAA,gBAAA,EAAA,eAAA,GAAA,EAAA,CAAA,eAAA,EAAA,uBAAA,GAAA,EAAA,CAAA,uBAAA,EAAA,EAAA,GAAA,EAAA,CAAA,WAAA,EAAA,WAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,cAAA,CAAA,aAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,cAAA,EAAA,cAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,MAAA,EAAA,MAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,CAAA,aAAA,EAAA,aAAA,GAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAM,KAAN,GAAA,IAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,gBAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,cAAT,GAAA,KAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,YAAT,GAAA,KAAA,CAAA;AACA,IAAA,QAAI,IAAI,gBAAR,IAAA,gBAAA,CAAA,MAAA,GAAA,CAAuD,EAAvD;AACA,IAAA,YAAM,gBAAN,CAAA,OAAA,CAA+B,UAA/B,OAAA,EAAA,EAAA,OAAA,KAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,EAAA,CAAA,CAAA;;AAEA,IAAA,QAAA,IAAM,CAAN,MAAA,GAAA,MAAsB,CAAtB;AACA,IAAA,QAAA,IAAM,CAAN,cAAqB,GAArB,cAAA,IAAA,MAAA,CAAA;AACA,IAAA,QAAA,IAAA,eAAA,IAAA,eAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,IAAA,YAAQ,IAAR,CAAA,eAAA,GAAA,EAAA,CAAA;AACA,IAAA;AACA,IAAA,YAAQ,IAAR,CAAA,WAAA,GAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,eAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA,EAAA,OAAA,KAAA,CAAA,eAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AAEA,IAAA,SAAA;AACA,IAAA,QAAI,IAAI,CAAC,uBAAT,GAAA,uBAAA,CAAA;AACA,IAAA,QAAA,IAAM,CAAN,WAAkB,GAAlB,WAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,aAAA,GAAA,aAAA,CAAA;AAEA,IAAA,KAAA;AACA,IAAA,IAAA,iBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAA,aAAA,EAAA;AACA,IAAA,QAAA,IAAA,CAAA,IAAA,CAAA,eAAA,EAAA;AAEA,IAAA,YAAU,OAAV,KAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAI,IAAJ,CAAA,aAAA,EAAA;AACA,IAAA,YAAA,OAAA,IAAA,CAAA;AAEA,IAAA,SAAA;AACA,IAAA,QAAI,IAAJ,QAAgB,GAAhB,aAAA,CAAA,WAA4C,EAA5C,CAAA;AACA,IAAA,QAAA,IAAA,gBAAA,GAAA,QAAA,KAAA,UAAA,IAAA,aAAA,KAAA,aAAA,CAAA;AACA,IAAA,QAAA,OAAA,CAAA,gBAAA,IAAA,IAAA,CAAA,eAAA,CAAA,QAAA,CAAA,IAAA,IAAA,CAAA;AAAA,IAAA,KAAC,CAzDD;AA2DA,IAAA,IAAA,iBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,UAAA,IAAA,EAAA;;AAEA,IAAA,KAAA,CAAA;AACA,IAAA,IAAE,OAAF,iBAAA,CAAA;AACA,IAAA,CAAA,EAAA,CAAE,CAAF;AACA,IAAA;AACA,IAAA;AACA,IAAA,IAAE,eAAF,GAAA;AACA,IAAA,IAAE,MAAF,EAAA,IAAA,iBAA+B,CAA/B,EAAA,MAAA,EAAA,IAAA,EAA8C,CAA9C;AACA,IAAA,IAAE,MAAF,EAAA,IAAA,iBAAA,CAAgC,EAAhC,MAAA,EAAA,IAAA,EAAA,CAA+C;AAC/C,IAAA,IAAE,MAAF,EAAA,IAAA,iBAAA,CAAgC,EAAhC,MAAA,EAAA,IAAA,EAAA,CAA+C;AAC/C,IAAA,IAAE,OAAF,EAAA,IAAA,iBAA+B,CAA/B,EAAA,MAAA,EAAA,IAA6C,EAA7C,CAAA;AACA,IAAA,IAAE,MAAM,EAAR,IAAA,iBAAA,CAA+B,EAA/B,MAAuC,EAAvC,IAA4C,EAA5C,CAAA;AACA,IAAA,IAAE,KAAF,EAAA,IAAA,iBAAA,CAAA,EAAiC,MAAjC,EAAA,IAAA,EAAA,CAA+C;AAC/C,IAAA,IAAE,OAAO,EAAE,IAAI,iBAAiB,CAAC,EAAC,MAAM,EAAE,IAAI,EAAC,CAAC;AAChD,IAAA,IAAE,OAAO,EAAT,IAAA,iBAAA,CAAgC,EAAhC,MAAwC,EAAxC,IAA6C,EAA7C,CAAA;AACA,IAAA,IAAE,IAAF,EAAA,IAAA,iBAA6B,CAA7B,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAA,IAAI,EAAJ,IAAA,iBAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAA,QAAM,EAAN,IAAA,iBAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAA,OAAA,EAAA,IAAA,iBAAyC,CAAzC,EAAA,MAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAA,KAAA,EAAA,IAAA,iBAAA,CAAqC,EAArC,MAAA,EAAwD,IAAxD,EAAA,CAAA;AACA,IAAA,IAAA,GAAA,EAAK,IAAL,iBAAA,CAAA;AACA,IAAA,QAAI,gBAAgB,EAApB;AACA,IAAA,YAAA,SAAA,EAAA,SAAA,EAAA,OAAA,EAAA,YAAA,EAAA,KAAA,EAAA,IAAA,EAAA,UAAA,EAAA,QAAA,EAAA,MAAA;AACA,IAAA,YAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAgC,EAAhC,IAAA,EAAA,IAAA,EAAA,QAAqD,EAArD,QAAA,EAAA,IAAqE;AACrE,IAAA,YAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA,EAAA,SAAA,EAAqD,OAAO,EAAE,IAA9D;AACA,IAAA,SAAA;AACA,IAAA,QAAM,cAAN,EAAA,IAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,OAAA,EAAA,IAAA,iBAAA,CAA+B,EAA/B,gBAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,EAAA,CAAA;AACA,IAAA,IAAA,OAAA,EAAA,IAAA,iBAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,OAAA,EAAA,OAAA,CAAA,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAA,OAAA,EAAA,IAAA,iBAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,OAAA,CAAA,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,IAAI,EAAE,IAAI,iBAAiB,CAAC;AAC9B,IAAA,QAAM,gBAAN,EAAA,CAAA,IAA6B,CAAC;AAC9B,IAAA,QAAA,eAAA,EAAA,CAAA,OAA+B,EAAC,OAAhC,EAAA,OAAA,CAAiD;AACjD,IAAA,QAAA,cAAA,EAAA,IAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAE,IAAI,EAAE,IAAI,iBAAiB,CAAC,EAAC,gBAAgB,EAAE,CAAC,IAAI,EAAtD,IAAA,CAAA,EAAA,cAA6E,EAAC,IAA9E,EAAA,CAAA;AACA,IAAA,IAAE,IAAI,EAAE,IAAI,iBAAiB,CAAC,EAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,EAAC,cAA9D,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,KAAF,EAAA,IAAA,iBAA8B,CAA9B,EAAA,eAA+C,EAAE,CAAC,UAAU,CAAC,EAAE,MAA/D,EAAA,IAAA,EAA6E,CAA7E;AACA,IAAA,IAAE,KAAF,EAAA,IAAA,iBAA8B,CAA9B,EAAA,uBAAA,EAAA,KAA8D,EAA9D,CAAA;AACA,IAAA,IAAE,MAAM,EAAR,IAAA,iBAAA,CAA+B,EAA/B,uBAAwD,EAAxD,MAAA,EAAA,CAAmE;AACnE,IAAA,IAAE,IAAF,EAAA,IAAA,iBAAA,CAA8B,EAA9B,gBAAA,EAAA,CAAkD,IAAlD,CAAuD,EAAE,cAAc,EAAvE,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,IAAI,EAAE,IAAI,iBAAiB,CAAC,EAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE,IAAI,CAA5D,EAAA,CAAA;AACA,IAAA,IAAE,IAAF,EAAA,IAAY,iBAAZ,CAAA,EAAA,gBAAA,EAAA,CAAA,IAAA,EAAwD,IAAxD,CAAA,EAAA,cAAA,EAAA,IAAmF,EAAE,CAArF;AACA,IAAA,IAAE,IAAF,EAAA,IAAY,iBAAZ,CAAA,EAAA,gBAAA,EAAA,CAAA,IAAsD,EAAtD,IAAA,EAA8D,KAA9D,EAAA,IAAA,CAA0E,EAA1E,cAAA,EAAA,IAAA,EAAA,CAAkG;AAClG,IAAA,IAAE,IAAF,EAAA,IAAA,iBAAA,CAA8B,EAA9B,gBAA+C,EAA/C,CAAA,IAAqD,EAArD,IAAA,EAAA,KAAA,EAAA,IAAA,CAAA,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,KAAF,EAAA,IAAa,iBAAb,CAAA,EAAA,gBAAA,EAAA,CAAmD,IAAI,EAAC,KAAxD,EAAA,IAAA,CAAA,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,IAAF,EAAA,IAAA,iBAAA,CAAA,EAAgC,gBAAe,EAA/C,CAAA,IAAA,EAAA,IAAA,EAA8D,KAA9D,EAAA,IAAwE,CAAxE,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,UAAU,EAAZ,IAAA,iBAAA,CAAmC,EAAnC,gBAAA,EAAA,CAAA,UAAA,CAAA,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,QAAF,EAAA,IAAA,iBAAiC,CAAjC,EAAA,gBAAA,EAAA,CAAA,QAA8D,EAA9D,UAAA,CAAA,EAAA,cAAA,EAAA,IAAA,EAAA,CAAA;AACA,IAAA,IAAE,KAAF,EAAA,IAAA,iBAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA;AAEA,IAAA,IAAA,SAAA,EAAA,IAAA,iBAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA;AAEA,IAAA,IAAM,OAAN,EAAA,IAAA,iBAAoC,CAApC,EAAA,WAAA,EAAA,cAAA,CAAA,QAAA,EAAA,CAAA;AAEA,IAAA,IAAA,QAAA,EAAA,IAAA,iBAAA,CAAA,EAAA,WAAA,EAAA,cAAA,CAAA,QAAA,EAAA,CAAA;AACA,IAAA,IAAE,OAAO,EAAT,IAAA,iBAAgC,CAAC,EAAjC,WAA8C,EAA9C,cAAA,CAAA,kBAAA,EAAA,CAAA;AACA,IAAA,IAAA,UAAA,EAAA,IAAA,iBAAA,CAAA,EAAA,WAAA,EAAA,cAAA,CAAA,kBAAA,EAAA,aAAA,EAAA,IAAA,EAAA,CAAA;;ADtHA,IAAA,IAAM,uBAAuB,GAA7B,IACI,iBADJ,EAAA,CAAA;AAEA,IAAA,SAAA,oBAAA,CAAA,OAAA,EAAA;AACA,IAAA,IAAQ,OAAR,eAAA,CAAA,OAAA,CAAA,WAAA,EAAA,CAAA,IAAA,uBAAA,CAAA;;AAGA,IAAA,IAAQ,gBAAR,GAAA,IAAA,MAAA,CAAA,cAAA;AACA,IAAA,IAAQ,YAAR;AACA,IAAA,IAAQ,mBAAR;;;;;;AAOA,IAAA;;;;AAGA,IAAA;AACA,IAAA,IAAA,WAAA,GAAA,CAAA,YAAA;AAgGA,IAAA,IAAA,SAAA,WAAA,GAAA;AA9FA,IAAA,QAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA;AACA,IAAA,QAAI,IAAM,CAAV,UAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAI,IAAM,CAAV,KAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAM,CAAN,YAAA,GAAA,EAAA,CAAA;AACA,IAAA,KAAA;AACA,IAAA,IAAA,WAAA,CAAQ,KAAR,GAAA,UAAA,QAAA,EAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAM,UAAN,GAAA,UAAA,GAAA,EAAA,MAAA,EAAA;AACA,IAAA,YAAA,IAAA,MAAA,CAAA,YAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,OAAA,IAAA,MAAA,CAAA,UAAA,CAAA,MAAA,IAAA,CAAA;AACA,IAAA,gBAAA,MAAA,CAAmB,KAAnB,CAAA,MAAA,IAAA,CAAA,EAAA;AACA,IAAA,gBAAA,MAAA,CAAA,OAAA,GAAA,GAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAQ,GAAR,CAAA,IAAgB,CAAhB,MAAA,CAAA,CAAA;AACA,IAAA,SAAA,CAAA;AACA,IAAA,QAAI,IAAJ,WAAmB,GAAnB,IAAA,WAAA,EAAA,CAAwC;AACxC,IAAA,QAAA,IAAM,KAAN,CAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAA,WAAA,CAAA;AACA,IAAA,QAAA,IAAA,KAAA,GAAU,KAAV,CAAgB;AAChB,IAAA,QAAA,gBAAA,CAAA,SAAA,GAAA,CAAA,CAAA;AACA,IAAA,QAAA,OAAA,KAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA;AACA,IAAA,YAAA,IAAQ,KAAR,CAAA,CAAe,CAAf,EAAkB;AAClB,IAAA,gBAAQ,IAAR,KAAA,EAAmB;AACnB,IAAA,oBAAA,MAAA,IAAA,KAAA,CAAA,2CAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,gBAAQ,KAAR,GAAgB,IAAhB,CAAA;AACA,IAAA,gBAAA,OAAA,GAAA,IAAA,WAAA,EAAA,CAAA;AACA,IAAA,gBAAU,WAAV,CAAA,YAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,IAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,IAAA,gBAAU,OAAO,CAAC,UAAlB,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,IAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,IAAA,gBAAU,OAAO,CAAC,YAAlB,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,IAAQ,KAAR,CAAA,CAAe,CAAf,EAAkB;AAClB,IAAA,gBAAA,OAAA,CAAA,YAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,IAAQ,KAAR,CAAA,CAAA,CAAA,EAAA;AACA,IAAA,gBAAA,KAAA,GAAA,KAAA,CAAoB;AACpB,IAAA,gBAAA,OAAA,GAAA,WAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,IAAQ,KAAR,CAAA,CAAA,CAAA,EAAA;AACA,IAAA,gBAAA,IAAA,KAAA,EAAA;AACA,IAAA,oBAAA,MAAA,IAAA,KAAA,CAAA,8CAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,gBAAA,UAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAA;AACA,IAAA,gBAAA,WAAA,GAAA,OAAA,GAAA,IAAA,WAAA,EAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,UAAA,CAAA,OAAA,EAAA,WAAA,CAAA,CAAqC;AACrC,IAAA,QAAA,OAAA,OAAA,CAAA;AAEA,IAAA,KAAA,CAAA;AAEA,IAAA,IAAE,WAAF,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AAAA,IAAA,QAAa,OAAb,IAAA,CAAA,kBAAA,EAAA,IAAA,IAAmC,CAAnC,UAAA,CAAA,MAAA,IAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,MAAA,IAAA,CAAA;AAAA,IAAA,YAA2C,IAA3C,CAAA,YAAA,CAA6D,MAA7D,KAAA,CAAA,CAAA;AAAA,IAAA,KAAgE,CAAhE;;AAGA,IAAA,IAAE,WAAF,CAAA,SAAA,CAAA,UAAA,GAAA,UAAA,OAAA,EAAA;AACA,IAAA,QAAI,IAAM,OAAO,KAAjB,KAAA,CAAA,EAAA;AAAA,IAAA,YAAgC,OAAhC,GAA0C,IAA1C,CAAA;AAAA,IAAA,SAAA;AACA,IAAA,QAAI,IAAM,CAAV,OAAA,GAAA,OAAA,CAAA;AAEA,IAAA,KAAA,CAAA;AACA,IAAA;AACA,IAAA,IAAA,WAAA,CAAY,SAAZ,CAAA,0BAAA,GAAA,YAAA;AACA,IAAA,QAAA,IAAM,OAAN,GAAA,IAAA,CAAA,OAAA,IAAkC,KAAK,CAAC;AACxC,IAAA,QAAA,IAAM,SAAS,GAAf,IAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAA,KAAA,GAAA,EAAA,CAAA;AAEA,IAAA,QAAI,KAAJ,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAyC,EAAzC,CAAA,IAAA,CAAA,EAAA;AACA,IAAA,YAAkD,IAAlD,QAAA,GAAA,IAAA,CAAA,KAAyE,CAAzE,CAAA,CAA4E,CAA5E;AACA,IAAA,YAAA,IAAA,SAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,KAAA,EAAA,GAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AAEA,IAAA,YAAA,KAAA,IAAA,GAAA,GAAA,QAAA,GAAc,SAAd,CAAA;AAAA,IAAA,SAAA;AACA,IAAA,QAAI,OAAJ,oBAA+B,CAA/B,OAAA,CAAwC,CAAC,MAAzC,GAAA,GAAA,GAAA,OAAA,GAAA,SAAA,GAAA,KAAA,GAAA,IAAA;AACA,IAAA,YAAA,GAAA,GAAA,OAAA,GAAA,SAAA,GAAA,KAAA,GAAA,KAAA,GAAA,OAAA,GAAA,GAAA,CAAA;AAEA,IAAA,KAAA,CAAA;AAEA,IAAA,IAAE,WAAF,CAAA,SAAA,CAAA,YAAA,GAAA,UAAA,IAAA,EAAA,KAAA,EAAA;AACA,IAAA,QAAI,IAAI,KAAR,KAA0B,KAA1B,CAAA,EAAkC;AAAlC,IAAA,YAAA,KAAyC,GAAzC,EAAA,CAAA;AAAA,IAAA,SAAA;AACA,IAAA,QAAI,IAAI,CAAR,KAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,IAAA,KAAA,CAAA,WAAA,EAAA,IAAA,EAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,WAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAA,IAAA,EAAA,EAAA,IAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AACA,IAAA,IAAA,WAAA,CAAY,SAAZ,CAAA,QAAA,GAAA,YAAA;AACA,IAAA,QAAA,IAAM,GAAN,GAAA,IAAgB,CAAhB,OAAA,IAAA,EAA8B,CAAC;AAC/B,IAAA,QAAA,IAAA,IAAQ,CAAR,UAAA,EAAqB;AACrB,IAAA,YAAA,IAAQ,CAAR,UAAA,CAAsB,OAAtB,CAAA,UAAwC,KAAxC,EAAA,EAAA,OAAA,GAAA,IAAA,GAAA,GAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,IAAA,CAAA,KAAA,EAAA;AACA,IAAA,YAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,IAAA,gBAAA,IAAA,MAAsB,GAAtB,IAA6B,CAAC,KAA9B,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,IAAA,gBAAA,GAAA,IAAA,GAAA,GAAA,MAAA,GAAA,CAAA,KAAA,GAAA,GAAA,GAAA,KAAA,GAAA,EAAA,CAAA,GAAA,GAAA,CAAA;AACA,IAAA,aAAA;AApGA,IAAA,SAAA;AAsGA,IAAA,QAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA,UAAA,WAAA,EAAA,EAAA,OAAA,GAAA,IAAA,OAAA,GAAA,WAAA,GAAA,GAAA,CAAA,EAAA,CAAA,CAAA;;;;AAIA,IAAA,CAAA,EAAA,CAAA,CAAA;AAAA,IAAA;;;AASA,IAAA;AACA,IAAA,IAAA,eAAA,GAAA,CAAA,YAAA;AACA,IAAA,IAAA,SAAA,eAAA,GAAA;AACA,IAAA,QAAU,IAAV,CAAA,WAAA,GAAA,IAAA,GAAA,EAAiC,CAAjC;AACA,IAAA,QAAU,IAAV,CAAA,kBAAmD,GAAnD,IAAA,GAAA,EAAA,CAAA;AA8LA,IAAA,QAAA,IAAA,CAAA,SAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AA1MA,IAAA,QAAA,IAAA,CAAA,gBAAA,GAAA,IAAyB,GAAvB,EAAF,CAAA;AACA,IAAA,QAAI,IAAM,CAAV,aAAA,GAA2B,IAA3B,GAAA,EAAA,CAAA;AACA,IAAA,QAAI,IAAJ,CAAA,oBAA6B,GAA7B,IAAA,GAAA,EAAA,CAA0C;AAC1C,IAAA,QAAI,IAAJ,CAAA,aAAsB,GAAtB,EAAA,CAAA;AACA,IAAA,KAAG;AAUH,IAAA,IAAE,eAAF,CAAA,gBAAA,GAAA,UAAA,YAAA,EAAA;AACA,IAAA,QAAI,IAAI,UAAR,GAAA,IAAA,eAAA,EAAA,CAAA;AACA,IAAA,QAAI,UAAJ,CAAA,cAAA,CAA8B,YAA9B,EAAA,IAAA,CAAA,CAAA;AACA,IAAA,QAAA,OAAA,UAAA,CAAoB;AACpB,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAA,YAAA,EAAA,YAAA,EAAA;AACA,IAAA,QAAI,IAAJ,WAAA,GAAA,IAAA,CAAA;AACA,IAAA,QAAA,IAAM,YAAN,CAAA,MAAyB,GAAzB,CAAA,EAAA;AACA,IAAA,YAAA,WAAA,GAAA,IAAA,mBAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAA,CAAA,aAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA;;;;;;AAOA,IAAA;;;;AAKA,IAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAA2B,CAA3B,cAA0C,GAA1C,UAAA,WAAA,EAAoE,YAApE,EAAkF,WAAlF,EAAA;AAEA,IAAA,QAAI,IAAI,OAAO,GAAf,IAAA,CAAA;AACA,IAAA,QAAA,IAAM,OAAN,GAAA,WAAA,CAA8B,OAAO,CAArC;AACA,IAAA,QAAA,IAAM,UAAN,GAAA,WAAA,CAAA,UAAA,CAAA;AACA,IAAA,QAAA,IAAA,KAAA,GAAY,WAAZ,CAAA,KAAA,CAAA;AACA,IAAA,QAAA,IAAA,UAAA,GAAA,IAAA,eAAA,CAAA,WAAA,EAAA,YAAA,EAAA,WAAA,CAAA,CAAA;AAAA,IAAA,QAAA,IAAA,OAAA,EAAA;AACA,IAAA,YAAA,IAAQ,UAAU,GAAlB,KAAA,CAAA,MAAA,KAAA,CAAA,IAA2C,UAA3C,CAAA,MAAA,KAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAA,UAAA,EAAA;AACA,IAAA,gBAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,CAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,iBAAW;AACX,IAAA,gBAAQ,OAAR,GAAA,IAAwB,CAAxB,WAAA,CAAA,OAA4C,CAAC,kBAA7C,EAAiE,OAAO,CAAxE,CAAA;AACA,IAAA,aAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,UAAA,EAAc;AACd,IAAA,YAAA,KAAS,IAAT,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AAAA,IAAA,gBAAA,IAAA,UAAA,GAAA,KAAA,CAAA,MAAA,KAAA,CAAA,IAAA,CAAA,KAAA,UAAA,CAAA,MAAA,GAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAU,SAAV,GAAA,UAAA,CAAA,CAAA,CAAA,CAAoC;AACpC,IAAA,gBAAA,IAAA,UAAA,EAAA;AACA,IAAA,oBAAA,IAAA,CAAA,YAAA,CAAA,OAAA,CAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AAEA,IAAA,qBAAA;AACA,IAAA,oBAAA,OAAA,GAAA,IAAA,CAAA,WAAwC,CAAC,OAAO,CAAhD,gBAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,aAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,KAAA,EAAA;AACA,IAAA,YAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,CAA8B,MAA9B,EAAsC,CAAtC,IAAA,CAAA,EAAA;AACA,IAAA,gBAAA,IAAU,UAAV,GAAA,CAAA,KAAA,KAAkC,CAAlC,MAAA,GAAA,CAA6C,CAAC;AAC9C,IAAA,gBAAA,IAAU,MAAV,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,KAAA,GAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAA6B;AAC7B,IAAA,gBAAA,IAAA,UAAA,EAAA;AACA,IAAA,oBAAA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,oBAAU,IAAI,iBAAd,GAAA,WAA6C,CAA7C,GAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,oBAAA,IAAA,CAAA,iBAAA,EAAA;AAAA,IAAA,wBAAA,iBAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AACA,IAAA,wBAAgB,WAAhB,CAAA,GAAA,CAAA,MAAA,EAAA,iBAAyD,CAAC,CAA1D;AACA,IAAA,qBAAA;AACA,IAAA,oBAAU,IAAI,CAAC,YAAf,CAAA,iBAAA,EAAA,KAAA,EAAA,UAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,qBAAA;AACA,IAAA,oBAAA,IAAA,UAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;AACA,IAAA,oBAAU,IAAV,gBAAA,GAAA,UAAA,CAAA,GAAA,CAAA,MAAA,CAAuD,CAAvD;AACA,IAAA,oBAAA,IAAA,CAAA,gBAAA,EAAA;AACA,IAAA,wBAAA,gBAAA,GAAA,IAAA,GAAA,EAAA,CAAA;AACA,IAAA,wBAAA,UAAA,CAAA,GAAA,CAAA,MAAA,EAAA,gBAAA,CAAA,CAAA;AACA,IAAA,qBAAA;AAEA,IAAA,oBAAA,OAAA,GAAA,IAAA,CAAA,WAAA,CAAA,gBAAA,EAAA,KAAA,CAAA,CAAA;AAEA,IAAA,iBAAA;AACA,IAAA,aAAS;AACT,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAA,GAAA,EAAA,IAAA,EAAA,UAAA,EAAA;AACA,IAAA,QAAI,IAAJ,YAAA,GAAA,GAAA,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,YAAA,EAAA;AAEA,IAAA,YAAA,YAAA,GAAA,EAAA,CAAA;AACA,IAAA,YAAQ,GAAR,CAAA,GAAe,CAAf,IAAA,EAAsB,YAAtB,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,YAAA,CAAA,IAAA,CAAoB,UAApB,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,GAAA,EAAA,IAAA,EAAA;AACA,IAAA,QAAI,IAAJ,OAAA,GAAkB,GAAlB,CAAA,GAAA,CAAA,IAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,OAAA,EAAA;;;;;;;;;;;;AAaA,IAAA;AAEA,IAAA,IAAA,eAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAA,WAAA,EAAA,eAAA,EAAA;AACA,IAAA,QAAA,IAAM,MAAN,GAAA,KAAA,CAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAA,WAAA,CAAA,OAAA,CAAA;AAEA,IAAA,QAAI,IAAJ,UAAkB,GAAlB,WAAgC,CAAC,UAAjC,CAAA;AACA,IAAA,QAAI,IAAJ,KAAa,GAAb,WAAA,CAAA,KAAA,CAAA;AACA,IAAA,QAAA,KAAA,IAAA,CAAc,GAAd,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,aAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AAEA,IAAA,YAAQ,IAAR,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,cAAA,GAAA,KAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,MAAA,GAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAoC,WAApC,EAAA,OAAA,EAAA,WAAA,EAAA,eAAA,CAAA,IAAA,MAAA,CAAA;AACA,IAAA,QAAA,MAAA,GAAA,IAAA,CAAc,aAAd,CAAA,IAAA,CAAA,kBAAA,EAAA,OAAA,EAAA,WAAA,EAAA,eAAA,CAAA;AACA,IAAA,YAAA,MAAA,CAAA;AACA,IAAA,QAAA,IAAA,UAAc,EAAd;AACA,IAAA,YAAA,KAAA,IAAA,CAAA,GAAiB,CAAjB,EAAA,CAAA,GAAA,UAAA,CAAmC,MAAnC,EAAA,CAAA,EAAA,EAAA;AACA,IAAA,gBAAA,IAAA,SAAA,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,gBAAA,MAAA;AACA,IAAA,oBAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,eAAA,CAAA,IAAA,MAAA,CAAA;AAEA,IAAA,gBAAA,MAAA;AACA,IAAA,oBAAA,IAAA,CAAmB,aAAa,CAAhC,IAAA,CAAsC,gBAAtC,EAAA,SAAA,EAAA,WAAA,EAAA,eAAA,CAAA;AACA,IAAA,wBAAA,MAAA,CAAA;AACA,IAAA,aAAA;AAEA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,KAAA,EAAA;AACA,IAAA,YAAA,KAAA,IAAA,CAAA,GAAA,CAAgB,EAAhB,CAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA;AACA,IAAA,gBAAA,IAAA,MAAA,GAAmB,KAAnB,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,KAAA,GAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;AACA,IAAA,gBAAQ,IAAR,iBAAA,GAAA,IAAA,CAAA,aAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAY,KAAK,EAAjB;AAEA,IAAA,oBAAc,MAAd;AACA,IAAA,wBAAA,IAAA,CAAA,cAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,WAAA,EAAA,eAAA,CAAA,IAAA,MAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,gBAAA,MAAA;AACA,IAAA,oBAAA,IAAA,CAAA,cAAA,CAAA,iBAAA,EAAA,KAAA,EAAA,WAAA,EAAA,eAAA,CAAA,IAAA,MAAA,CAAA;AACA,IAAA,gBAAA,IAAY,gBAAZ,GAA+B,IAA/B,CAAA,oBAAwD,CAAxD,GAAA,CAAA,MAAmE,CAAnE,CAAqE;AACrE,IAAA,gBAAA,IAAA,KAAA,EAAA;AACA,IAAA,oBAAA,MAAA,GAAA,IAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,WAAA,EAAA,eAAA,CAAA,IAAA,MAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,gBAAA,MAAA;;AAGA,IAAA,aAAA;AAGA,IAAA,SAAA;AACA,IAAA,QAAA,OAAA,MAAA,CAAA;AACA,IAAA,KAAA,CAAA;AAEA,IAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAA,CAA+C,cAA/C,GAAA,UAAA,GAAA,EAAA,IAAA,EAAA,WAAA,EAAA,eAAA,EAAA;AACA,IAAA,QAAI,IAAI,CAAR,GAAA,IAAA,OAAuB,IAAvB,KAAA,QAAA,EAAA;AACA,IAAA,YAAM,OAAN,KAAA,CAAA;AACA,IAAA,SAAK;AACL,IAAA,QAAI,IAAI,WAAW,GAAnB,GAAA,CAA0B,GAA1B,CAAA,IAAkC,CAAlC,IAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAM,eAAN,GAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,eAAA,EAAA;AACA,IAAA,YAAQ,WAA4B,GAApC,WAAA,CAAA,MAAA,CAAA,eAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAI,IAAJ,WAAA,CAAoB,MAApB,KAAA,CAAA,EAAA;AACA,IAAA,YAAM,OAAN,KAAA,CAAmB;AACnB,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,UAAA,CAAA;AACA,IAAA,QAAI,IAAJ,MAAA,GAAiB,KAAjB,CAAA;AACA,IAAA,QAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;;AAGA,IAAA,YAAA,MAAA,GAAA,UAAA,CAAA,QAAA,CAAA,WAAA,EAAA,eAAA,CAAA,IAAA,MAEM,CAFN;AAGA,IAAA,SAAA;AACA,IAAA,QAAA,OAAA,MAAA,CAAA;AACA,IAAA,KAAA,CAAA;AAEA,IAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAyB,CAAzB,aAAA,GAAA,UAAA,GAAA,EAAA,IAAA,EAAA,WAAA,EAAA,eAAA,EAAA;AACA,IAAA,QAAA,IAAM,CAAN,GAAA,IAAA,OAAA,IAAA,KAAA,QAAA,EAAA;AACA,IAAA,YAAA,OAAA,KAAA,CAAA;;;;AAIA,IAAA,YAAA,OAAA,KAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA;AA3MA,IAAA;AA8MA,IAAA;AAGA,IAAA,QAAA,OAAA,cAAA,CAAA,KAAA,CAAA,WAAA,EAAA,eAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAAA;AAFA,IAAA,IAAA,OAAA,eAAA,CAAgB;AAEhB,IAAA,CAAA,EAAA,CAAA,CAAiD;AACjD,IAAA,IAAA,mBAAA,GAAA,CAAA,YAAA;AAAA,IAAA,IAAA,SAAA,mBAAA,CAJA,SAAA,EAIA;AAEA,IAAA,QAAA,IAAA,CAAA,SAAA,GAAA,SAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,cAAA,GAAA,KAAA,CAAA;AAGA,IAAA,KAAA;AACA,IAAA,IAAA,OAAA,mBAAA,CAAA;AAAA,IAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA;AACA,IAAA,IAAA,eAAA,GAAA,CAAA,YAAA;AACA,IAAA,IAAA,SAAA,eAAA,CAAA,QAAA,EAAA,SAAA,EAAA,WAAA,EAAA;AAEA,IAAA,QAAA,IAAA,CAAA,QAAA,GAAA,QAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAR,SAAA,GAAqB,SAArB,CAAA;AACA,IAAA,QAAI,IAAI,CAAR,WAAA,GAAA,WAAA,CAAmC;AACnC,IAAA,QAAA,IAAM,CAAN,YAAA,GAAA,QAAA,CAAA,YAAA,CAAA;AACA,IAAA,KAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAA,WAAA,EAAA,QAAA,EAAA;AACA,IAAA,QAAI,IAAI,MAAM,GAAd,IAAA,CAAA;AACA,IAAA,QAAA,IAAM,IAAI,CAAV,YAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,CAAA,IAAA,CAAA,WAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,cAAA,CAAA,EAAA;AACA,IAAA,YAAA,IAAQ,UAAR,GAAA,eAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,YAAA,MAAA,GAAA,CAAA,UAAA,CAAA,KAAA,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,MAAA,IAAA,QAAA,IAAA,CAAA,CAAA,IAAA,CAAA,WAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,cAAA,CAAA,EAAA;AACA,IAAA,YAAA,IAAA,IAAA,CAAiB,WAAjB,EAAA;AACA,IAAA,gBAAA,IAAA,CAAA,WAAA,CAAA,cAAA,GAAA,IAAA,CAAA;AACA,IAAA,aAAA;AAvBA,IAAA,YAAA,QAAA,CAAA,IAAA,CAAA,QAAA,EAAA,IAAA,CAAA,SAAA,CAAA,CAAA;;AD9UA,IAAA,QAAA,OAAA,MAAA,CAAA;;;;AAOA,IAAA;;;AAKA,IAAA;AAEA,IAAA,IAAE,UAAU,GAAG,OAAO,CAAtB;AACA,IAAA,SAAA,wBAAA,CAAgC,WAAhC,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,IAAI,WAAJ,GAAA,IAAA,WAAA,EAAqC,CAArC;AACA,IAAA,IAAA,IAAI,UAAJ,GAAmB,WAAnB,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,IAAA,IAAA,WAAA,CAAA,UAAA,CAAA,UAAA,CAAA,CAAA;AACA,IAAA,IAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAgB,CAAC,GAAjB,UAA8B,CAA9B,MAAA,EAAA,CAAA,EAAA,EAA4C;AAC5C,IAAA,QAAA,IAAM,QAAN,GAAmB,UAAnB,CAAA,CAAA,CAAA,CAAA,CAAkC,CAAC,CAAnC;AACA,IAAA,QAAA,IAAM,YAAN,GAAqB,WAAC,CAAtB,QAA+B,CAA/B,CAAA,CAAA,CAAmC,CAAnC;AACA,IAAA,QAAA,IAAA,SAAA,GAAA,UAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,QAAA,WAAA,CAAA,YAAA,CAAA,YAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,QAAA,CAAA,WAAA,EAAA,IAAA,UAAA,EAAA;AACA,IAAA,YAAA,IAAA,OAAA,GAAA,YAAA,CAAA,SAAA,CAAA,CAAA;AAEA,IAAA,YAAA,OAAA,CAAA,OAAA,CAAA,UAAA,SAAA,EAAA,EAAA,OAAA,WAAA,CAAA,YAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,KAAA;AACA,IAAA,IAAA,OAAA,WAAA,CAAA;AAEA,IAAA,CAAA;AAEA,IAAA,SAAA,WAAA,CAAA,WAAA,EAAA;AACA,IAAA,IAAA,IAAI,WAAJ,CAAA,CAAA,CAAA,IAAA,GAAA,EAAA;AACA,IAAA,QAAA,OAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;AAEA,IAAA,KAAA;AACA,IAAA,IAAA,IAAA,UAAA,GAAA,WAAA,CAAA,OAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAEA,IAAA,IAAA,IAAA,UAAA,IAA6B,CAA7B,CAAA,EAAA;AACA,IAAA,QAAA,MAAA,IAAA,KAAA,CAAA,uBAA6C,GAA7C,WAAA,GAAA,kCAAA,CAAA,CAAA;AACA,IAAA,KAAA;;ADtDA,IAAA,CAAA;;;;;;;;;;;;;;;;AAiCA,IAAA;AAEA,IAAA,IAAU,eAAV,GAAA,CAAA,YAAA;AACA,IAAA,IAAA,SAAA,eAAA,CAAA,OAAA,EAAA;AACA,IAAA,QAAI,IAAI,CAAC,OAAO,GAAhB,OAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,YAAT,EAAuB,CAAC;AACxB,IAAA,KAAA;AACA,IAAA,IAAA,eAAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;AACA,IAAA,QAAI,IAAI,KAAR,GAAA,IAAA,CAAA,OAA4B,CAA5B,KAAA,CAAiC,GAAjC,CAAqC,CAAC;AACtC,IAAA,QAAI,IAAM,CAAV,IAAA,GAAA,KAAA,CAAwB,CAAxB,CAAA,CAAA,IAAA,EAAiC,CAAC;AAClC,IAAA,QAAI,IAAI,CAAC,IAAT,GAAA,CAAA,KAAA,CAAA,CAAA,CAAuB,IAAvB,IAAA,CAAA,IAAA,CAAA,CAAA,IAAA,EAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,WAAW,GAApB,GAAA,GAA2B,IAA3B,CAAA,IAAA,GAAyC,GAAzC,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,SAAT,GAAA,GAAA,GAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,gBAAA,GAAA,IAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA;AACA,IAAA,QAAA,IAAA,WAAA,GAAC,IAAD,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,WAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAxBA,IAAA,QAAA,IAAA,CAAA,MAAA,GAAA,IAAA,GAAA,WAAA,CAAA;;ADvBA,IAAA,QAAA,IAAA,CAAA,UAAA,GAAA,QAAA,GAAA,WAAA,CAAA;;;;;;;;;;;;;;;;;;;AAqBA,IAAA,IAAA,uBAAA,GAAA,CAAA,YAAA;AACA,IAAA,IAAA,SAAA,uBAAA,GAAA;AACA,IAAA,KAAA;AAAA,IAAA,IAAA,uBALA,CAAA,SAAA,CAAA,qBAAA,GAAA,UAAA,IAAA,EAKA;;ADDA,IAAA,QAAA,OAAA,IAAA,CAAA,SAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,OAAA,uBAAA,CAAA;AAEA,IAAA,CAAA,EAAA,CAAA,CAAA;AAEA,IAAA,SAAA,aAAA,CAAA,IAAA,EAAA;AACA,IAAA,IAAE,OAAF,GAAA,GAAA,IAAA,GAAA,YAAA,CAAA;AACA,IAAA,CAAA;AACA,IAAA,SAAA,oBAAA,CAAA,IAAA,EAAA;AACA,IAAA,IAAA,IAAI,UAAU,GAAG,IAAI,CAArB,UAAA,CAAiC;AACjC,IAAA,IAAA,IAAA,OAAA,CAAA;AACA,IAAA,IAAA,IAAA,UAAA,EAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAA,UAAA,CAAA,MAAA,CAAA;AACA,IAAA,QAAA,OAAA,GAAgB,IAAI,KAApB,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,QAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA;AAEA,IAAA,YAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAiC,UAAjC,CAAA,CAAA,CAAA,CAAA,QAAA,EAAA,UAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA;;AAEA,IAAA,KAAA;AACA,IAAA,IAAA,OAAA,OAAA,IAAA,EAAA,CAAA;AAEA,IAAA,CAAA;;;;;AAkBA,IAAA;;;;;;;;AASA,IAAA,CAAA;AACA,IAAA;;;AAGA,IAAA;AACA,IAAA,SAAA,aAAA,CAAA,OAAA,EAAA,SAAA,EAAA;;AD1DA,IAAA,QAAA,OAAA,CAAA,OAAA,GAAA,YAAA,EAAA,SAAA,CAAA,UAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CAAA;AACA,IAAA,QAAA,SAAA,CAAA,gBAAA,CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA;AACA,IAAA,KAAA;AAEA,IAAA,CAAA;AASA,IAAA,IAAA,aAAA,GAAgB;AAAhB,IAAA,IAAA,iBAAA,EAAA,IAAA;AAAA,IAAA,CAAA,CAAA;AACA,IAAA,IAAA,yBAAA,GAAA,CAAA,YAAA;AAAA,IAAA,IAAA,SAAA,yBAAA,CAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,cAAA,EAAA,SAAA,EAAA,QAAA,EAAA,MAAA,EAAA,gBAAA,EAAA;AACA,IAAA,QAAc,IAAd,CAAA,EAAA,GAAA,EAAqB,CAArB;AAAA,IAAA,QAA2D,IAA3D,CAAA,IAAA,GAAA,IAAA,CAAA;AACA,IAAA,QAAc,IAAd,CAAA,OAAA,GAAA,OAAA,CAAA;AAAA,IAAA,QAA2D,IAA3D,CAAA,KAAA,GAAmE,KAAnE,CAAA;AACA,IAAA,QAAc,IAAd,CAAA,KAAA,GAAA,KAAA,CAAA;AAAA,IAAA,QAAqD,IAArD,CAAA,OAAA,GAAA,OAAA,CAAA;AAZA,IAAA,QAAU,IAAV,CAAA,cAAA,GAAA,cAAA,CAAA;AACA,IAAA,QAAU,IAAV,CAAA,SAAA,GAAsB,SAAtB,CAAA;AAEA,IAAA,QAAU,IAAV,CAAA,QAAA,GAAA,QAAgD,CAAC;AACjD,IAAA,QAAU,IAAV,CAAA,MAAA,GAAmB,MAAnB,CAA+B;AAC/B,IAAA,QAAU,IAAV,CAAA,gBAAA,GAAA,gBAAA,CAAA;AAQA,IAAA,QAAK,IAAI,CAAC,gBAAwB,GAAG,CAArC,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,YAAT,GAAA,IAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,YAAA,GAAA,IAAA,CAAA;AAEA,IAAA,QAAA,IAAA,CAAA,SAAA,GAAA,IAAA,CAAA;AAAA,IAAA,QAAE,IAAF,CAAA,cAAA,GAAA,IAAA,CAAA;AACA,IAAA,QAAI,IAAM,CAAV,OAAA,CAAA,CAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AACA,IAAA,QAAI,IAAM,CAAV,cAAA,GAAA,KAA2C,CAAC,IAA5C,EAAA,CAAA;AACA,IAAA,KAAA;AAEA,IAAA,IAAA,yBAAyB,CAAzB,SAAA,CAAA,eAAA,GAAA,YAAA;AAEA,IAAA,QAAI,IAAJ,KAAA,GAAA,IAAoB,CAApB;AACA,IAAA,QAAA,IAAM,wBAAN,GAAA,EAAA,CAA0B;AAC1B,IAAA,QAAA,IAAA,gBAAA,GAAA,IAAA,CAAA,qBAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAa,gBAAb,CAAA,GAAiC,CAAC,UAAlC,KAAA,EAAA,EAAA,OAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAO,OAAP,CAAA,KAAA,EAAA,CAAA;AACA,IAAA,QAAA,OAAA,CAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AAEA,IAAA,YAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,UAAA,KAAA,EAAA;AACA,IAAA,gBAAA,wBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AAEA,IAAA,gBAAA,KAAA,CAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA;AACA,IAAA,aAAA,CAAA,CAAA;AAGA,IAAA,SAAA,CAAA,CAAA;AACA,IAAA,QAAA,OAAA,wBAAA,CAAoC;AACpC,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,yBAAyB,CAAC,SAA1B,CAAA,eAAA,GAAA,UAAA,gBAAA,EAAA;AAEA,IAAA,QAAI,IAAJ,aAAA,GAAAQ,gCAAA,CAAA,gBAAA,CAAA,CAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,IAAA,CAAA,cAAA,EAAA,CAAA,EAAA,IAAA,CAAA,cAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,YAAA;AAEA,IAAA,YAAA,IAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,aAAE,EAAF,gBAAA,EAAA,IAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IAAA,QAAE,IAAF,CAAA,cAAA,GAAA,IAAA,CAAA,YAAA,CAAA,iBAAA,CAAA;AACA,IAAA,QAAI,IAAM,CAAV,SAAA,GAAuB,IAAvB,CAA4B,YAA5B,CAAA,QAAA,CAAA;AACA,IAAA,QAAI,aAAe,CAAnB,IAAwB,CAAxB,OAAA,EAAA,IAAA,CAAuC,SAAvC,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,yBAAA,CAAA,SAAA,CAAA,WAA+C,GAAG,YAAlD;AACA,IAAA,QAAA,IAAM,KAAN,GAAc,IAAd,CAAA;AAEA,IAAA,QAAA,IAAM,KAAN,GAAA,IAAA,CAAA,KAAA,CAAA;AACA,IAAA,QAAA,IAAA,MAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,IAAA,EAA2B,CAA3B;AACA,IAAA,QAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAc,CAAd,GAAA,MAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,IAAA,YAAA,IAAA,KAAA,GAAA,IAAA,eAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAA,IAAA,GAAA,IAAA,CAAgB;AAChB,IAAA,YAAA,IAAA,KAAA,CAAA,cAAA,CAAuB,KAAvB,CAAA,IAAA,CAAA,EAAoC;AACpC,IAAA,gBAAA,IAAA,SAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AAEA,IAAA,oBAAA,IAAY,SAAZ,GAAA,aAAA,CAAA;AACA,IAAA,oBAAA,OAAA,UAAA,SAAkC,EAAlC;AACA,IAAA,wBAAA,IAAA,SAAA,KAAA,aAAA,EAAA;AACA,IAAA,4BAAA,SAAA,GAAA,SAAA,CAAA;AACA,IAAA,yBAAA;AAEA,IAAA,wBAAA,KAAA,CAAA,WAAA,CAAA,IAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AAAA,IAAA,wBAAA,SAAA,GAAA,SAAA,CAAA;AACA,IAAA,qBAAA,CAAA;AACA,IAAA,iBAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AAAA,IAAA,gBAAA,KAAiB,CAAjB,QAAA,CAAA,KAAA,CAAA,IAAqC,EAArC,SAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,iBAAA,IAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,IAAA,GAAA,KAAA,mBAA2C,KAA3C,CAAA,QAAyD,CAAzD,CAAA;AACA,IAAA,aAAA;AACA,IAAA,iBAAA,IAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,WAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,IAAA,GAAA,KAAA,mBAA2C,KAA3C,CAAA,WAA4D,CAAC,CAA7D;AACA,IAAA,aAAA;AACA,IAAA,iBAAA,IAAA,KAAA,CAAA,cAAA,CAAA,KAAA,CAAA,UAAA,CAAA,EAAA;AACA,IAAA,gBAAU,IAAI,GAAd,KAAsB,mBAAtB,KAAA,CAAA,UAAA,CAAA,CAAA;AACA,IAAA,aAAA;AAEA,IAAA,iBAAA,IAAA,KAAA,CAAiB,cAAjB,CAAA,KAAA,CAAA,gBAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,IAA6D,GAA7D,KAAqE,mBAArE,KAAA,CAAA,gBAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,YAAA,IAAA,IAAA,IAAA,IAAA,EAAA;AACA,IAAA,gBAAA,IAAA,OAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AAAA,IAAA,oBAAA,OAAA,UAAA,SAAA,EAAA,SAAA,EAAA;AAEA,IAAA,wBAAA,OAAA,KAAA,CAA+B,WAAW,CAA1C,IAAA,EAAA,SAAA,EAAA,SAAA,CAAA,CAAA;AACA,IAAA,qBAAA,CAAA;AAAA,IAAA,iBAAA,CAAiB,CAAjB,KAAA,CAAA,IAAA,CAAA,CAA2C;;AAE3C,IAAA,aAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,SAAA,GAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,SAA8C,CAAC;AAC/C,IAAA,QAAA,IAAA,SAAY,IAAZ,SAAyB,CAAzB,WAAA,EAAA;AACA,IAAA;AACA,IAAA,YAAA,IAAA,CAAA,YAAA,GAAA,EAAA,CAAA;AACA,IAAA,YAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,YAAA,EAAA,OAAA,KAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,YAAA;AACA,IAAA,gBAAA,IAAA,YAAA,GAA+B,KAA/B,CAAA,YAAA,CAAA;AACA,IAAA,gBAAA,KAAA,CAAA,YAAA,GAAA,EAAA,CAAA;AAEA,IAAA,gBAAA,KAAA,CAAA,SAAA,CAAA,WAAA,CAAA,YAAA,CAAA,CAAA;AAAA,IAAA,aAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAI,IAAM,CAAV,cAAyB,CAAzB,MAAA,CAAA,YAAA,EAAA,OAAA,KAAA,CAAA,cAAA,IAAA,KAAA,CAAA,cAAA,CAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,yBAAyB,CAAzB,SAAA,CAAA,YAAgD,GAAG,YAAnD;AACA,IAAA,QAAA,IAAM,KAAN,GAAc,IAAd,CAAA;AACA,IAAA,QAAA,IAAM,KAAN,GAAA,IAAA,CAAA,KAAA,CAAA;AAEA,IAAA,QAAA,IAAM,OAAN,GAAA,IAAsB,CAAtB,IAAA,CAAA,OAAA,IAAA,EAAA,CAC2B;AAC3B,IAAA,QAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,OAA+B,CAA/B,MAAsC,EAAtC,CAAA,EAAA,EAAA;AACA,IAAA,YAAA,IAAU,MAAV,GAAA,IAAqB,eAArB,CAAA,OAAA,CAAA,CAAA,CAAA,CAAgD,CAAC;AACjD,IAAA,YAAA,IAAU,IAAI,GAAd,IAAA,CAAA;AAEA,IAAA,YAAM,IAAI,UAAV,GAAA,KAAA,CAAA;AACA,IAAA,YAAA,IAAQ,UAAR,GAAA,MAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,SAAA,CAAA,CAAA,EAAA,MAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,CAAA,GAAA,IAAA,CAAA;AACA,IAAA,YAAA,IAAA,gBAAA,GAAA,MAAA,CAAA,gBAAA;AAAA,IAAA,gBAAA,IAAA,GAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,CAAsD,EAAtD,MAAA,CAAA,gBAAA,CAAA,MAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,IAAA,gBAAQ,IAAI,CAAZ;AACA,IAAA,YAAA,IAAA,KAAA,CAAA,cAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AAAA,IAAA,gBAAA,IAAA,GAAA,KAAA,mBAAA,MAAiD,CAAjD,MAAA,CAAA,CAAA;AACA,IAAA,aAAA;AACA,IAAA,iBAAA,IAAA,KAAkB,CAAlB,cAAA,CAAA,MAAA,CAAA,SAAA,CAAA,EAAA;AACA,IAAA,gBAAA,IAAA,GAAA,KAAA,mBAAA,MAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,aAAA;AACA,IAAA,iBAAA,IAAA,KAAA,CAAA,cAAA,CAAA,UAAA,CAAA,EAAA;AACA,IAAA,gBAAQ,IAAR,GAAA,KAAA,mBAAA,UAAA,CAAA,CAAA;AACA,IAAA,gBAAA,UAAA,GAAA,IAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,iBAAA,IAAA,KAAoB,CAApB,cAAmC,CAAnC,gBAAA,CAAA,EAAA;AACA,IAAA,gBAAQ,IAAM,GAAd,KAAA,mBAAA,gBAAA,CAAA,CAAA;AACA,IAAA,gBAAQ,UAAR,GAAA,IAAA,CAA0B;AAC1B,IAAA,aAAA;AACA,IAAA,YAAA,IAAA,IAAA,IAAA,IAAA,IAAA,UAAA,IAAA,IAAA,EAAA;AACA,IAAA,gBAAQ,IAAM,MAAd,GAAA,IAAA,CAA4B,MAA5B,CAAA,IAAuC,CAAvC,CAAA;AACA,IAAA,gBAAQ,IAAI,MAAZ,GAAqB,MAArB,CAAA,MAAA,CAAA;AACA,IAAA,gBAAA,IAAU,UAAV,IAAA,CAAA,MAAA,EAAA;AACA,IAAA,oBAAA,MAAA,IAAkB,KAAlB,CAAA,cAAA,GAAA,IAAA,GAAA,sBAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,gBAAA,IAAA,OAAA,GAAA,IAAA,CAAA,SAAA,CAA6B,MAA7B,CAAA,IAAkC,CAAlC,CAAA;AACA,IAAA,gBAAA,IAAA,OAAA,EAAA;AAAA,IAAA,oBAAA,OAAA,CAAA,SAAA,CAAA;AACA,IAAA,wBAAA,IAAA,EAAA,UAAA;AACA,IAAA,4BAAA,CAAA,UAAA,MAAA,EAAA,EAAA,OAAA,UAAA,CAAA,oBAAA,EAAA,OAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,MAAA,CAAA;AAAA,IAAA,4BAAA,CAAA,UAAA,MAAA,EAAA;AAAA,IAAA,gCAAA,OAAA,UAAA,CAAA,oBAAA;AACA,IAAA,oCAAA,OAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAA,EAAA,MAAA,EAC6C,CAD7C,EAAA,CAAA,CAAA;AAEA,IAAA,iCAAA,CAAA;AAAA,IAAA,6BAAA,CAAA,CAAA,MAAA,CAAA;AACA,IAAA,qBAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,qBAAA;AAEA,IAAA,oBAAA,MAAA,IAAA,KAAA,CAAA,mBAAiB,GAAf,MAAF,CAAA,IAAA,GAAA,kBAAA,GAAA,gBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AAAA,IAAA,iBAAA;AACA,IAAA,aAAS;AACT,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,yBAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACA,IAAA,QAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AAEA,IAAA,QAAA,IAAA,CAAA,OAAA,CAAA,IAAA,CAAA,UAAA,EAAA,YAAA;AAEA,IAAA,YAAA,KAAA,CAAA,cAAA,CAAA,QAAA,EAAA,CAAA;AACA,IAAA,YAAQ,KAAK,CAAb,YAAA,CAA2B,OAA3B,EAAA,CAAA;AACA,IAAA,SAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,yBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA,EAAA,OAAA,IAAA,CAAA,YAAA,IAAA,IAAA,CAAA,YAAA,CAAA,QAAA,CAAA,EAAA,CAAA;AAEA,IAAA,IAAA,yBAAA,CAAA,SAAA,CAAoC,WAApC,GAAA,UAAA,IAAA,EAAA,SAAA,EAAA,SAAA,EAAA;AACA,IAAA,QAAA,IAAA,IAAA,CAAA,YAAA,EAAA;AAEA,IAAA,YAAA,IAAA,CAAA,gBAAA,EAAA,CAAA;AACA,IAAA,YAAU,IAAV,CAAA,YAAA,CAAA,IAAA,CAAiC,GACzB,IAAID,0BADZ,CAAA,SAAA,EAAA,SAAA,EAAA,SACmF,KADnF,SAAA,CAAA,CAAA;AAEA,IAAA,SAAA;AAEA,IAAA,QAAI,IAAI,CAAC,SAAT,CAAA,IAAA,CAAA,GAA2B,SAA3B,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,yBAAA,CAAA,SAAA,CAAA,qBAAA,GAAA,YAAA;AAEA,IAAA,QAAI,IAAJ,uBAAA,GAAA,IAAsC,CAAtC,cAAA,CAAA,GAAA,CAA0D,uBAAuB,CAAC,CAAC;AACnF,IAAA,QAAA,IAAA,kBAAA,GAAA,uBAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;;;;AAKA,IAAA,QAAA,OAAA,IAAA,CAAA,qBAAA,CAAA,kBAAA,EAAA,IAAA,CAAA,OAAgC,CAAhC,QAAA,EAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA;;AAGA,IAAA;AACA,IAAA,IAAA,yBAAuB,CAAC,SAAxB,CAAA,qBAAA,GAAA,UAAA,kBAAA,EAAA,KAAA,EAAA;AAEA,IAAA,QAAA,IAAM,gBAAN,GAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAM,OAAN,GAAA,IAAA,eAAA,EAAA,CAAA;AACA,IAAA,QAAA,IAAA,sBAAA,CAAA;AACA,IAAA,QAAA,KAAO,IAAP,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,kBAAA,CAAA,MAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA;AAAA,IAAA,YAAA,gBAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA;AACA,IAAA,YAAA,IAAQ,QAAQ,GAAhB,kBAAA,CAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAA,QAAA,KAAA,GAAA,EAAA;AACA,IAAA,gBAAA,sBAAA,GAAA,CAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,iBAAA;AACA,IAAA,gBAAY,OAAO,CAAnB,cAAA,CAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;AAGA,IAAA,SAAA;AACA,IAAA,QAAA,IAAM,OAAN,GAAA,UAAA,CAA2B,EAAE,EAA7B,EAAA;AAEA,IAAA,YAAM,IAAI,gBAAV,GAAA,EAAA,CAAgC;AAChC,IAAA,YAAA,IAAQ,IAAR,GAAA,KAAA,CAAA,CAAA,CAAA,CAAwB;AACxB,IAAA,YAAA,IAAA,QAAA,GAAA,wBAAA,CAAA,IAAA,CAAA,QAAA,CAAA,WAAA,EAAA,EAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAEA,IAAA,YAAM,OAAN,CAAA,KAAA,CAAA,QAAA,EAAA,UAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,gBAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,YAAA,gBAAA,CAAA,IAAyB,EAAzB,CAAA;AACA,IAAA,YAAA,IAAA,sBAAA,KAAA,SAAA,EAAA;AACA,IAAA,gBAAA,gBAAA,CAAA,IAAA,CAAA,sBAAA,CAAA,CAAA;AAhBA,IAAA,aAAS;AAAT,IAAA,YAAA,IAAA,gBAAA,CAAA,MAAA,EAAA;AAgBA,IAAA,gBAAA,gBAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,SAAA,CAAA;AACA,IAAA,QAAA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,KAAA,CAAA,MAAA,EAAA,CAAA,GAAA,EAAA,EAAA,EAAA,CAAA,EAAA;AAvNA,IAAA,YAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA;;ADNA,IAAA,QAAA,OAAA,gBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA,IAAA;AACA,IAAA,SAAA,kBAAA,CAAA,IAAA,EAAA;AACA,IAAA,IAAA,IAAA,QAAA,GAAA,cAAA,GAAA,cAAA,EAAA,GAAA,GAAA,CAAA;AACA,IAAA,IAAA,IAAA,OAAA,GAAA,CAAa,CAAb;AACA,IAAA,IAAA,IAAA,gBAAA,GAAA,UAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA;;;;AAMA,IAAA,YAAA,OAAA,EAAA,CAAA,gBAAA,EAAA,gBAAA,CAAA;AAEA,IAAA,YAAA,IAAQ,EAAR,UAAA,KAAA,EAAA,OAAgE,EAAhE,KAAA,EAAA,QAAA,EAAA;AAEA,IAAA;AACA,IAAA;AAEA,IAAA;AAGA,IAAA,gBAAA,IAAU,cAAV,GAAA,QAAA,CAAA,CAAA,CAAA,IAAA,SAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,OAAA,GAAkB,QAAlB,CAA2B,CAAC,CAA5B,CAAA;AACA,IAAA,gBAAA,IAAA,WAAA,GAAA,UAAA,QAAA,EAAA;AAEA,IAAA,oBAAU,IAAM,wBAAwB,GAAG,QAA3C,CAAA,GAAA,CAAAD,sCAAA,CAAA,CAAA;AACA,IAAA,oBAAU,IAAM,gBAAhB,GAAA,wBAA2D,CAAC,uBAA5D,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA;AACA,IAAA,oBAAU,IAAM,CAAhB,gBAAA,EAAA;AAIA,IAAA,wBAAgB,MAAhB,IAAA,KAAA,CAAgC,kCAAhC,GAAA,gBAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA,IAAA,qBAAA;AACA,IAAA,oBAAU,IAAV,EAAgB,GAAhB,QAAA,GAA8B,CAAC,OAA/B,EAAA,CAAA,CAAA;AACA,IAAA,oBAAU,IAAV,eAA6B,GAAG,IAAhC,qBAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,oBAAU,IAAV,MAAA,GAAA,IAAA,yBAAA,CAAA,EAAA,EAAA,IAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,MAAA,EAAA,gBAAA,CAAA,CAAA;AAEA,IAAA,oBAAU,IAAV,gBAAA,GAAiC,MAAjC,CAAwC,eAAe,EAAvD,CAAA;AACA,IAAA,oBAAA,MAAA,CAAA,eAAA,CAAA,gBAAA,CAAA,CAAA;AAEA,IAAA,oBAAY,MAAZ,CAAA,WAAA,EAAA,CAAA;AACA,IAAA,oBAAU,MAAV,CAAA,YAA6B,EAA7B,CAAA;AACA,IAAA,oBAAA,MAAA,CAAA,eAAA,EAAA,CAAA;AAAA,IAAA,oBAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,WAAA,EAAA,CAAA,CAAA;AACA,IAAA,iBAAA,CAAA;AACA,IAAA,gBAAA,IAAA,cAAA,YAAA,qBAAA,EAAA;AACA,IAAA,oBAAA,cAAA,CAAA,IAAA,CAAA,WAAA,CAAA,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,qBAAA;;AAGA,IAAA,iBAAA;AACA,IAAA,aAAA;AACA,IAAA,SAAA,CAAA;;;;;AAMA,IAAA,CAAA;AAKA,IAAA;;;AAFA,IAAA;;AAIA,IAAA,IAAA,SAAA,qBAAA,CAAA,OAAA,EAAA;AACA,IAAA,QAAA,IAAA,CAAA,OAAA,GAAA,OAAA,CAAA;AAEA,IAAA,QAAA,IAAA,CAAA,WAAA,GAAA,aAAM,CAAN,YAAO,CAAP,CAAA;AACA,IAAA,QAAI,IAAI,CAAR,SAAA,GAAqB,EAAE,CAAvB;AACA,IAAA;AACA,IAAA,QAAA,OAAA,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,EAAA,IAAA,CAAA,CAAA;AAAA,IAAA,KAAA;AACA,IAAA,IAAA,qBAAA,CAAoB,SAApB,CAAA,IAAkC,GAAlC,UAAA,QAAA,EAAA;AACA,IAAA,QAAA,IAAA,IAAA,CAAA,QAAA,EAAA;AACA,IAAA,YAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;AAEA,IAAA,SAAA;AACA,IAAA,aAAS;;AAGT,IAAA,SAAA;;AAGA,IAAA,IAAA,qBAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAA,QAAA,EAAA;;AAGA,IAAA;AACA,IAAA,QAAI,IAAI,CAAC,OAAT,CAAA,IAAA,CAAA,IAAA,CAAA,WAAA,EAAA,QAAA,CAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAA,CAAA,OAAA,GAAA,IAAA,CAAA;AA/BA,IAAA;;ADvIA,IAAA,QAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA,IAAA;;AD3CA,IAAA,IAAA,IAAA,OAAA,GAAA,UAAA,CAAA,EAAA,EAAA,OAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,EAAA,CAAA;;;AAGA,IAAA,CAAA;ADlBA,IAAA;;;;;;;;;;AAmNA,IAAA;AACA,IAAA,SAAA,IAAA,GAAA;AACA,IAAA,IAAE,MAAF,IAAA,KAAA,CAAA,+BAAA,CAAA,CAAA;AACA,IAAA,CAAA;AACA,IAAA,IAAE,OAAF,GAAA;AACA,IAAA,IAAE,SAAF,EAAA,IAAA;AACA,IAAA,IAAA,MAAA,EAAA,IAAA;AAGA,IAAA,IAAI,OAAJ,EAAA,IAAA;AACA,IAAA,IAAE,OAAF,EAAA,IAAA;AACA,IAAA,IAAA,eAAA,EAAA,IAA4B;AAC5B,IAAA,IAAA,cAAA,EAAA,IAAA;AACA,IAAA,CAAC,CAAD;AAAE,IAAA,IAAF;AAEA,IAAA,IAAA,IAAA,MAAA,CAAA,cAAA,CAAA,SAAA,CAAA,EAAA;AAEA,IAAA,QAAA,OAAA,GAAA,MAAiC,CAAjC,OAAA,CAA0C;AAC1CD,IAAAA,KAAA;AACA,IAAA,CAAA;;ADzNA,IAAA,CAAA;AACA,IAAA,IAAM,SAAN,GAAA,OAAA,CAAA,SAAA,CAAA;AACA,IAAA,IAAMD,QAAN,GAAA,OAAsB,CAAtB,MAAA,CAAA;AACA,IAAA,IAAE,OAAF,GAAA,OAAmB,CAAnB,OAAA,CAAA;AAGA,IAAA,IAAA,iBAAA,GAAA,wBAAA,CAAA;AAAA,IAAA,IAAA,aAAA,GAAA,eAAA,CAAA;AACA,IAAA,IAAA,eAAA,GAAA;AACA,IAAA,IAAA,iBAAA,EAAA,IAAA;AAEA,IAAA,CAAA,CAAA;AAEA,IAAA,IAAA,QAAA,GAAA,CAAA,YAAA;AACA,IAAA,IAAA,SAAA,QAAA,GAAA;AAAA,IAAA,QAAA,IAAA,CAAA,qBAAA,GAAA,EAAA,CAAA;AAPA,IAAA,QAAA,IAAA,CAAA,qBAAA,GAAA,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA,IAAA;AACA,IAAA,IAAA,SAAA,gBAAA,CAAA,IAAA,EAAA,UAAA,EAAA,QAAA,EAAA;AACA,IAAA,QAAI,IAAI,CAAC,IAAT,GAAA,IAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,UAAT,GAAA,UAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,QAAT,GAAoB,QAAQ,CAA5B;AAEA,IAAA,QAAI,IAAI,CAAC,SAAT,GAAA,QAA6B,CAAC,GAA9B,CAAA,SAA2C,CAAC,CAA5C;AACA,IAAA,QAAI,IAAI,CAAC,QAAQ,GAAGH,IAApB,CAAA,SAAA,CAAA,GAAA,CAAA,QAAA,CAAA,CAAA;AAEA,IAAA,QAAI,IAAI,CAAC,cAAT,GAA0B,IAA1B,CAAA,SAAA,CAAA,GAA4C,CAAC,eAA7C,CAAA,CAAA;AACA,IAAA,QAAI,IAAI,CAAC,YAAT,GAAwB,IAAxB,CAAA,SAAA,CAAA,GAAA,CAA2C,aAA3C,CAAA,CAA0D;;;AAI1D,IAAA,QAAI,IAAM,CAAV,QAAA,GAAsB,OAAtB,CAAA,IAAkC,CAAlC,OAAA,CAAA,CAA4C;;;AAG5C,IAAA;AAEA,IAAA;AACA,IAAA,QAAA,IAAA,YAAA,GAAA,QAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;AAEA,IAAA;AAAA,IAAA;;AAEA,IAAA,QAAI,IAAM,CAAV,iBAAA,EAA8B,CAA9B;AACA,IAAA,KAAA;;AAGA,IAAA,QAAI,IAAM,KAAV,GAAA,IAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAI,IAAI,iBAAR,GAAA,IAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAM,MAAN,GAAA,IAAA,CAAA,eAAA,CAAoC,IAApC,CAAA,SAAA,CAAA,CAAoD;AAEpD,IAAA;AAAA,IAAA,QAAA,IAAA,cAAA,GAAA,IAA+B,CAA/B,SAAA,CAAA,UAAA,CAAA;AACA,IAAA,QAAA,IAAM,gBACI,GADV,IAAA,CAAA,SAAA,CAAA,gBAAA,CAAA;AAEA,IAAA,QAAA,IAAA,cAAA,EAAA;;AAGA,IAAA,SAAA;AACA,IAAA,aAAS,IAAT,gBAAA,EAAA;;AAGA,IAAA,SAAA;AACA,IAAA;AAGA,IAAA,QAAI,IAAI,CAAR,kBAAA,GAAA,gBAAA,GAAiD,IAAjD,CAAA,kBAAA,GAAA,IAAA,CAAA,eAAA,CAAA;AACA,IAAA,QAAA,IAAM,CAAN,WAAA,EAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAA,gBAAA,GAAA,IAAA,CAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAA6D;AAC7D,IAAA,QAAA,IAAA,mBAAA,GAAA,IAAA,CAAA,cAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,CAAA,QAAA,EAAA,gBAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,IAAA,CAAA,SAAA,CAAA,gBAAA,IAAA,KAAA,CAAA,gBAAA,CAAA,EAAA;;AAGA,IAAA,YAAQ,MAAR,CAAA,IAAA,CAAA,wBAAA,CAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,IAAA,gBAAU,KAAV,CAAA,kBAAA,CAAA,GAAA,CAAA,GAAA,wBAAA,CAAA,GAAA,CAAA,CAAA;AACA,IAAA,aAAA,CAAA,CAAA;AACA,IAAA,SAAK;;AAGL,IAAA,QAAI,IAAI,IAAI,CAAC,cAAb,EAAA;AACA,IAAA,YAAM,IAAI,CAAC,cAAX,CAAA,IAA8B,CAA9B,cAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAA,CAAA,cAAA,GAAA,IAAA,CAAA;;AAGA,IAAA;AACA,IAAA,QAAA,IAAM,IAAM,CAAZ,kBAAA,IAAA,UAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,OAAA,CAAA,EAAgE;AAEhE,IAAA,YAAM,IAAI,CAAC,kBAAX,CAAA,OAAA,EAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA;;AAGA,IAAA,YAAU,IAAI,WAAd,GAAA,YAAA,EAAA,OAAA,KAAA,CAAA,kBAAA,CAAA,QAAA,EAAA,CAAA,EAAA,CAAA;AACA,IAAA,YAAU,IAAV,CAAA,wBAAA,GAAA,IAAA,CAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,WAAA,CAAA,CAAA;AACA,IAAA,YAAU,WAAW,EAArB,CAAA;AACA,IAAA,SAAA;AACA,IAAA;AACA,IAAA,QAAI,IAAI,IAAR,GAAe,IAAf,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,IAAA,QAAA,IAAM,OAAO,GAAb,CAAA,OAAA,IAAA,IAAA,QAAwC,CAAC,IAAzC,IAAiD,CAAjD,GAAA,CAAA;AACA,IAAA,QAAA,IAAA,QAAA,GAAA,CAAA,OAAA,IAAA,IAAA,QAAA,CAAA,GAAA,IAAA,CAAA,IAAA,GAAA,IAAA,CAAA;AAEA,IAAA,QAAI,IAAM,KAAV,GAAA,aAAA,CAAA;AACA,IAAA,QAAA,IAAQ,YAAR,GAAA,aAAA,CAAA;AAAA,IAAA,QAAA,IAAA,OAAA,EAAA;AACA,IAAA,YAAA,OAAe,CAAC,IAAhB,CAAA,eAAA,EAAA,IAAA,CAAA,QAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,YAAA,CAAA,CAAA;AAEA,IAAA,SAAA;AACA,IAAA,QAAA,IAAM,gBAAN,GAAA,UAAmC,KAAnC,EAA0C,WAA1C,EAAA;AACA,IAAA,YAAA,OAAA,WAAA,CAAA,iBAAA,CAAA,CAAA;;AAGA,IAAA,QAAI,MAAJ,CAAA,IAAA,CAAA,eAA+B,EAA/B,IAAA,EAAA,EAAA,uBAAA,EAAA,gBAAkF,EAAlF,CAAA,CAAA;AACA,IAAA,QAAA,IAAM,QAAN,EAAA;AACA,IAAA,YAAA,QAAA,CAAA,IAAA,CAAA,eAAA,EAAA,IAAA,CAAA,QAAA,EAAA,KAAA,EAAA,mBAAA,EAAA,YAAA,CAAA,CAAA;AACA,IAAA,SAAA;AAEA,IAAA;AACA,IAAA,QAAI,IAAI,IAAR,CAAa,kBAAb,IAAA,UAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,EAAA;AACA,IAAA,YAAM,IAAI,CAAC,kBAAX,CAAA,SAAA,EAAA,CAAA;AACA,IAAA,SAAK;AAAL,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAyB,WAAzB,GAAA,UAAA,OAAA,EAAA;AACA,IAAA,QAAA,IAAA,CAAA,IAAA,CAAA,kBAAA,EAAA;AACA,IAAA,YAAA,IAAA,CAAA,cAAA,GAAA,OAAA,CAAA;AAEA,IAAA,SAAA;AAAA,IAAA,aAAA;AACA,IAAA,YAAU,IAAV,CAAA,cAAA,CAAA,OAAA,CAAsC,CAAC;AACvC,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;AAEA,IAAA,IAAA,gBAAA,CAAA,SAA0B,CAA1B,SAAA,GAAA,YAAA;AACA,IAAA,QAAA,IAAM,KAAN,GAAA,IAAoB,CAApB;AACA,IAAA,QAAA,IAAM,qBAAN,GAAA,IAAA,CAAA,QAA6C,CAA7C,qBAAA,CAAA;AAEA,IAAA,QAAA,IAAM,qBAAoB,GAA1B,IAAA,CAAkC,QAAlC,CAAA,qBAAA,CAAA;AACA,IAAA,QAAA,IAAA,mBAAA,GAAA,IAAA,CAAA,QAAA,CAAA,mBAAA,CAAA;AACA,IAAA,QAAA,qBAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA,GAAA,EAAA;AAEA,IAAA,YAAA,IAAQ,QAAR,GAAA,KAAA,CAAyB,kBAAzB,CAAA,QAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAQ,QAAR,GAAA,qBAAA,CAAA,GAAA,CAA6C,CAAC;AAC9C,IAAA,YAAA,IAAA,CAAAE,6BAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA;AACA,IAAA,gBAAA,IAAA,UAAA,GAAA,mBAAA,CAAA,QAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,YAAA,GAAA,KAAA,CAAA,UAAA,CAAA,CAAA;AAEA,IAAA,gBAAA,YAAA,CAAA,IAAA,CAAA,QAAa,CAAb,CAAA;AACA,IAAA,gBAAA,qBAAA,CAAA,GAAA,CAAA,GAAA,QAAiD,CAAjD;AACA,IAAA,aAAA;AACA,IAAA,SAAK,CAAL,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACA,IAAA,QAAA,IAAA,UAAA,CAAA,IAAA,CAAA,wBAAA,CAAA,EAAA;AACA,IAAA,YAAQ,IAAR,CAAA,wBAAA,EAAA,CAAA;AACA,IAAA,SAAA;AAEA,IAAA,QAAA,IAAA,IAAA,CAAA,kBAAA,IAAA,UAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,EAAA;AACA,IAAA,YAAU,IAAV,CAAA,kBAAA,CAAA,UAAA,EAAoE,CAApE;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAM,CAAN,eAAsB,CAAtB,QAAA,EAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAmB,SAAnB,CAAA,YAAA,GAAA,UAAA,IAAA,EAAA;AACA,IAAA,QAAI,IAAI,UAAU,GAAlB,IAAyB,CAAzB,SAAA,CAAA,GAAA,CAAA,IAAA,GAAA,WAAA,CAAA,CAAA;AAAA,IAAA,QAAA,IAA2B,UAA3B,CAAA,MAA4C,GAA5C,CAAA,EAAA;AACA,IAAA,YAAQ,MAAR,IAAkB,KAAlB,CAAA,gDAAA,GAAA,IAAA,CAAA,IAAA,CAAA,CAAA;AAAA,IAAA,SAAA;AACA,IAAA,QAAI,IAAI,SAAS,GAAjB,UAAA,CAAA,CAAA,CAAA,CAAA;AAAA,IAAA,QAAA,IAA2B,SAA3B,CAAA,OAA4C;AAC5C,IAAA,YAAU,IAAI,CAAd,YAA2B,CAA3B,SAAA,CAAA,CAAA;;AAEA,IAAA,YAAQ,IAAR,CAAA,YAAA,CAAA,UAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAM,SAAsC,CAA5C,OAAA;AAAA,IAAA,YAAA,IAAkD,CAAlD,YAAA,CAAA,SAAA,CAAA,CAAA;AACA,IAAA,QAAA,IAAA,IAAA,GAAA,SAAA,CAAA,IAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAA,OAAA,IAAA,IAAA,QAAA,EAAA;AAEA,IAAA,YAAA,IAAA,IAAA,CAAA,IAAA;AACA,IAAA,gBAAA,IAAA,CAAA,YAAA,CAAA,WAAA,CAAA,CAAA;AAEA,IAAA,SAAA;AACA,IAAA,QAAA,OAAA,SAAkB,CAAlB;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAc,CAAd,SAAA,CAAA,mBAAA,GAAA,UAAA,SAAA,EAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAA,SAAA,CAA0B,OAA1B,IAAqC,CAArC,SAAA,CAAA,UAAA,IAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAEA,IAAA,QAAA,IAAA,KAAA,CAAA,OAAiB,CAAjB,EAAA;AACA,IAAA,YAAA,MAAA,CAAA,IAAA,CAAA,OAAqB,CAAC,CAAtB,OAA8B,CAAC,UAA/B,GAAA,EAAA;AACA,IAAA,gBAAA,IAAA,KAAA,GAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,KAAA,GAAA,KAAA,CAAA,KAAA,CAAA,iBAAA,CAAA,CAAA;AACA,IAAA,gBAAA,IAAA,IAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;AAEA,IAAA,gBAAA,IAAA,CAAA,IAAA,EAAA;AACA,IAAA,oBAAA,OAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA;AAEA,IAAA,iBAAA;AAAA,IAAA,aAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAI,OAAJ,OAAA,CAAmB;AACnB,IAAA,KAAA,CAAA;AAEA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAA,SAAA,EAAA;AAEA,IAAA,QAAI,IAAM,KAAV,GAAA,IAAA,CAAA;AACA,IAAA,QAAI,IAAM,WAAW,GAArB,OAAA,SAAA,CAAA,gBAAA,KAAA,QAAA,CAAA;AAEA,IAAA,QAAI,IAAI,WAAR,IAAA,MAAA,CAAA,IAAkC,CAAlC,SAAA,CAAA,KAAA,CAAA,CAAA,MAAA,EAAA;AACA,IAAA,YAAM,MAAM,IAAZ,KAAA,CAAA,gFAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,IAAA,OAAA,GAAA,CAAA,WAA4B,CAA5B,GAAA,SAAA,CAAA,gBAAA,GAAA,SAAA,CAAA,KAAA,CAAA;;AAIA,IAAA,QAAA,IAAA,OAAA,OAAA,IAAA,QAAA,EAAA;AACA,IAAA,YAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,IAAA,gBAAA,IAAU,UAAV,GAAA,OAAA,CAAA,QAAA,CAAA,CAAA;;;;AAIA,IAAA,oBAAA,KAAA,GAAA,CAAA;AACA,IAAA,oBAAU,KAAK,GAAG;AAClB,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA,wBAAY,MAAM;AAClB,IAAA,oBAAU,KAAK,GAAG;AAClB,IAAA,wBAAY,QAAQ,CAAC,qBAArB,CAAA,IAA+C,CAA/C,QAAA,CAAA,CAAA;AACA,IAAA,wBAAY,QAAQ,CAAC,qBAArB,CAAA,IAAA,CAAA,eAAA,CAAA,CAAA;AACA,IAAA,wBAAY,QAAZ,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAA,GAAA,QAAA,CAAA;AACA,IAAA,wBAAA,MAAA;AACA,IAAA,oBAAA,KAAA,GAAgB;AAChB,IAAA,wBAAY,QAAZ,CAAA,yBAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA;AAEA,IAAA,wBAAA,QAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,GAAA,QAAA,CAAA;AACA,IAAA,wBAAA,MAAA;AACA,IAAA,oBAAA;AAEA,IAAA,wBAAoB,IAApB,IAAA,GAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA;AACA,IAAA,wBAAA,MAAA,IAAA,KAAA,CAAA,sBAAA,GAAA,WAAA,GAAA,QAAA,GAAA,IAAA,GAAA,QAAA,GAAA,KAAA,CAAA,IAAA,GAAA,cAAA,CAAA,CAAA;AAEA,IAAA,iBAAA;AACA,IAAA,aAAA,CAAA,CAAA;AACA,IAAA,SAAA;AAEA,IAAA,QAAI,OAAO,QAAX,CAAoB;AACpB,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAA,OAAA,EAAA;AACA,IAAA,QAAA,IAAA,UAAA,GAAA,EAAA,CAAA;AAEA,IAAA,QAAI,IAAJ,SAAA,CAAA;AACA,IAAA,QAAA,OAAA,SAAA,GAAA,OAAA,CAAA,UAAA,EAAA;AAEA,IAAA,YAAA,OAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA;AACA,IAAA,YAAQ,UAAR,CAAA,IAAuB,CAAvB,SAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,QAAA,OAAA,UAAA,CAAA;AAAA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAA2B,eAAe,GAA1C,UAAuD,SAAvD,EAAA;AACA,IAAA,QAAA,IAAM,IAAM,CAAZ,SAAA,CAAuB,QAAvB,KAAA,SAAA,EAAyD;AACzD,IAAA,YAAM,OAAN,IAAA,CAAA,WAAA,CAA8B,SAA9B,CAAA,IAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,aAAO,IAAP,IAAA,CAAA,SAAA,CAAA,WAAA,EAAA;AAAA,IAAA,YAAA,IAAA,GAAA,GAAA,SAAA,CAAA,IAAA,CAAA,SAAA,CAAA,WAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAQ,IAAR,GAAA,IAAA,CAAA,cAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA;AAUA,IAAA,YAAA,IAAA,IAAA,KAAA,SAAA,EAAA;AACA,IAAA,gBAAA,OAAA,IAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA;AAAA,IAAA,aAAW;AACX,IAAA,iBAAA;AACA,IAAA,gBAAA,MAAA,IAAA,KAAA,CAAA,6DAAA,CAAA,CAAA;AACA,IAAA,aAAA;AAEA,IAAA,SAAA;;;AAKA,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAiB,SAAjB,CAAA,eAAA,GAAA,UAAA,cAAA,EAAA,MAAA,EAAA,QAAA,EAAA,YAAA,EAAA;AACA,IAAA;AACA,IAAA;AAEA,IAAA,QAAA,IAAA,MAAA,GAAA,EAAA,QAAA,EAAA,MAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA;AAAA,IAAA,QAAE,IAAF,UAAA,GAyCG,IAzCH,CAAA,WAAA,CAAA,cAAA,EAAA,MAAA,EAAA,IAAA,EAAA,YAAA,CAAA,CAAA;AAGA,IAAA,QAAI,QAAJ,CAAA,IAAA,CAAkB,aAAlB,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,EAAA,UAAA,CAAA,CAAA;AACA,IAAA,QAAA,OAAA,UAAA,CAAA;AACA,IAAA,KAAA,CAAA;AAAA,IAAA,IAAA,gBAAA,CAAA,SAA4B,CAAC,cAA7B,GAAA,UAAA,aAAA,EAAA,QAAA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,IAAM,KAAN,GAAA,IAAA,CAAA;AACA,IAAA,QAAA,IAAA,CAAA,OAAA,EAAA;AAAA,IAAA,YAAA,OAAA,IAAA,CAAsB;AACtB,IAAA,SAAA;AAEA,IAAA,aAAA,IAAA,KAAA,CAAiB,OAAjB,CAAyB,OAAzB,CAAA,EACU;AAEV,IAAA,YAAM,OAAO,OAAK,CAAC,GAAnB,CAAA,UAAA,GAAA,EAAA,EAAA,OAAA,KAAA,CAAA,cAAA,CAAA,aAAA,EAAA,QAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,SAAK;AAAL,IAAA,aAAW,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;AAC5C,IAAA,YAAM,IAAM,OAAZ,GAAA,EAAA,CAAA;AACA,IAAA,YAAM,MAAN,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,UAA+C,GAA/C,EAAA,EAAA,OAAA,OAAA,CAAA,GAAA,CAAA,GAAA,KAAA,CAAA,cAAA,CAAA,aAAA,EAAA,QAAA,EAAA,OAAA,CAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAEA,IAAA,YAAM,OAAN,OAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,aAAA,IAAA,OAAA,OAAA,KAAA,QAAA,EAA0C;AAC1C,IAAA,YAAM,IAAM,KAAZ,GAAA,OAAA,CAA4B,KAA5B,CAAA,iBAAA,CAAA,CAAA;AAEA,IAAA,YAAM,IAAM,WAAZ,GAAA,KAAA,CAAA,CAAA,CAAA,IAAA,KAAyC,CAAC,CAA1C,CAAA,CAAA;AAEA,IAAA,YAAM,IAAI,MAAV,GAAA,OAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAQ,UAAR,GAAA,CAAA,CAAA,KAA4B,CAA5B,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAA,aAAA,GAAA,CAAA,CAAA,WAAA,CAAA;AAEA,IAAA,YAAM,IAAM,aAAZ,GAAA,WAAA,KAA4C,IAA5C,CAAA;AAEA,IAAA,YAAM,IAAI,OAAV,GAAoB,aAAa,CAAjC,MAAA,CAAA,CAAA;AACA,IAAA,YAAA,IAAQ,aAAR,EAAuB;AAEvB,IAAA,gBAAA,QAAA,GAAA,QAAA,CAAA,MAAA,EAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,YAAA,IAAA,KAAA,GAAA,aAAA,GAAA,QAAA,CAAA,aAAA,CAAA,OAAA,CAAA,GAAA,QAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA;AAAA,IAAA,YAAA,IAAA,CAAA,KAAA,IAAA,CAAA,UAAA,EAAA;AACA,IAAA,gBAAA,MAAgB,IAAhB,KAAA,CAAA,2BAAA,GAAA,OAAA,GAAA,2BAAA,GAAA,aAC4F,GAD5F,IAAA,CAAA,CAAA;AAEA,IAAA,aAAA;AACA,IAAA,YAAA,OAAA,KAAA,CAAA;AAEA,IAAA,SAAA;AAAA,IAAA,aAAA;;AAEA,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AACA,IAAA,QAAA,IAAW,KAAY,GAAvB,IAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAA,CAAA,QAAA,CAAA,qBAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,yBAAA,CAAA;AAEA,IAAA,aAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AAAA,IAAA,YAAA,IAAA,UAAA,GAAA,KAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAmC,WAAW,GAA9C,YAAA;AAEA,IAAA,QAAA,IAAM,KAAI,GAAV,IAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAA,CAAA,QAAA,CAAA,yBAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AAEA,IAAA,YAAA,IAAA,UAAA,GAAA,KAAA,CAAA,QAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,CAAA;AAAA,IAAA,YAAA,IAAA,OAAA,GAAA,KAAA,CAAA,UAAA,CAAA,CAAA;;AAEA,IAAA,SAAA,CAAA,CAAA;AAGA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAA,CAAA,SAAA,CAAA,cAAA,GAAA,UAAA,OAAA,EAAA;AACA,IAAA,QAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AACA,IAAA;AAEA,IAAA,QAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA,EAAA,OAAA,KAAA,CAAA,kBAAA,CAAA,QAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA,CAAA,YAAA,CAAA,EAAA,CAAA,CAAA;AACA,IAAA,QAAI,IAAJ,UAAA,CAAmB,IAAnB,CAAA,kBAAA,CAAA,UAAA,CACwC,EADxC;AAEA,IAAA,YAAA,IAAA,CAAA,kBAAA,CAAA,UAAA,CAAA,OAAA,CAAA,CAAA;AAEA,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;AACA,IAAA,IAAA,gBAAgB,CAAhB,SAAA,CAAA,YAAA,GAAA,UAAA,OAAA,EAAA;AACA,IAAA,QAAA,MAAA,IAAA,KAAA,CAAA,sBAAA,GAAA,IAAA,CAAA,IAAA,GAAA,mCAAA,GAAA,OAAA,GAAA,IAAA,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AAAA,IAAA,IAAA,gBA9XA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAA,IAAA,EA8XA;AAGA,IAAA,QAAA,IAAA,CAAA,OAAA,CAAA,SAAA,GAAA,IAAA,CAAA;AACA,IAAA,QAAA,OAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAgC,OAAhC,CAAwC,UAAxC,CAAA,CAAA;AACA,IAAA,KAAA,CAAA;AAEA,IAAA,IAAA,OAAA,gBAAA,CAAA;AACA,IAAA,CAAA,EAAA,CAAE,CAAF;AACA,IAAA,SAAA,SAAA,CAAA,QAAA,EAAA;;AAGA,IAAA,CAAA;AACA,IAAA,SAAA,UAAA,CAAkB,KAAlB,EAAA;AACA,IAAA,IAAA,OAAA,OAAA,KAAA,KAAA,UAAA,CAAA;;AD9dA,IAAA;;;;;;;;;;AAcA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA,IAAE,eAA2C,CAA7C;AACA,IAAA,SAAA,kBAAA,CAAA,QAAA,EAAA;AACA,IAAA,IAAE,eAAe,GAAjB,QAAA,CAAA;AACA,IAAA,CAAC;AAED,IAAA,SAAA,eAAA,GAAA;AACA,IAAA,IAAE,IAAF,QAAc,GAAd,eAAA,CAAA;AACA,IAAA,IAAA,eAAA,GAAA,IAAA,CAAA;AAEA,IAAA,IAAA,OAAA,QAAA,CAAA;AACA,IAAA,CAAA;AACA,IAAA,SAAA,gBAAA,CAAA,CAAA,EAAA;AAEA,IAAA,IAAA,OAAA,CAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA;AACA,IAAA,CAAA;AACA,IAAA,SAAA,cAAA,CAAA,CAAA,EAAA;AAEA,IAAA,IAAa,OAAb,CAAA,CAAA,GAAA,CAAA,UAAA,CAAA,CAAA;;;;;AAKA,IAAA,IAAE,iBAAF,GAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;AACA,IAAA;;AD1BA,IAAA,IAAA,EAAA,OAAA,EAAA,YAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,IAAA,EAAA,CAAA,WAAA,CAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA,IAAA,IAAA,aAAA,GAAA,CAAA,YAAA;AAFA,IAAA,IAAA,SAAA,aAAA;AAEA,IAAA;AAAA,IAAA,QAAA,QAAA;;;;;;;;;;;;AAaA,IAAA,IAAA,aAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAEoC,SAFpC,EAAA,OAAA,EAAA,MAAA,sCAAA;AAIA,IAAA,QAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AAEA,IAAA,QAAA,IAAA,OAAmB,KAAnB,KAAA,CAAA,EAAA;AAAA,IAAA,YAAA,OAAA,GAAA,EAAA,CAAA;AAAA,IAAA,SAAA;AACA,IAAA,QAAA,IAAc,gBAAd,GAAiC,mBAAjC,GAAA,OAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAA,UAAA,GAAA,QAAiC,CAAC,gBAAgB,EAAlD,EAAA,CAAA;AACA,IAAA,aAAA,KAAA,CAAA,YAAA,EAAA,IAAA,CAAoC,QAApC,CAAA;AACA,IAAA,aAAA,MAAA,CAAA;AACA,IAAA,YAAA,QAAA,EAAA,SAAA;AACA,IAAA,YAAA,UAAA,QAAA,EAA4B,SAA5B,EAAA;AACA,IAAA,gBAAA,IAAA,SAAA,CAAA,GAAA,CAAA,aAAA,CAA2C,EAA3C;;AAEA,IAAA,wBAAA,SAAA;AACA,IAAA,wBAAA,UAAA,mBAAA,EAAA;AACA,IAAA,4BAAA,IAAA,kBAAA,GAAA,mBAAA,CAAA,UAAwF,CAAxF;AACA,IAAA,4BAAA,IAAA,QAA8B,GAA9B,KAAA,CAAA,QAAA,CAAA;AACA,IAAA;AACA,IAAA,4BAAA,IAAA,aAAA,GAAA,UAAA,QAAA,EAAA;AAAA,IAAA,gCAAA,kBAAA,CAAA,IAAA,CAAA,mBAAA,EAAA,YAAA;AACA,IAAA,oCAAA,IAA4B,cAAc,GAA1C,QAAqD,CACrB,GADhC,CAAAD,yBAAA,CAAA,CAAA;AAEA,IAAA,oCAAA,IAAA,cAAA,CAAA,QAAA,EAAA,EAAA;AACA,IAAA,wCAAA,QAAA,EAAA,CAAA;AACA,IAAA,qCAAA;AAEA,IAAA,yCAAA;AACA,IAAA,wCAAA,cAAgD,CAAC,UAAjD,CAAA,aAAA,CAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AACA,IAAA,qCAAA;AACA,IAAA,iCAAA,CAAA,CAAA;AACA,IAAA,6BAAA,CAAA;AACA,IAAA,4BAAA,mBAAA,CAAA,UAAA,GAAA,aAAA,CAAA;AACA,IAAA,4BAAA,OAAA,mBAAA,CAAA;AAEA,IAAA,yBAAA;AACA,IAAA,qBAAuB,CAAvB,CAAA;AACA,IAAA,iBAAA;AACA,IAAA,aAAA;;AAGA,IAAA,aAAA,GAAgB,CAAhB;AACA,IAAA,YAAA,SAAoB;;AAGpBD,IAAAA,gBAAgBA,KAAhBA,CAAAA,SAAAA,GAAwC,SAAxCA,CAAAA;;;;AAKA,IAAA;AACA,IAAA,gBAAA,OAAA,CAAwB,SAAxB,CAAkC,CAAlC,IAAA,CAAA,aAAA,CAAA,YAAA,CAAA,EAAA,KAAA,CAAA,QAAA,CAAA,CAAA;AACA,IAAA;AAEA,IAAA;AACA,IAAA;AACA,IAAA,gBAAA,UAAA,CAAA,YAAA;AACA,IAAA,oBAAA,IAAA,UAAA,GAAA,SAAA,CAAA,GAAA,CAAA,YAAA,CAAA,CAAA;AAEA,IAAA,oBAAA,IAAA,YAAwC,GAAxC,KAAA,CAAA,MAAA,CAAA,gBAAA,CAAA,SAAA,CAAA,YAAA,EAAiG,OAAjG,UAAA,CAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA;;AAGA,IAAA,iBAAA,EAAA,CAAA,CAAA,CAAA;AACA,IAAA,aAAA;;AAGA,IAAA,QAAI,IAAI,aAAR,GAAA,QAAA,CAAA,mBAAA,EAAA,CAAuD,gBAAvD,CAAA,CAAA,MAAA,CAAA,OAAuF,CAAC,CAAC,CAAzF;;AAGA,IAAA,QAAI,IAAI,aAAa,GAArB,MAAA,mBAAA,SAAA,CAAA,CAAA;AACA,IAAA,QAAA,aAAA,CAAA,eAAA,GAAA,SAAA,CAAA;AACA,IAAA;AACA,IAAA,QAAA,IAAM,CAAN,MAAA,CAAA,GAAA,CAAA,YAAA,EAAA,SAAA,CAAA,SAAA,EAAA,CAAA,aAAA,CAAA,IAAA,CAAA,EAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAA,IAAA;AACA,IAAA,QAAA,IAAA,aAAA,CAAA,eAAA,EAAA;AACA,IAAA,YAAA,IAAQ,yBAAR,GAAA,aAAA,CAAA,eAA+D,CAAC;AAChE,IAAA,YAAA,IAAQ,QAAM,GAAd,IAAA,CAAA,MAAA,CAAA;AACA,IAAA,YAAA,aAAA,CAAA,eAAA,GAAA,YAAA;AACA,IAAA,gBAAA,IAAA,KAAA,GAAA,IAAA,CAAA;AACA,IAAA,gBAAA,IAAA,IAAA,GAAA,SAAA,CAAA;AASA,IAAA,gBAAA,aAAA,CAAA,eAAA,GAAA,yBAAA,CAAA;AA/GA,IAAA,gBAAA,QAAA,CAAA,GAAA,CAAA,YAAA,EAAA,aAAA,CAAA,eAAA,CAAA,KAAA,CAAA,KAAA,EAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAuGA,IAAA,aAAA,CAAA;AACA,IAAA,SAAA;AACA,IAAA,KAAA,CAAA;;AAEO,IAAA,CAAP,EAAA,CAAA,CAAA;AACA,IAAA,aAAA,CAAA,UAAA,GAAA;AACA,IAAA,IAAA,EAAC,IAAI,EAAED,sBAAP,EAAA,IAAA,EAAA,CAAA,EAAA,SAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA;AACA,IAAA,CAAC,CAAD;;;;;;;;;;;;;;;;;;;;;"}
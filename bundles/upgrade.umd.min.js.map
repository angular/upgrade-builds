{"version":3,"sources":["packages/upgrade/upgrade.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","upgrade","core","platformBrowserDynamic","this","VERSION","Version","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","noNg","Error","noNgElement","cleanData","angular","bootstrap","element","injector","version","undefined","resumeBootstrap","getTestability","window","_a","nodes","INJECTOR_KEY","PropertyBinding","prop","attr","parseBinding","bracketAttr","parenAttr","bracketParenAttr","capitalAttr","charAt","toUpperCase","substr","onAttr","bindAttr","bindonAttr","DIRECTIVE_PREFIX_REGEXP","DIRECTIVE_SPECIAL_CHARS_REGEXP","onError","console","stack","log","controllerKey","name","getTypeName","type","overriddenName","toString","split","getDowngradedModuleCount","$injector","has","get","getUpgradeAppType","isFunction","validateInjectionKey","downgradedModule","injectionKey","attemptedAction","upgradeAppType","downgradedModuleCount","Deferred","_this","promise","Promise","res","rej","resolve","reject","strictEquals","val1","val2","_matches","INITIAL_VALUE","__UNINITIALIZED__","DowngradeComponentAdapter","attrs","scope","ngModel","parentInjector","$compile","$parse","componentFactory","wrapCallback","implementsOnChanges","inputChangeCount","inputChanges","componentScope","$new","compileContents","compiledProjectableNodes","linkFns","groupProjectableNodes","map","empty","forEach","linkFn","clone","append","createComponent","projectableNodes","childInjector","Injector","providers","provide","useValue","parent","componentRef","viewChangeDetector","ChangeDetectorRef","changeDetector","changeDetectorRef","component","instance","testability","Testability","TestabilityRegistry","registerApplication","location","nativeElement","hookupNgModel","supportsNgModel","writeValue","registerOnChange","$render","$viewValue","$setViewValue","bind","registerOnTouched","$setTouched","setupInputs","manuallyAttachView","propagateDigest","inputs","_loop_1","prevValue","input","propName","templateName","expr","observeFn_1","currValue","updateInput","$observe","unwatch_1","this_1","$watch","watchFn","detectChanges","componentType","ngOnChanges","markForCheck","unwatch_2","ApplicationRef","attachView","hostView","setupOutputs","outputs","j","output","substring","subscribeToOutput","isAssignment","getter","setter","emitter","subscribe","v","$event","registerCleanup","testabilityRegistry","destroyComponentRef","destroy","destroyed","on","$destroy","$on","unregisterApplication","getInjector","SimpleChange","groupNodesBySelector","ngContentSelectors","ii","jj","node","ngContentIndex","findMatchingNgContentIndex","contents","ngContentIndices","wildcardNgContentIndex","selector","matchesSelector","sort","el","elProto","Element","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","nodeType","Node","ELEMENT_NODE","SyncPromise","resolved","callbacks","all","valuesOrPromises","aggrPromise","resolvedCount","results","idx","isThenable","obj","then","callback","ParentInjectorPromise","_super","injectorKey","data","REQUIRE_PREFIX_RE","UpgradeHelper","elementRef","directive","$controller","$element","getDirective","directives","compile","link","notSupported","replace","terminal","getTemplate","fetchRemoteTemplate","template","getOrCall","templateUrl","$templateCache_1","url_1","$httpBackend","status","response","put","buildController","controllerType","$scope","controller","controllerAs","compileTemplate","compileHtml","onDestroy","controllerInstance","$onDestroy","querySelectorAll","prepareTransclusion","transclude","contentChildNodes","extractChildNodes","attachChildrenFn","cloneAttachFn","$template","slots_1","slotMap_1","filledSlots_1","keys","slotName","optional","directiveNormalize","_","letter","nodeName","toLowerCase","filter","cloneAttach","$$slots","TEXT_NODE","nodeValue","resolveAndBindRequiredControllers","directiveRequire","getDirectiveRequire","requiredControllers","resolveRequire","bindToController","isMap","requiredControllersMap_1","key","html","innerHTML","childNodes","childNode","firstChild","removeChild","match","isArray","req","value_1","inheritType","name_1","isOptional","searchParents","startOnParent","ctrlKey","elem","inheritedData","property","args","_i","feature","CAMEL_CASE","INITIAL_VALUE$1","UpgradeNg1ComponentAdapterBuilder","inputsRename","outputsRename","propertyOutputs","checkProperties","propertyMap","MyClass","decorators","Directive","jit","ctorParameters","Inject","ElementRef","UpgradeNg1ComponentAdapter","extractBindings","btcIsObject","context","definition","bindingType","bindingOptions","attrName","inputName","inputNameRename","outputName","outputNameRename","outputNameRenameChange","json","JSON","stringify","exportedComponents","promises","exportedComponent","helper","propOuts","destinationObj","checkLastValues","EventEmitter","indexOf","setComponentProperty","emit","k","ngOnInit","attachChildNodes","$onInit","preLink","pre","postLink","post","parentBoundTranscludeFn","$postLink","changes","ng1Changes","change","currentValue","$onChanges","ngDoCheck","lastValues","$doCheck","ngOnDestroy","String","upgradeCount","UpgradeAdapter","ng2AppModule","compilerOptions","idPrefix","downgradedComponents","ng1ComponentsToBeUpgraded","upgradedProviders","moduleRef","downgradeNg2Component","downgradeComponent","info","directiveFactory","ngZone","isNgUpgradeLite","cb","NgZone","isInAngularZone","run","hasMultipleDowngradedModules","restrict","required","moduleInjector","ranAsync","lazyModuleRefKey","lazyModuleRef","doDowngrade","ComponentFactoryResolver","resolveComponentFactory","injectorPromise","facade","$evalAsync","downgradeFn","pInjector","mInjector","_b","upgradeNg1Component","registerForNg1Tests","modules","windowNgMock","mock","declareNg1Module","ng1Module","UpgradeAdapterRef","ng2BootstrapDeferred","ng1Injector","_bootstrapDone","element$1","config","windowAngular","ng1BootstrapPromise","originalResumeBootstrap_1","upgradeNg1Provider","options","asToken","useFactory","deps","downgradeNg2Provider","token","downgradeInjectable","injectableName","original$applyFn","rootScopePrototype","delayApplyExps","upgradeAdapter","platformRef","enableLongStackTrace","Zone","constant","Compiler","decorator","rootScopeDelegate","$apply","exp","testabilityDelegate","originalWhenStable","whenStable","newWhenStable","ng2Testability","isStable","rootScope","ngModule","imports","resolveForwardRef","entryComponents","DynamicNgUpgradeModule","ngDoBootstrap","NgModule","bootstrapModule","ref","shift","subscription","onMicrotaskEmpty","$$phase","isDevMode","warn","$digest","unsubscribe","catch","_readyFn","ng1RootScope","ng2ModuleRef","ng2Injector","ngModuleRef","ready","fn","dispose","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license Angular v10.0.0-rc.0+126.sha-1fce6d6\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser-dynamic')) :\n    typeof define === 'function' && define.amd ? define('@angular/upgrade', ['exports', '@angular/core', '@angular/platform-browser-dynamic'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.upgrade = {}), global.ng.core, global.ng.platformBrowserDynamic));\n}(this, (function (exports, core, platformBrowserDynamic) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var VERSION = new core.Version('10.0.0-rc.0+126.sha-1fce6d6');\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n    }\r\n\r\n    function __values(o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\r\n\r\n    function __classPrivateFieldGet(receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    }\r\n\r\n    function __classPrivateFieldSet(receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noNg() {\n        throw new Error('AngularJS v1.x is not loaded!');\n    }\n    var noNgElement = (function () { return noNg(); });\n    noNgElement.cleanData = noNg;\n    var angular = {\n        bootstrap: noNg,\n        module: noNg,\n        element: noNgElement,\n        injector: noNg,\n        version: undefined,\n        resumeBootstrap: noNg,\n        getTestability: noNg\n    };\n    try {\n        if (window.hasOwnProperty('angular')) {\n            angular = window.angular;\n        }\n    }\n    catch (_a) {\n        // ignore in CJS mode.\n    }\n    /**\n     * @deprecated Use `setAngularJSGlobal` instead.\n     *\n     * @publicApi\n     */\n    function setAngularLib(ng) {\n        setAngularJSGlobal(ng);\n    }\n    /**\n     * @deprecated Use `getAngularJSGlobal` instead.\n     *\n     * @publicApi\n     */\n    function getAngularLib() {\n        return getAngularJSGlobal();\n    }\n    /**\n     * Resets the AngularJS global.\n     *\n     * Used when AngularJS is loaded lazily, and not available on `window`.\n     *\n     * @publicApi\n     */\n    function setAngularJSGlobal(ng) {\n        angular = ng;\n    }\n    /**\n     * Returns the current AngularJS global.\n     *\n     * @publicApi\n     */\n    function getAngularJSGlobal() {\n        return angular;\n    }\n    var bootstrap = function (e, modules, config) {\n        return angular.bootstrap(e, modules, config);\n    };\n    // Do not declare as `module` to avoid webpack bug\n    // (see https://github.com/angular/angular/issues/30050).\n    var module_ = function (prefix, dependencies) {\n        return angular.module(prefix, dependencies);\n    };\n    var element = (function (e) { return angular.element(e); });\n    element.cleanData = function (nodes) { return angular.element.cleanData(nodes); };\n    var injector = function (modules, strictDi) { return angular.injector(modules, strictDi); };\n    var resumeBootstrap = function () { return angular.resumeBootstrap(); };\n    var getTestability = function (e) { return angular.getTestability(e); };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var $COMPILE = '$compile';\n    var $CONTROLLER = '$controller';\n    var $DELEGATE = '$delegate';\n    var $EXCEPTION_HANDLER = '$exceptionHandler';\n    var $HTTP_BACKEND = '$httpBackend';\n    var $INJECTOR = '$injector';\n    var $INTERVAL = '$interval';\n    var $PARSE = '$parse';\n    var $PROVIDE = '$provide';\n    var $ROOT_SCOPE = '$rootScope';\n    var $SCOPE = '$scope';\n    var $TEMPLATE_CACHE = '$templateCache';\n    var $TEMPLATE_REQUEST = '$templateRequest';\n    var $$TESTABILITY = '$$testability';\n    var COMPILER_KEY = '$$angularCompiler';\n    var DOWNGRADED_MODULE_COUNT_KEY = '$$angularDowngradedModuleCount';\n    var GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\n    var INJECTOR_KEY = '$$angularInjector';\n    var LAZY_MODULE_REF = '$$angularLazyModuleRef';\n    var NG_ZONE_KEY = '$$angularNgZone';\n    var UPGRADE_APP_TYPE_KEY = '$$angularUpgradeAppType';\n    var REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\n    var REQUIRE_NG_MODEL = '?ngModel';\n    var UPGRADE_MODULE_NAME = '$$UpgradeModule';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `PropertyBinding` represents a mapping between a property name\n     * and an attribute name. It is parsed from a string of the form\n     * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n     * and attribute have the same identifier.\n     */\n    var PropertyBinding = /** @class */ (function () {\n        function PropertyBinding(prop, attr) {\n            this.prop = prop;\n            this.attr = attr;\n            this.parseBinding();\n        }\n        PropertyBinding.prototype.parseBinding = function () {\n            this.bracketAttr = \"[\" + this.attr + \"]\";\n            this.parenAttr = \"(\" + this.attr + \")\";\n            this.bracketParenAttr = \"[(\" + this.attr + \")]\";\n            var capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n            this.onAttr = \"on\" + capitalAttr;\n            this.bindAttr = \"bind\" + capitalAttr;\n            this.bindonAttr = \"bindon\" + capitalAttr;\n        };\n        return PropertyBinding;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\n    var DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n    function onError(e) {\n        // TODO: (misko): We seem to not have a stack trace here!\n        if (console.error) {\n            console.error(e, e.stack);\n        }\n        else {\n            // tslint:disable-next-line:no-console\n            console.log(e, e.stack);\n        }\n        throw e;\n    }\n    function controllerKey(name) {\n        return '$' + name + 'Controller';\n    }\n    function directiveNormalize(name) {\n        return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n            .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, function (_, letter) { return letter.toUpperCase(); });\n    }\n    function getTypeName(type) {\n        // Return the name of the type or the first line of its stringified version.\n        return type.overriddenName || type.name || type.toString().split('\\n')[0];\n    }\n    function getDowngradedModuleCount($injector) {\n        return $injector.has(DOWNGRADED_MODULE_COUNT_KEY) ? $injector.get(DOWNGRADED_MODULE_COUNT_KEY) :\n            0;\n    }\n    function getUpgradeAppType($injector) {\n        return $injector.has(UPGRADE_APP_TYPE_KEY) ? $injector.get(UPGRADE_APP_TYPE_KEY) :\n            0 /* None */;\n    }\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n    function validateInjectionKey($injector, downgradedModule, injectionKey, attemptedAction) {\n        var upgradeAppType = getUpgradeAppType($injector);\n        var downgradedModuleCount = getDowngradedModuleCount($injector);\n        // Check for common errors.\n        switch (upgradeAppType) {\n            case 1 /* Dynamic */:\n            case 2 /* Static */:\n                if (downgradedModule) {\n                    throw new Error(\"Error while \" + attemptedAction + \": 'downgradedModule' unexpectedly specified.\\n\" +\n                        'You should not specify a value for \\'downgradedModule\\', unless you are downgrading ' +\n                        'more than one Angular module (via \\'downgradeModule()\\').');\n                }\n                break;\n            case 3 /* Lite */:\n                if (!downgradedModule && (downgradedModuleCount >= 2)) {\n                    throw new Error(\"Error while \" + attemptedAction + \": 'downgradedModule' not specified.\\n\" +\n                        'This application contains more than one downgraded Angular module, thus you need to ' +\n                        'always specify \\'downgradedModule\\' when downgrading components and injectables.');\n                }\n                if (!$injector.has(injectionKey)) {\n                    throw new Error(\"Error while \" + attemptedAction + \": Unable to find the specified downgraded module.\\n\" +\n                        'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n                        'application?');\n                }\n                break;\n            default:\n                throw new Error(\"Error while \" + attemptedAction + \": Not a valid '@angular/upgrade' application.\\n\" +\n                    'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n                    'application?');\n        }\n    }\n    var Deferred = /** @class */ (function () {\n        function Deferred() {\n            var _this = this;\n            this.promise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        return Deferred;\n    }());\n    /**\n     * @return Whether the passed-in component implements the subset of the\n     *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n     *     compatibility.\n     */\n    function supportsNgModel(component) {\n        return typeof component.writeValue === 'function' &&\n            typeof component.registerOnChange === 'function';\n    }\n    /**\n     * Glue the AngularJS `NgModelController` (if it exists) to the component\n     * (if it implements the needed subset of the `ControlValueAccessor` interface).\n     */\n    function hookupNgModel(ngModel, component) {\n        if (ngModel && supportsNgModel(component)) {\n            ngModel.$render = function () {\n                component.writeValue(ngModel.$viewValue);\n            };\n            component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n            if (typeof component.registerOnTouched === 'function') {\n                component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n            }\n        }\n    }\n    /**\n     * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n     */\n    function strictEquals(val1, val2) {\n        return val1 === val2 || (val1 !== val1 && val2 !== val2);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var INITIAL_VALUE = {\n        __UNINITIALIZED__: true\n    };\n    var DowngradeComponentAdapter = /** @class */ (function () {\n        function DowngradeComponentAdapter(element, attrs, scope, ngModel, parentInjector, $injector, $compile, $parse, componentFactory, wrapCallback) {\n            this.element = element;\n            this.attrs = attrs;\n            this.scope = scope;\n            this.ngModel = ngModel;\n            this.parentInjector = parentInjector;\n            this.$injector = $injector;\n            this.$compile = $compile;\n            this.$parse = $parse;\n            this.componentFactory = componentFactory;\n            this.wrapCallback = wrapCallback;\n            this.implementsOnChanges = false;\n            this.inputChangeCount = 0;\n            this.inputChanges = {};\n            this.componentScope = scope.$new();\n        }\n        DowngradeComponentAdapter.prototype.compileContents = function () {\n            var _this = this;\n            var compiledProjectableNodes = [];\n            var projectableNodes = this.groupProjectableNodes();\n            var linkFns = projectableNodes.map(function (nodes) { return _this.$compile(nodes); });\n            this.element.empty();\n            linkFns.forEach(function (linkFn) {\n                linkFn(_this.scope, function (clone) {\n                    compiledProjectableNodes.push(clone);\n                    _this.element.append(clone);\n                });\n            });\n            return compiledProjectableNodes;\n        };\n        DowngradeComponentAdapter.prototype.createComponent = function (projectableNodes) {\n            var providers = [{ provide: $SCOPE, useValue: this.componentScope }];\n            var childInjector = core.Injector.create({ providers: providers, parent: this.parentInjector, name: 'DowngradeComponentAdapter' });\n            this.componentRef =\n                this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n            this.viewChangeDetector = this.componentRef.injector.get(core.ChangeDetectorRef);\n            this.changeDetector = this.componentRef.changeDetectorRef;\n            this.component = this.componentRef.instance;\n            // testability hook is commonly added during component bootstrap in\n            // packages/core/src/application_ref.bootstrap()\n            // in downgraded application, component creation will take place here as well as adding the\n            // testability hook.\n            var testability = this.componentRef.injector.get(core.Testability, null);\n            if (testability) {\n                this.componentRef.injector.get(core.TestabilityRegistry)\n                    .registerApplication(this.componentRef.location.nativeElement, testability);\n            }\n            hookupNgModel(this.ngModel, this.component);\n        };\n        DowngradeComponentAdapter.prototype.setupInputs = function (manuallyAttachView, propagateDigest) {\n            var _this = this;\n            if (propagateDigest === void 0) { propagateDigest = true; }\n            var attrs = this.attrs;\n            var inputs = this.componentFactory.inputs || [];\n            var _loop_1 = function (i) {\n                var input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n                var expr = null;\n                if (attrs.hasOwnProperty(input.attr)) {\n                    var observeFn_1 = (function (prop) {\n                        var prevValue = INITIAL_VALUE;\n                        return function (currValue) {\n                            // Initially, both `$observe()` and `$watch()` will call this function.\n                            if (!strictEquals(prevValue, currValue)) {\n                                if (prevValue === INITIAL_VALUE) {\n                                    prevValue = currValue;\n                                }\n                                _this.updateInput(prop, prevValue, currValue);\n                                prevValue = currValue;\n                            }\n                        };\n                    })(input.prop);\n                    attrs.$observe(input.attr, observeFn_1);\n                    // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n                    // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n                    // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n                    var unwatch_1 = this_1.componentScope.$watch(function () {\n                        unwatch_1();\n                        unwatch_1 = null;\n                        observeFn_1(attrs[input.attr]);\n                    });\n                }\n                else if (attrs.hasOwnProperty(input.bindAttr)) {\n                    expr = attrs[input.bindAttr];\n                }\n                else if (attrs.hasOwnProperty(input.bracketAttr)) {\n                    expr = attrs[input.bracketAttr];\n                }\n                else if (attrs.hasOwnProperty(input.bindonAttr)) {\n                    expr = attrs[input.bindonAttr];\n                }\n                else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n                    expr = attrs[input.bracketParenAttr];\n                }\n                if (expr != null) {\n                    var watchFn = (function (prop) { return function (currValue, prevValue) {\n                        return _this.updateInput(prop, prevValue, currValue);\n                    }; })(input.prop);\n                    this_1.componentScope.$watch(expr, watchFn);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < inputs.length; i++) {\n                _loop_1(i);\n            }\n            // Invoke `ngOnChanges()` and Change Detection (when necessary)\n            var detectChanges = function () { return _this.changeDetector.detectChanges(); };\n            var prototype = this.componentFactory.componentType.prototype;\n            this.implementsOnChanges = !!(prototype && prototype.ngOnChanges);\n            this.componentScope.$watch(function () { return _this.inputChangeCount; }, this.wrapCallback(function () {\n                // Invoke `ngOnChanges()`\n                if (_this.implementsOnChanges) {\n                    var inputChanges = _this.inputChanges;\n                    _this.inputChanges = {};\n                    _this.component.ngOnChanges(inputChanges);\n                }\n                _this.viewChangeDetector.markForCheck();\n                // If opted out of propagating digests, invoke change detection when inputs change.\n                if (!propagateDigest) {\n                    detectChanges();\n                }\n            }));\n            // If not opted out of propagating digests, invoke change detection on every digest\n            if (propagateDigest) {\n                this.componentScope.$watch(this.wrapCallback(detectChanges));\n            }\n            // If necessary, attach the view so that it will be dirty-checked.\n            // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n            if (manuallyAttachView || !propagateDigest) {\n                var unwatch_2 = this.componentScope.$watch(function () {\n                    unwatch_2();\n                    unwatch_2 = null;\n                    var appRef = _this.parentInjector.get(core.ApplicationRef);\n                    appRef.attachView(_this.componentRef.hostView);\n                });\n            }\n        };\n        DowngradeComponentAdapter.prototype.setupOutputs = function () {\n            var attrs = this.attrs;\n            var outputs = this.componentFactory.outputs || [];\n            for (var j = 0; j < outputs.length; j++) {\n                var output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n                var bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n                var bracketParenAttr = \"[(\" + output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8) + \")]\";\n                // order below is important - first update bindings then evaluate expressions\n                if (attrs.hasOwnProperty(bindonAttr)) {\n                    this.subscribeToOutput(output, attrs[bindonAttr], true);\n                }\n                if (attrs.hasOwnProperty(bracketParenAttr)) {\n                    this.subscribeToOutput(output, attrs[bracketParenAttr], true);\n                }\n                if (attrs.hasOwnProperty(output.onAttr)) {\n                    this.subscribeToOutput(output, attrs[output.onAttr]);\n                }\n                if (attrs.hasOwnProperty(output.parenAttr)) {\n                    this.subscribeToOutput(output, attrs[output.parenAttr]);\n                }\n            }\n        };\n        DowngradeComponentAdapter.prototype.subscribeToOutput = function (output, expr, isAssignment) {\n            var _this = this;\n            if (isAssignment === void 0) { isAssignment = false; }\n            var getter = this.$parse(expr);\n            var setter = getter.assign;\n            if (isAssignment && !setter) {\n                throw new Error(\"Expression '\" + expr + \"' is not assignable!\");\n            }\n            var emitter = this.component[output.prop];\n            if (emitter) {\n                emitter.subscribe({\n                    next: isAssignment ? function (v) { return setter(_this.scope, v); } :\n                        function (v) { return getter(_this.scope, { '$event': v }); }\n                });\n            }\n            else {\n                throw new Error(\"Missing emitter '\" + output.prop + \"' on component '\" + getTypeName(this.componentFactory.componentType) + \"'!\");\n            }\n        };\n        DowngradeComponentAdapter.prototype.registerCleanup = function () {\n            var _this = this;\n            var testabilityRegistry = this.componentRef.injector.get(core.TestabilityRegistry);\n            var destroyComponentRef = this.wrapCallback(function () { return _this.componentRef.destroy(); });\n            var destroyed = false;\n            this.element.on('$destroy', function () { return _this.componentScope.$destroy(); });\n            this.componentScope.$on('$destroy', function () {\n                if (!destroyed) {\n                    destroyed = true;\n                    testabilityRegistry.unregisterApplication(_this.componentRef.location.nativeElement);\n                    destroyComponentRef();\n                }\n            });\n        };\n        DowngradeComponentAdapter.prototype.getInjector = function () {\n            return this.componentRef.injector;\n        };\n        DowngradeComponentAdapter.prototype.updateInput = function (prop, prevValue, currValue) {\n            if (this.implementsOnChanges) {\n                this.inputChanges[prop] = new core.SimpleChange(prevValue, currValue, prevValue === currValue);\n            }\n            this.inputChangeCount++;\n            this.component[prop] = currValue;\n        };\n        DowngradeComponentAdapter.prototype.groupProjectableNodes = function () {\n            var ngContentSelectors = this.componentFactory.ngContentSelectors;\n            return groupNodesBySelector(ngContentSelectors, this.element.contents());\n        };\n        return DowngradeComponentAdapter;\n    }());\n    /**\n     * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n     */\n    function groupNodesBySelector(ngContentSelectors, nodes) {\n        var projectableNodes = [];\n        var wildcardNgContentIndex;\n        for (var i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n            projectableNodes[i] = [];\n        }\n        for (var j = 0, jj = nodes.length; j < jj; ++j) {\n            var node = nodes[j];\n            var ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n            if (ngContentIndex != null) {\n                projectableNodes[ngContentIndex].push(node);\n            }\n        }\n        return projectableNodes;\n    }\n    function findMatchingNgContentIndex(element, ngContentSelectors) {\n        var ngContentIndices = [];\n        var wildcardNgContentIndex = -1;\n        for (var i = 0; i < ngContentSelectors.length; i++) {\n            var selector = ngContentSelectors[i];\n            if (selector === '*') {\n                wildcardNgContentIndex = i;\n            }\n            else {\n                if (matchesSelector(element, selector)) {\n                    ngContentIndices.push(i);\n                }\n            }\n        }\n        ngContentIndices.sort();\n        if (wildcardNgContentIndex !== -1) {\n            ngContentIndices.push(wildcardNgContentIndex);\n        }\n        return ngContentIndices.length ? ngContentIndices[0] : null;\n    }\n    var _matches;\n    function matchesSelector(el, selector) {\n        if (!_matches) {\n            var elProto = Element.prototype;\n            _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n                elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n        }\n        return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isThenable(obj) {\n        return !!obj && isFunction(obj.then);\n    }\n    /**\n     * Synchronous, promise-like object.\n     */\n    var SyncPromise = /** @class */ (function () {\n        function SyncPromise() {\n            this.resolved = false;\n            this.callbacks = [];\n        }\n        SyncPromise.all = function (valuesOrPromises) {\n            var aggrPromise = new SyncPromise();\n            var resolvedCount = 0;\n            var results = [];\n            var resolve = function (idx, value) {\n                results[idx] = value;\n                if (++resolvedCount === valuesOrPromises.length)\n                    aggrPromise.resolve(results);\n            };\n            valuesOrPromises.forEach(function (p, idx) {\n                if (isThenable(p)) {\n                    p.then(function (v) { return resolve(idx, v); });\n                }\n                else {\n                    resolve(idx, p);\n                }\n            });\n            return aggrPromise;\n        };\n        SyncPromise.prototype.resolve = function (value) {\n            // Do nothing, if already resolved.\n            if (this.resolved)\n                return;\n            this.value = value;\n            this.resolved = true;\n            // Run the queued callbacks.\n            this.callbacks.forEach(function (callback) { return callback(value); });\n            this.callbacks.length = 0;\n        };\n        SyncPromise.prototype.then = function (callback) {\n            if (this.resolved) {\n                callback(this.value);\n            }\n            else {\n                this.callbacks.push(callback);\n            }\n        };\n        return SyncPromise;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * A helper function that allows an Angular component to be used from AngularJS.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n     * library for hybrid upgrade apps that support AOT compilation*\n     *\n     * This helper function returns a factory function to be used for registering\n     * an AngularJS wrapper directive for \"downgrading\" an Angular component.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * Let's assume that you have an Angular component called `ng2Heroes` that needs\n     * to be made available in AngularJS templates.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes\"}\n     *\n     * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n     * that will make this Angular component available inside AngularJS templates.\n     * The `downgradeComponent()` function returns a factory function that we\n     * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-wrapper\"}\n     *\n     * For more details and examples on downgrading Angular components to AngularJS components please\n     * visit the [Upgrade guide](guide/upgrade#using-angular-components-from-angularjs-code).\n     *\n     * @param info contains information about the Component that is being downgraded:\n     *\n     * - `component: Type<any>`: The type of the Component that will be downgraded\n     * - `downgradedModule?: string`: The name of the downgraded module (if any) that the component\n     *   \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose\n     *   corresponding Angular module will be bootstrapped, when the component needs to be instantiated.\n     *   <br />\n     *   (This option is only necessary when using `downgradeModule()` to downgrade more than one\n     *   Angular module.)\n     * - `propagateDigest?: boolean`: Whether to perform {@link ChangeDetectorRef#detectChanges\n     *   change detection} on the component on every\n     *   [$digest](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest). If set to `false`,\n     *   change detection will still be performed when any of the component's inputs changes.\n     *   (Default: true)\n     *\n     * @returns a factory function that can be used to register the component in an\n     * AngularJS module.\n     *\n     * @publicApi\n     */\n    function downgradeComponent(info) {\n        var directiveFactory = function ($compile, $injector, $parse) {\n            // When using `downgradeModule()`, we need to handle certain things specially. For example:\n            // - We always need to attach the component view to the `ApplicationRef` for it to be\n            //   dirty-checked.\n            // - We need to ensure callbacks to Angular APIs (e.g. change detection) are run inside the\n            //   Angular zone.\n            //   NOTE: This is not needed, when using `UpgradeModule`, because `$digest()` will be run\n            //         inside the Angular zone (except if explicitly escaped, in which case we shouldn't\n            //         force it back in).\n            var isNgUpgradeLite = getUpgradeAppType($injector) === 3 /* Lite */;\n            var wrapCallback = !isNgUpgradeLite ? function (cb) { return cb; } : function (cb) { return function () { return core.NgZone.isInAngularZone() ? cb() : ngZone.run(cb); }; };\n            var ngZone;\n            // When downgrading multiple modules, special handling is needed wrt injectors.\n            var hasMultipleDowngradedModules = isNgUpgradeLite && (getDowngradedModuleCount($injector) > 1);\n            return {\n                restrict: 'E',\n                terminal: true,\n                require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n                link: function (scope, element, attrs, required) {\n                    // We might have to compile the contents asynchronously, because this might have been\n                    // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n                    // been compiled.\n                    var ngModel = required[1];\n                    var parentInjector = required[0];\n                    var moduleInjector = undefined;\n                    var ranAsync = false;\n                    if (!parentInjector || hasMultipleDowngradedModules) {\n                        var downgradedModule = info.downgradedModule || '';\n                        var lazyModuleRefKey = \"\" + LAZY_MODULE_REF + downgradedModule;\n                        var attemptedAction = \"instantiating component '\" + getTypeName(info.component) + \"'\";\n                        validateInjectionKey($injector, downgradedModule, lazyModuleRefKey, attemptedAction);\n                        var lazyModuleRef = $injector.get(lazyModuleRefKey);\n                        moduleInjector = lazyModuleRef.injector || lazyModuleRef.promise;\n                    }\n                    // Notes:\n                    //\n                    // There are two injectors: `finalModuleInjector` and `finalParentInjector` (they might be\n                    // the same instance, but that is irrelevant):\n                    // - `finalModuleInjector` is used to retrieve `ComponentFactoryResolver`, thus it must be\n                    //   on the same tree as the `NgModule` that declares this downgraded component.\n                    // - `finalParentInjector` is used for all other injection purposes.\n                    //   (Note that Angular knows to only traverse the component-tree part of that injector,\n                    //   when looking for an injectable and then switch to the module injector.)\n                    //\n                    // There are basically three cases:\n                    // - If there is no parent component (thus no `parentInjector`), we bootstrap the downgraded\n                    //   `NgModule` and use its injector as both `finalModuleInjector` and\n                    //   `finalParentInjector`.\n                    // - If there is a parent component (and thus a `parentInjector`) and we are sure that it\n                    //   belongs to the same `NgModule` as this downgraded component (e.g. because there is only\n                    //   one downgraded module, we use that `parentInjector` as both `finalModuleInjector` and\n                    //   `finalParentInjector`.\n                    // - If there is a parent component, but it may belong to a different `NgModule`, then we\n                    //   use the `parentInjector` as `finalParentInjector` and this downgraded component's\n                    //   declaring `NgModule`'s injector as `finalModuleInjector`.\n                    //   Note 1: If the `NgModule` is already bootstrapped, we just get its injector (we don't\n                    //           bootstrap again).\n                    //   Note 2: It is possible that (while there are multiple downgraded modules) this\n                    //           downgraded component and its parent component both belong to the same NgModule.\n                    //           In that case, we could have used the `parentInjector` as both\n                    //           `finalModuleInjector` and `finalParentInjector`, but (for simplicity) we are\n                    //           treating this case as if they belong to different `NgModule`s. That doesn't\n                    //           really affect anything, since `parentInjector` has `moduleInjector` as ancestor\n                    //           and trying to resolve `ComponentFactoryResolver` from either one will return\n                    //           the same instance.\n                    // If there is a parent component, use its injector as parent injector.\n                    // If this is a \"top-level\" Angular component, use the module injector.\n                    var finalParentInjector = parentInjector || moduleInjector;\n                    // If this is a \"top-level\" Angular component or the parent component may belong to a\n                    // different `NgModule`, use the module injector for module-specific dependencies.\n                    // If there is a parent component that belongs to the same `NgModule`, use its injector.\n                    var finalModuleInjector = moduleInjector || parentInjector;\n                    var doDowngrade = function (injector, moduleInjector) {\n                        // Retrieve `ComponentFactoryResolver` from the injector tied to the `NgModule` this\n                        // component belongs to.\n                        var componentFactoryResolver = moduleInjector.get(core.ComponentFactoryResolver);\n                        var componentFactory = componentFactoryResolver.resolveComponentFactory(info.component);\n                        if (!componentFactory) {\n                            throw new Error(\"Expecting ComponentFactory for: \" + getTypeName(info.component));\n                        }\n                        var injectorPromise = new ParentInjectorPromise(element);\n                        var facade = new DowngradeComponentAdapter(element, attrs, scope, ngModel, injector, $injector, $compile, $parse, componentFactory, wrapCallback);\n                        var projectableNodes = facade.compileContents();\n                        facade.createComponent(projectableNodes);\n                        facade.setupInputs(isNgUpgradeLite, info.propagateDigest);\n                        facade.setupOutputs();\n                        facade.registerCleanup();\n                        injectorPromise.resolve(facade.getInjector());\n                        if (ranAsync) {\n                            // If this is run async, it is possible that it is not run inside a\n                            // digest and initial input values will not be detected.\n                            scope.$evalAsync(function () { });\n                        }\n                    };\n                    var downgradeFn = !isNgUpgradeLite ? doDowngrade : function (pInjector, mInjector) {\n                        if (!ngZone) {\n                            ngZone = pInjector.get(core.NgZone);\n                        }\n                        wrapCallback(function () { return doDowngrade(pInjector, mInjector); })();\n                    };\n                    // NOTE:\n                    // Not using `ParentInjectorPromise.all()` (which is inherited from `SyncPromise`), because\n                    // Closure Compiler (or some related tool) complains:\n                    // `TypeError: ...$src$downgrade_component_ParentInjectorPromise.all is not a function`\n                    SyncPromise.all([finalParentInjector, finalModuleInjector])\n                        .then(function (_a) {\n                        var _b = __read(_a, 2), pInjector = _b[0], mInjector = _b[1];\n                        return downgradeFn(pInjector, mInjector);\n                    });\n                    ranAsync = true;\n                }\n            };\n        };\n        // bracket-notation because of closure - see #14441\n        directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n        return directiveFactory;\n    }\n    /**\n     * Synchronous promise-like object to wrap parent injectors,\n     * to preserve the synchronous nature of AngularJS's `$compile`.\n     */\n    var ParentInjectorPromise = /** @class */ (function (_super) {\n        __extends(ParentInjectorPromise, _super);\n        function ParentInjectorPromise(element) {\n            var _this = _super.call(this) || this;\n            _this.element = element;\n            _this.injectorKey = controllerKey(INJECTOR_KEY);\n            // Store the promise on the element.\n            element.data(_this.injectorKey, _this);\n            return _this;\n        }\n        ParentInjectorPromise.prototype.resolve = function (injector) {\n            // Store the real injector on the element.\n            this.element.data(this.injectorKey, injector);\n            // Release the element to prevent memory leaks.\n            this.element = null;\n            // Resolve the promise.\n            _super.prototype.resolve.call(this, injector);\n        };\n        return ParentInjectorPromise;\n    }(SyncPromise));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * A helper function to allow an Angular service to be accessible from AngularJS.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n     * library for hybrid upgrade apps that support AOT compilation*\n     *\n     * This helper function returns a factory function that provides access to the Angular\n     * service identified by the `token` parameter.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * First ensure that the service to be downgraded is provided in an `NgModule`\n     * that will be part of the upgrade application. For example, let's assume we have\n     * defined `HeroesService`\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-service\"}\n     *\n     * and that we have included this in our upgrade app `NgModule`\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-module\"}\n     *\n     * Now we can register the `downgradeInjectable` factory function for the service\n     * on an AngularJS module.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"downgrade-ng2-heroes-service\"}\n     *\n     * Inside an AngularJS component's controller we can get hold of the\n     * downgraded service via the name we gave when downgrading.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"example-app\"}\n     *\n     * <div class=\"alert is-important\">\n     *\n     *   When using `downgradeModule()`, downgraded injectables will not be available until the Angular\n     *   module that provides them is instantiated. In order to be safe, you need to ensure that the\n     *   downgraded injectables are not used anywhere _outside_ the part of the app where it is\n     *   guaranteed that their module has been instantiated.\n     *\n     *   For example, it is _OK_ to use a downgraded service in an upgraded component that is only used\n     *   from a downgraded Angular component provided by the same Angular module as the injectable, but\n     *   it is _not OK_ to use it in an AngularJS component that may be used independently of Angular or\n     *   use it in a downgraded Angular component from a different module.\n     *\n     * </div>\n     *\n     * @param token an `InjectionToken` that identifies a service provided from Angular.\n     * @param downgradedModule the name of the downgraded module (if any) that the injectable\n     * \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose injector will\n     * be used for instantiating the injectable.<br />\n     * (This option is only necessary when using `downgradeModule()` to downgrade more than one Angular\n     * module.)\n     *\n     * @returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n     * used to register the service on an AngularJS module.\n     *\n     * @publicApi\n     */\n    function downgradeInjectable(token, downgradedModule) {\n        if (downgradedModule === void 0) { downgradedModule = ''; }\n        var factory = function ($injector) {\n            var injectorKey = \"\" + INJECTOR_KEY + downgradedModule;\n            var injectableName = isFunction(token) ? getTypeName(token) : String(token);\n            var attemptedAction = \"instantiating injectable '\" + injectableName + \"'\";\n            validateInjectionKey($injector, downgradedModule, injectorKey, attemptedAction);\n            var injector = $injector.get(injectorKey);\n            return injector.get(token);\n        };\n        factory['$inject'] = [$INJECTOR];\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Constants\n    var REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n    // Classes\n    var UpgradeHelper = /** @class */ (function () {\n        function UpgradeHelper(injector, name, elementRef, directive) {\n            this.injector = injector;\n            this.name = name;\n            this.$injector = injector.get($INJECTOR);\n            this.$compile = this.$injector.get($COMPILE);\n            this.$controller = this.$injector.get($CONTROLLER);\n            this.element = elementRef.nativeElement;\n            this.$element = element(this.element);\n            this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n        }\n        UpgradeHelper.getDirective = function ($injector, name) {\n            var directives = $injector.get(name + 'Directive');\n            if (directives.length > 1) {\n                throw new Error(\"Only support single directive definition for: \" + name);\n            }\n            var directive = directives[0];\n            // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n            // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n            if (directive.compile && !directive.link)\n                notSupported(name, 'compile');\n            if (directive.replace)\n                notSupported(name, 'replace');\n            if (directive.terminal)\n                notSupported(name, 'terminal');\n            return directive;\n        };\n        UpgradeHelper.getTemplate = function ($injector, directive, fetchRemoteTemplate, $element) {\n            if (fetchRemoteTemplate === void 0) { fetchRemoteTemplate = false; }\n            if (directive.template !== undefined) {\n                return getOrCall(directive.template, $element);\n            }\n            else if (directive.templateUrl) {\n                var $templateCache_1 = $injector.get($TEMPLATE_CACHE);\n                var url_1 = getOrCall(directive.templateUrl, $element);\n                var template = $templateCache_1.get(url_1);\n                if (template !== undefined) {\n                    return template;\n                }\n                else if (!fetchRemoteTemplate) {\n                    throw new Error('loading directive templates asynchronously is not supported');\n                }\n                return new Promise(function (resolve, reject) {\n                    var $httpBackend = $injector.get($HTTP_BACKEND);\n                    $httpBackend('GET', url_1, null, function (status, response) {\n                        if (status === 200) {\n                            resolve($templateCache_1.put(url_1, response));\n                        }\n                        else {\n                            reject(\"GET component template from '\" + url_1 + \"' returned '\" + status + \": \" + response + \"'\");\n                        }\n                    });\n                });\n            }\n            else {\n                throw new Error(\"Directive '\" + directive.name + \"' is not a component, it is missing template.\");\n            }\n        };\n        UpgradeHelper.prototype.buildController = function (controllerType, $scope) {\n            // TODO: Document that we do not pre-assign bindings on the controller instance.\n            // Quoted properties below so that this code can be optimized with Closure Compiler.\n            var locals = { '$scope': $scope, '$element': this.$element };\n            var controller = this.$controller(controllerType, locals, null, this.directive.controllerAs);\n            this.$element.data(controllerKey(this.directive.name), controller);\n            return controller;\n        };\n        UpgradeHelper.prototype.compileTemplate = function (template) {\n            if (template === undefined) {\n                template =\n                    UpgradeHelper.getTemplate(this.$injector, this.directive, false, this.$element);\n            }\n            return this.compileHtml(template);\n        };\n        UpgradeHelper.prototype.onDestroy = function ($scope, controllerInstance) {\n            if (controllerInstance && isFunction(controllerInstance.$onDestroy)) {\n                controllerInstance.$onDestroy();\n            }\n            $scope.$destroy();\n            // Clean the jQuery/jqLite data on the component+child elements.\n            // Equivelent to how jQuery/jqLite invoke `cleanData` on an Element (this.element)\n            //  https://github.com/jquery/jquery/blob/e743cbd28553267f955f71ea7248377915613fd9/src/manipulation.js#L223\n            //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/jqLite.js#L306-L312\n            // `cleanData` will invoke the AngularJS `$destroy` DOM event\n            //  https://github.com/angular/angular.js/blob/26ddc5f830f902a3d22f4b2aab70d86d4d688c82/src/Angular.js#L1911-L1924\n            element.cleanData([this.element]);\n            element.cleanData(this.element.querySelectorAll('*'));\n        };\n        UpgradeHelper.prototype.prepareTransclusion = function () {\n            var _this = this;\n            var transclude = this.directive.transclude;\n            var contentChildNodes = this.extractChildNodes();\n            var attachChildrenFn = function (scope, cloneAttachFn) {\n                // Since AngularJS v1.5.8, `cloneAttachFn` will try to destroy the transclusion scope if\n                // `$template` is empty. Since the transcluded content comes from Angular, not AngularJS,\n                // there will be no transclusion scope here.\n                // Provide a dummy `scope.$destroy()` method to prevent `cloneAttachFn` from throwing.\n                scope = scope || { $destroy: function () { return undefined; } };\n                return cloneAttachFn($template, scope);\n            };\n            var $template = contentChildNodes;\n            if (transclude) {\n                var slots_1 = Object.create(null);\n                if (typeof transclude === 'object') {\n                    $template = [];\n                    var slotMap_1 = Object.create(null);\n                    var filledSlots_1 = Object.create(null);\n                    // Parse the element selectors.\n                    Object.keys(transclude).forEach(function (slotName) {\n                        var selector = transclude[slotName];\n                        var optional = selector.charAt(0) === '?';\n                        selector = optional ? selector.substring(1) : selector;\n                        slotMap_1[selector] = slotName;\n                        slots_1[slotName] = null; // `null`: Defined but not yet filled.\n                        filledSlots_1[slotName] = optional; // Consider optional slots as filled.\n                    });\n                    // Add the matching elements into their slot.\n                    contentChildNodes.forEach(function (node) {\n                        var slotName = slotMap_1[directiveNormalize(node.nodeName.toLowerCase())];\n                        if (slotName) {\n                            filledSlots_1[slotName] = true;\n                            slots_1[slotName] = slots_1[slotName] || [];\n                            slots_1[slotName].push(node);\n                        }\n                        else {\n                            $template.push(node);\n                        }\n                    });\n                    // Check for required slots that were not filled.\n                    Object.keys(filledSlots_1).forEach(function (slotName) {\n                        if (!filledSlots_1[slotName]) {\n                            throw new Error(\"Required transclusion slot '\" + slotName + \"' on directive: \" + _this.name);\n                        }\n                    });\n                    Object.keys(slots_1).filter(function (slotName) { return slots_1[slotName]; }).forEach(function (slotName) {\n                        var nodes = slots_1[slotName];\n                        slots_1[slotName] = function (scope, cloneAttach) {\n                            return cloneAttach(nodes, scope);\n                        };\n                    });\n                }\n                // Attach `$$slots` to default slot transclude fn.\n                attachChildrenFn.$$slots = slots_1;\n                // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n                // removes all text content after the first interpolation and updates it later, after\n                // evaluating the expressions. This would result in AngularJS failing to recognize text\n                // nodes that start with an interpolation as transcluded content and use the fallback\n                // content instead.\n                // To avoid this issue, we add a\n                // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n                // to empty text nodes (which can only be a result of Angular removing their initial content).\n                // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n                //       will still fail to be detected by AngularJS v1.6+\n                $template.forEach(function (node) {\n                    if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n                        node.nodeValue = '\\u200C';\n                    }\n                });\n            }\n            return attachChildrenFn;\n        };\n        UpgradeHelper.prototype.resolveAndBindRequiredControllers = function (controllerInstance) {\n            var directiveRequire = this.getDirectiveRequire();\n            var requiredControllers = this.resolveRequire(directiveRequire);\n            if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n                var requiredControllersMap_1 = requiredControllers;\n                Object.keys(requiredControllersMap_1).forEach(function (key) {\n                    controllerInstance[key] = requiredControllersMap_1[key];\n                });\n            }\n            return requiredControllers;\n        };\n        UpgradeHelper.prototype.compileHtml = function (html) {\n            this.element.innerHTML = html;\n            return this.$compile(this.element.childNodes);\n        };\n        UpgradeHelper.prototype.extractChildNodes = function () {\n            var childNodes = [];\n            var childNode;\n            while (childNode = this.element.firstChild) {\n                this.element.removeChild(childNode);\n                childNodes.push(childNode);\n            }\n            return childNodes;\n        };\n        UpgradeHelper.prototype.getDirectiveRequire = function () {\n            var require = this.directive.require || (this.directive.controller && this.directive.name);\n            if (isMap(require)) {\n                Object.keys(require).forEach(function (key) {\n                    var value = require[key];\n                    var match = value.match(REQUIRE_PREFIX_RE);\n                    var name = value.substring(match[0].length);\n                    if (!name) {\n                        require[key] = match[0] + key;\n                    }\n                });\n            }\n            return require;\n        };\n        UpgradeHelper.prototype.resolveRequire = function (require, controllerInstance) {\n            var _this = this;\n            if (!require) {\n                return null;\n            }\n            else if (Array.isArray(require)) {\n                return require.map(function (req) { return _this.resolveRequire(req); });\n            }\n            else if (typeof require === 'object') {\n                var value_1 = {};\n                Object.keys(require).forEach(function (key) { return value_1[key] = _this.resolveRequire(require[key]); });\n                return value_1;\n            }\n            else if (typeof require === 'string') {\n                var match = require.match(REQUIRE_PREFIX_RE);\n                var inheritType = match[1] || match[3];\n                var name_1 = require.substring(match[0].length);\n                var isOptional = !!match[2];\n                var searchParents = !!inheritType;\n                var startOnParent = inheritType === '^^';\n                var ctrlKey = controllerKey(name_1);\n                var elem = startOnParent ? this.$element.parent() : this.$element;\n                var value = searchParents ? elem.inheritedData(ctrlKey) : elem.data(ctrlKey);\n                if (!value && !isOptional) {\n                    throw new Error(\"Unable to find required '\" + require + \"' in upgraded directive '\" + this.name + \"'.\");\n                }\n                return value;\n            }\n            else {\n                throw new Error(\"Unrecognized 'require' syntax on upgraded directive '\" + this.name + \"': \" + require);\n            }\n        };\n        return UpgradeHelper;\n    }());\n    function getOrCall(property) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return isFunction(property) ? property.apply(void 0, __spread(args)) : property;\n    }\n    // NOTE: Only works for `typeof T !== 'object'`.\n    function isMap(value) {\n        return value && !Array.isArray(value) && typeof value === 'object';\n    }\n    function notSupported(name, feature) {\n        throw new Error(\"Upgraded directive '\" + name + \"' contains unsupported feature: '\" + feature + \"'.\");\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CAMEL_CASE = /([A-Z])/g;\n    var INITIAL_VALUE$1 = {\n        __UNINITIALIZED__: true\n    };\n    var NOT_SUPPORTED = 'NOT_SUPPORTED';\n    var UpgradeNg1ComponentAdapterBuilder = /** @class */ (function () {\n        function UpgradeNg1ComponentAdapterBuilder(name) {\n            this.name = name;\n            this.inputs = [];\n            this.inputsRename = [];\n            this.outputs = [];\n            this.outputsRename = [];\n            this.propertyOutputs = [];\n            this.checkProperties = [];\n            this.propertyMap = {};\n            this.directive = null;\n            var selector = name.replace(CAMEL_CASE, function (all, next) { return '-' + next.toLowerCase(); });\n            var self = this;\n            // Note: There is a bug in TS 2.4 that prevents us from\n            // inlining this into @Directive\n            // TODO(tbosch): find or file a bug against TypeScript for this.\n            var directive = { selector: selector, inputs: this.inputsRename, outputs: this.outputsRename };\n            var MyClass = /** @class */ (function (_super) {\n                __extends(MyClass, _super);\n                function MyClass(scope, injector, elementRef) {\n                    var _this = this;\n                    _this = _super.call(this, new UpgradeHelper(injector, name, elementRef, self.directive || undefined), scope, self.template, self.inputs, self.outputs, self.propertyOutputs, self.checkProperties, self.propertyMap) || this;\n                    return _this;\n                }\n                MyClass.decorators = [\n                    { type: core.Directive, args: [__assign({ jit: true }, directive),] }\n                ];\n                MyClass.ctorParameters = function () { return [\n                    { type: undefined, decorators: [{ type: core.Inject, args: [$SCOPE,] }] },\n                    { type: core.Injector },\n                    { type: core.ElementRef }\n                ]; };\n                return MyClass;\n            }(UpgradeNg1ComponentAdapter));\n            this.type = MyClass;\n        }\n        UpgradeNg1ComponentAdapterBuilder.prototype.extractBindings = function () {\n            var _this = this;\n            var btcIsObject = typeof this.directive.bindToController === 'object';\n            if (btcIsObject && Object.keys(this.directive.scope).length) {\n                throw new Error(\"Binding definitions on scope and controller at the same time are not supported.\");\n            }\n            var context = (btcIsObject) ? this.directive.bindToController : this.directive.scope;\n            if (typeof context == 'object') {\n                Object.keys(context).forEach(function (propName) {\n                    var definition = context[propName];\n                    var bindingType = definition.charAt(0);\n                    var bindingOptions = definition.charAt(1);\n                    var attrName = definition.substring(bindingOptions === '?' ? 2 : 1) || propName;\n                    // QUESTION: What about `=*`? Ignore? Throw? Support?\n                    var inputName = \"input_\" + attrName;\n                    var inputNameRename = inputName + \": \" + attrName;\n                    var outputName = \"output_\" + attrName;\n                    var outputNameRename = outputName + \": \" + attrName;\n                    var outputNameRenameChange = outputNameRename + \"Change\";\n                    switch (bindingType) {\n                        case '@':\n                        case '<':\n                            _this.inputs.push(inputName);\n                            _this.inputsRename.push(inputNameRename);\n                            _this.propertyMap[inputName] = propName;\n                            break;\n                        case '=':\n                            _this.inputs.push(inputName);\n                            _this.inputsRename.push(inputNameRename);\n                            _this.propertyMap[inputName] = propName;\n                            _this.outputs.push(outputName);\n                            _this.outputsRename.push(outputNameRenameChange);\n                            _this.propertyMap[outputName] = propName;\n                            _this.checkProperties.push(propName);\n                            _this.propertyOutputs.push(outputName);\n                            break;\n                        case '&':\n                            _this.outputs.push(outputName);\n                            _this.outputsRename.push(outputNameRename);\n                            _this.propertyMap[outputName] = propName;\n                            break;\n                        default:\n                            var json = JSON.stringify(context);\n                            throw new Error(\"Unexpected mapping '\" + bindingType + \"' in '\" + json + \"' in '\" + _this.name + \"' directive.\");\n                    }\n                });\n            }\n        };\n        /**\n         * Upgrade ng1 components into Angular.\n         */\n        UpgradeNg1ComponentAdapterBuilder.resolve = function (exportedComponents, $injector) {\n            var promises = Object.keys(exportedComponents).map(function (name) {\n                var exportedComponent = exportedComponents[name];\n                exportedComponent.directive = UpgradeHelper.getDirective($injector, name);\n                exportedComponent.extractBindings();\n                return Promise\n                    .resolve(UpgradeHelper.getTemplate($injector, exportedComponent.directive, true))\n                    .then(function (template) { return exportedComponent.template = template; });\n            });\n            return Promise.all(promises);\n        };\n        return UpgradeNg1ComponentAdapterBuilder;\n    }());\n    var UpgradeNg1ComponentAdapter = /** @class */ (function () {\n        function UpgradeNg1ComponentAdapter(helper, scope, template, inputs, outputs, propOuts, checkProperties, propertyMap) {\n            this.helper = helper;\n            this.template = template;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.propOuts = propOuts;\n            this.checkProperties = checkProperties;\n            this.propertyMap = propertyMap;\n            this.controllerInstance = null;\n            this.destinationObj = null;\n            this.checkLastValues = [];\n            this.$element = null;\n            this.directive = helper.directive;\n            this.element = helper.element;\n            this.$element = helper.$element;\n            this.componentScope = scope.$new(!!this.directive.scope);\n            var controllerType = this.directive.controller;\n            if (this.directive.bindToController && controllerType) {\n                this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n                this.destinationObj = this.controllerInstance;\n            }\n            else {\n                this.destinationObj = this.componentScope;\n            }\n            for (var i = 0; i < inputs.length; i++) {\n                this[inputs[i]] = null;\n            }\n            for (var j = 0; j < outputs.length; j++) {\n                var emitter = this[outputs[j]] = new core.EventEmitter();\n                if (this.propOuts.indexOf(outputs[j]) === -1) {\n                    this.setComponentProperty(outputs[j], (function (emitter) { return function (value) { return emitter.emit(value); }; })(emitter));\n                }\n            }\n            for (var k = 0; k < propOuts.length; k++) {\n                this.checkLastValues.push(INITIAL_VALUE$1);\n            }\n        }\n        UpgradeNg1ComponentAdapter.prototype.ngOnInit = function () {\n            // Collect contents, insert and compile template\n            var attachChildNodes = this.helper.prepareTransclusion();\n            var linkFn = this.helper.compileTemplate(this.template);\n            // Instantiate controller (if not already done so)\n            var controllerType = this.directive.controller;\n            var bindToController = this.directive.bindToController;\n            if (controllerType && !bindToController) {\n                this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n            }\n            // Require other controllers\n            var requiredControllers = this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n            // Hook: $onInit\n            if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n                this.controllerInstance.$onInit();\n            }\n            // Linking\n            var link = this.directive.link;\n            var preLink = typeof link == 'object' && link.pre;\n            var postLink = typeof link == 'object' ? link.post : link;\n            var attrs = NOT_SUPPORTED;\n            var transcludeFn = NOT_SUPPORTED;\n            if (preLink) {\n                preLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n            }\n            linkFn(this.componentScope, null, { parentBoundTranscludeFn: attachChildNodes });\n            if (postLink) {\n                postLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n            }\n            // Hook: $postLink\n            if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n                this.controllerInstance.$postLink();\n            }\n        };\n        UpgradeNg1ComponentAdapter.prototype.ngOnChanges = function (changes) {\n            var _this = this;\n            var ng1Changes = {};\n            Object.keys(changes).forEach(function (name) {\n                var change = changes[name];\n                _this.setComponentProperty(name, change.currentValue);\n                ng1Changes[_this.propertyMap[name]] = change;\n            });\n            if (isFunction(this.destinationObj.$onChanges)) {\n                this.destinationObj.$onChanges(ng1Changes);\n            }\n        };\n        UpgradeNg1ComponentAdapter.prototype.ngDoCheck = function () {\n            var _this = this;\n            var destinationObj = this.destinationObj;\n            var lastValues = this.checkLastValues;\n            var checkProperties = this.checkProperties;\n            var propOuts = this.propOuts;\n            checkProperties.forEach(function (propName, i) {\n                var value = destinationObj[propName];\n                var last = lastValues[i];\n                if (!strictEquals(last, value)) {\n                    var eventEmitter = _this[propOuts[i]];\n                    eventEmitter.emit(lastValues[i] = value);\n                }\n            });\n            if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n                this.controllerInstance.$doCheck();\n            }\n        };\n        UpgradeNg1ComponentAdapter.prototype.ngOnDestroy = function () {\n            this.helper.onDestroy(this.componentScope, this.controllerInstance);\n        };\n        UpgradeNg1ComponentAdapter.prototype.setComponentProperty = function (name, value) {\n            this.destinationObj[this.propertyMap[name]] = value;\n        };\n        UpgradeNg1ComponentAdapter.decorators = [\n            { type: core.Directive }\n        ];\n        UpgradeNg1ComponentAdapter.ctorParameters = function () { return [\n            { type: UpgradeHelper },\n            { type: undefined },\n            { type: String },\n            { type: Array },\n            { type: Array },\n            { type: Array },\n            { type: Array },\n            { type: undefined }\n        ]; };\n        return UpgradeNg1ComponentAdapter;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var upgradeCount = 0;\n    /**\n     * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n     *\n     * The `UpgradeAdapter` allows:\n     * 1. creation of Angular component from AngularJS component directive\n     *    (See [UpgradeAdapter#upgradeNg1Component()])\n     * 2. creation of AngularJS directive from Angular component.\n     *    (See [UpgradeAdapter#downgradeNg2Component()])\n     * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n     *    coexisting in a single application.\n     *\n     * @usageNotes\n     * ### Mental Model\n     *\n     * When reasoning about how a hybrid application works it is useful to have a mental model which\n     * describes what is happening and explains what is happening at the lowest level.\n     *\n     * 1. There are two independent frameworks running in a single application, each framework treats\n     *    the other as a black box.\n     * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n     *    instantiated the element is the owner. Each framework only updates/interacts with its own\n     *    DOM elements and ignores others.\n     * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n     *    where they are instantiated.\n     * 4. Angular components always execute inside Angular framework codebase regardless of\n     *    where they are instantiated.\n     * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n     *    Angular directive, which bootstraps the AngularJS component directive in that location.\n     * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n     *    an AngularJS directive, which bootstraps the Angular component in that location.\n     * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n     *    doing the instantiation. The other framework then instantiates and owns the view for that\n     *    component. This implies that component bindings will always follow the semantics of the\n     *    instantiation framework. The syntax is always that of Angular syntax.\n     * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n     * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n     *    `$apply()`.\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n     * const module = angular.module('myExample', []);\n     * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n     *\n     * module.directive('ng1Hello', function() {\n     *   return {\n     *      scope: { title: '=' },\n     *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n     *   };\n     * });\n     *\n     *\n     * @Component({\n     *   selector: 'ng2-comp',\n     *   inputs: ['name'],\n     *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n     *   directives:\n     * })\n     * class Ng2Component {\n     * }\n     *\n     * @NgModule({\n     *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     *\n     * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\n     *       \"ng2[ng1[Hello World!](transclude)](project)\");\n     * });\n     *\n     * ```\n     *\n     * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n     * [Ahead-of-Time compilation](guide/aot-compiler).\n     * @publicApi\n     */\n    var UpgradeAdapter = /** @class */ (function () {\n        function UpgradeAdapter(ng2AppModule, compilerOptions) {\n            this.ng2AppModule = ng2AppModule;\n            this.compilerOptions = compilerOptions;\n            this.idPrefix = \"NG2_UPGRADE_\" + upgradeCount++ + \"_\";\n            this.downgradedComponents = [];\n            /**\n             * An internal map of ng1 components which need to up upgraded to ng2.\n             *\n             * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n             * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n             *\n             * @internal\n             */\n            this.ng1ComponentsToBeUpgraded = {};\n            this.upgradedProviders = [];\n            this.moduleRef = null;\n            if (!ng2AppModule) {\n                throw new Error('UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.');\n            }\n        }\n        /**\n         * Allows Angular Component to be used from AngularJS.\n         *\n         * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n         * Angular Component. The adapter will bootstrap Angular component from within the\n         * AngularJS template.\n         *\n         * @usageNotes\n         * ### Mental Model\n         *\n         * 1. The component is instantiated by being listed in AngularJS template. This means that the\n         *    host element is controlled by AngularJS, but the component's view will be controlled by\n         *    Angular.\n         * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n         *    syntax. This has to be done, this way because we must follow Angular components do not\n         *    declare how the attributes should be interpreted.\n         * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n         *    by way of the `ControlValueAccessor` interface from @angular/forms. Only components that\n         *    implement this interface are eligible.\n         *\n         * ### Supported Features\n         *\n         * - Bindings:\n         *   - Attribute: `<comp name=\"World\">`\n         *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n         *   - Expression:  `<comp [name]=\"username\">`\n         *   - Event:  `<comp (close)=\"doSomething()\">`\n         *   - ng-model: `<comp ng-model=\"name\">`\n         * - Content projection: yes\n         *\n         * ### Example\n         *\n         * ```\n         * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n         * const module = angular.module('myExample', []);\n         * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n         *\n         * @Component({\n         *   selector: 'greet',\n         *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n         * })\n         * class Greeter {\n         *   @Input() salutation: string;\n         *   @Input() name: string;\n         * }\n         *\n         * @NgModule({\n         *   declarations: [Greeter],\n         *   imports: [BrowserModule]\n         * })\n         * class MyNg2Module {}\n         *\n         * document.body.innerHTML =\n         *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n         *\n         * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n         *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n         * });\n         * ```\n         */\n        UpgradeAdapter.prototype.downgradeNg2Component = function (component) {\n            this.downgradedComponents.push(component);\n            return downgradeComponent({ component: component });\n        };\n        /**\n         * Allows AngularJS Component to be used from Angular.\n         *\n         * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n         * directive. The adapter will bootstrap AngularJS component from within the Angular\n         * template.\n         *\n         * @usageNotes\n         * ### Mental Model\n         *\n         * 1. The component is instantiated by being listed in Angular template. This means that the\n         *    host element is controlled by Angular, but the component's view will be controlled by\n         *    AngularJS.\n         *\n         * ### Supported Features\n         *\n         * - Bindings:\n         *   - Attribute: `<comp name=\"World\">`\n         *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n         *   - Expression:  `<comp [name]=\"username\">`\n         *   - Event:  `<comp (close)=\"doSomething()\">`\n         * - Transclusion: yes\n         * - Only some of the features of\n         *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n         *   supported:\n         *   - `compile`: not supported because the host element is owned by Angular, which does\n         *     not allow modifying DOM structure during compilation.\n         *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n         *   - `controllerAs`: supported.\n         *   - `bindToController`: supported.\n         *   - `link`: supported. (NOTE: only pre-link function is supported.)\n         *   - `name`: supported.\n         *   - `priority`: ignored.\n         *   - `replace`: not supported.\n         *   - `require`: supported.\n         *   - `restrict`: must be set to 'E'.\n         *   - `scope`: supported.\n         *   - `template`: supported.\n         *   - `templateUrl`: supported.\n         *   - `terminal`: ignored.\n         *   - `transclude`: supported.\n         *\n         *\n         * ### Example\n         *\n         * ```\n         * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n         * const module = angular.module('myExample', []);\n         *\n         * module.directive('greet', function() {\n         *   return {\n         *     scope: {salutation: '=', name: '=' },\n         *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n         *   };\n         * });\n         *\n         * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n         *\n         * @Component({\n         *   selector: 'ng2',\n         *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n         * })\n         * class Ng2Component {\n         * }\n         *\n         * @NgModule({\n         *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n         *   imports: [BrowserModule]\n         * })\n         * class MyNg2Module {}\n         *\n         * document.body.innerHTML = '<ng2></ng2>';\n         *\n         * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n         *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n         * });\n         * ```\n         */\n        UpgradeAdapter.prototype.upgradeNg1Component = function (name) {\n            if (this.ng1ComponentsToBeUpgraded.hasOwnProperty(name)) {\n                return this.ng1ComponentsToBeUpgraded[name].type;\n            }\n            else {\n                return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n                    .type;\n            }\n        };\n        /**\n         * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n         * Use this instead of `angular.mock.module()` to load the upgrade module into\n         * the AngularJS testing injector.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```\n         * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n         *\n         * // configure the adapter with upgrade/downgrade components and services\n         * upgradeAdapter.downgradeNg2Component(MyComponent);\n         *\n         * let upgradeAdapterRef: UpgradeAdapterRef;\n         * let $compile, $rootScope;\n         *\n         * // We must register the adapter before any calls to `inject()`\n         * beforeEach(() => {\n         *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n         * });\n         *\n         * beforeEach(inject((_$compile_, _$rootScope_) => {\n         *   $compile = _$compile_;\n         *   $rootScope = _$rootScope_;\n         * }));\n         *\n         * it(\"says hello\", (done) => {\n         *   upgradeAdapterRef.ready(() => {\n         *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n         *     $rootScope.$apply();\n         *     expect(element.html()).toContain(\"Hello World\");\n         *     done();\n         *   })\n         * });\n         *\n         * ```\n         *\n         * @param modules any AngularJS modules that the upgrade module should depend upon\n         * @returns an `UpgradeAdapterRef`, which lets you register a `ready()` callback to\n         * run assertions once the Angular components are ready to test through AngularJS.\n         */\n        UpgradeAdapter.prototype.registerForNg1Tests = function (modules) {\n            var _this = this;\n            var windowNgMock = window['angular'].mock;\n            if (!windowNgMock || !windowNgMock.module) {\n                throw new Error('Failed to find \\'angular.mock.module\\'.');\n            }\n            this.declareNg1Module(modules);\n            windowNgMock.module(this.ng1Module.name);\n            var upgrade = new UpgradeAdapterRef();\n            this.ng2BootstrapDeferred.promise.then(function (ng1Injector) {\n                upgrade._bootstrapDone(_this.moduleRef, ng1Injector);\n            }, onError);\n            return upgrade;\n        };\n        /**\n         * Bootstrap a hybrid AngularJS / Angular application.\n         *\n         * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n         * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n         * AngularJS, this bootstrap is asynchronous.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```\n         * const adapter = new UpgradeAdapter(MyNg2Module);\n         * const module = angular.module('myExample', []);\n         * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n         *\n         * module.directive('ng1', function() {\n         *   return {\n         *      scope: { title: '=' },\n         *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n         *   };\n         * });\n         *\n         *\n         * @Component({\n         *   selector: 'ng2',\n         *   inputs: ['name'],\n         *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n         * })\n         * class Ng2 {\n         * }\n         *\n         * @NgModule({\n         *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n         *   imports: [BrowserModule]\n         * })\n         * class MyNg2Module {}\n         *\n         * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n         *\n         * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n         *   expect(document.body.textContent).toEqual(\n         *       \"ng2[ng1[Hello World!](transclude)](project)\");\n         * });\n         * ```\n         */\n        UpgradeAdapter.prototype.bootstrap = function (element$1, modules, config) {\n            var _this = this;\n            this.declareNg1Module(modules);\n            var upgrade = new UpgradeAdapterRef();\n            // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n            var windowAngular = window /** TODO #???? */['angular'];\n            windowAngular.resumeBootstrap = undefined;\n            this.ngZone.run(function () {\n                bootstrap(element$1, [_this.ng1Module.name], config);\n            });\n            var ng1BootstrapPromise = new Promise(function (resolve) {\n                if (windowAngular.resumeBootstrap) {\n                    var originalResumeBootstrap_1 = windowAngular.resumeBootstrap;\n                    windowAngular.resumeBootstrap = function () {\n                        windowAngular.resumeBootstrap = originalResumeBootstrap_1;\n                        var r = windowAngular.resumeBootstrap.apply(this, arguments);\n                        resolve();\n                        return r;\n                    };\n                }\n                else {\n                    resolve();\n                }\n            });\n            Promise.all([this.ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(function (_a) {\n                var _b = __read(_a, 1), ng1Injector = _b[0];\n                element(element$1).data(controllerKey(INJECTOR_KEY), _this.moduleRef.injector);\n                _this.moduleRef.injector.get(core.NgZone).run(function () {\n                    upgrade._bootstrapDone(_this.moduleRef, ng1Injector);\n                });\n            }, onError);\n            return upgrade;\n        };\n        /**\n         * Allows AngularJS service to be accessible from Angular.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```\n         * class Login { ... }\n         * class Server { ... }\n         *\n         * @Injectable()\n         * class Example {\n         *   constructor(@Inject('server') server, login: Login) {\n         *     ...\n         *   }\n         * }\n         *\n         * const module = angular.module('myExample', []);\n         * module.service('server', Server);\n         * module.service('login', Login);\n         *\n         * const adapter = new UpgradeAdapter(MyNg2Module);\n         * adapter.upgradeNg1Provider('server');\n         * adapter.upgradeNg1Provider('login', {asToken: Login});\n         *\n         * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n         *   const example: Example = ref.ng2Injector.get(Example);\n         * });\n         *\n         * ```\n         */\n        UpgradeAdapter.prototype.upgradeNg1Provider = function (name, options) {\n            var token = options && options.asToken || name;\n            this.upgradedProviders.push({\n                provide: token,\n                useFactory: function ($injector) { return $injector.get(name); },\n                deps: [$INJECTOR]\n            });\n        };\n        /**\n         * Allows Angular service to be accessible from AngularJS.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```\n         * class Example {\n         * }\n         *\n         * const adapter = new UpgradeAdapter(MyNg2Module);\n         *\n         * const module = angular.module('myExample', []);\n         * module.factory('example', adapter.downgradeNg2Provider(Example));\n         *\n         * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n         *   const example: Example = ref.ng1Injector.get('example');\n         * });\n         *\n         * ```\n         */\n        UpgradeAdapter.prototype.downgradeNg2Provider = function (token) {\n            return downgradeInjectable(token);\n        };\n        /**\n         * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n         * hybrid application.\n         *\n         * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n         *\n         * @param modules The AngularJS modules that this upgrade module should depend upon.\n         * @returns The AngularJS upgrade module that is declared by this method\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```\n         * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n         * upgradeAdapter.declareNg1Module(['heroApp']);\n         * ```\n         */\n        UpgradeAdapter.prototype.declareNg1Module = function (modules) {\n            var _this = this;\n            if (modules === void 0) { modules = []; }\n            var delayApplyExps = [];\n            var original$applyFn;\n            var rootScopePrototype;\n            var rootScope;\n            var upgradeAdapter = this;\n            var ng1Module = this.ng1Module = module_(this.idPrefix, modules);\n            var platformRef = platformBrowserDynamic.platformBrowserDynamic();\n            this.ngZone = new core.NgZone({ enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec') });\n            this.ng2BootstrapDeferred = new Deferred();\n            ng1Module.constant(UPGRADE_APP_TYPE_KEY, 1 /* Dynamic */)\n                .factory(INJECTOR_KEY, function () { return _this.moduleRef.injector.get(core.Injector); })\n                .factory(LAZY_MODULE_REF, [INJECTOR_KEY, function (injector) { return ({ injector: injector }); }])\n                .constant(NG_ZONE_KEY, this.ngZone)\n                .factory(COMPILER_KEY, function () { return _this.moduleRef.injector.get(core.Compiler); })\n                .config([\n                '$provide', '$injector',\n                function (provide, ng1Injector) {\n                    provide.decorator($ROOT_SCOPE, [\n                        '$delegate',\n                        function (rootScopeDelegate) {\n                            // Capture the root apply so that we can delay first call to $apply until we\n                            // bootstrap Angular and then we replay and restore the $apply.\n                            rootScopePrototype = rootScopeDelegate.constructor.prototype;\n                            if (rootScopePrototype.hasOwnProperty('$apply')) {\n                                original$applyFn = rootScopePrototype.$apply;\n                                rootScopePrototype.$apply = function (exp) { return delayApplyExps.push(exp); };\n                            }\n                            else {\n                                throw new Error('Failed to find \\'$apply\\' on \\'$rootScope\\'!');\n                            }\n                            return rootScope = rootScopeDelegate;\n                        }\n                    ]);\n                    if (ng1Injector.has($$TESTABILITY)) {\n                        provide.decorator($$TESTABILITY, [\n                            '$delegate',\n                            function (testabilityDelegate) {\n                                var originalWhenStable = testabilityDelegate.whenStable;\n                                // Cannot use arrow function below because we need the context\n                                var newWhenStable = function (callback) {\n                                    originalWhenStable.call(this, function () {\n                                        var ng2Testability = upgradeAdapter.moduleRef.injector.get(core.Testability);\n                                        if (ng2Testability.isStable()) {\n                                            callback.apply(this, arguments);\n                                        }\n                                        else {\n                                            ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                                        }\n                                    });\n                                };\n                                testabilityDelegate.whenStable = newWhenStable;\n                                return testabilityDelegate;\n                            }\n                        ]);\n                    }\n                }\n            ]);\n            ng1Module.run([\n                '$injector', '$rootScope',\n                function (ng1Injector, rootScope) {\n                    UpgradeNg1ComponentAdapterBuilder.resolve(_this.ng1ComponentsToBeUpgraded, ng1Injector)\n                        .then(function () {\n                        // Note: There is a bug in TS 2.4 that prevents us from\n                        // inlining this into @NgModule\n                        // TODO(tbosch): find or file a bug against TypeScript for this.\n                        var ngModule = {\n                            providers: [\n                                { provide: $INJECTOR, useFactory: function () { return ng1Injector; } },\n                                { provide: $COMPILE, useFactory: function () { return ng1Injector.get($COMPILE); } },\n                                _this.upgradedProviders\n                            ],\n                            imports: [core.resolveForwardRef(_this.ng2AppModule)],\n                            entryComponents: _this.downgradedComponents\n                        };\n                        // At this point we have ng1 injector and we have prepared\n                        // ng1 components to be upgraded, we now can bootstrap ng2.\n                        var DynamicNgUpgradeModule = /** @class */ (function () {\n                            function DynamicNgUpgradeModule() {\n                            }\n                            DynamicNgUpgradeModule.prototype.ngDoBootstrap = function () { };\n                            DynamicNgUpgradeModule.decorators = [\n                                { type: core.NgModule, args: [__assign({ jit: true }, ngModule),] }\n                            ];\n                            DynamicNgUpgradeModule.ctorParameters = function () { return []; };\n                            return DynamicNgUpgradeModule;\n                        }());\n                        platformRef\n                            .bootstrapModule(DynamicNgUpgradeModule, [_this.compilerOptions, { ngZone: _this.ngZone }])\n                            .then(function (ref) {\n                            _this.moduleRef = ref;\n                            _this.ngZone.run(function () {\n                                if (rootScopePrototype) {\n                                    rootScopePrototype.$apply = original$applyFn; // restore original $apply\n                                    while (delayApplyExps.length) {\n                                        rootScope.$apply(delayApplyExps.shift());\n                                    }\n                                    rootScopePrototype = null;\n                                }\n                            });\n                        })\n                            .then(function () { return _this.ng2BootstrapDeferred.resolve(ng1Injector); }, onError)\n                            .then(function () {\n                            var subscription = _this.ngZone.onMicrotaskEmpty.subscribe({\n                                next: function () {\n                                    if (rootScope.$$phase) {\n                                        if (core.isDevMode()) {\n                                            console.warn('A digest was triggered while one was already in progress. This may mean that something is triggering digests outside the Angular zone.');\n                                        }\n                                        return rootScope.$evalAsync(function () { });\n                                    }\n                                    return rootScope.$digest();\n                                }\n                            });\n                            rootScope.$on('$destroy', function () {\n                                subscription.unsubscribe();\n                            });\n                        });\n                    })\n                        .catch(function (e) { return _this.ng2BootstrapDeferred.reject(e); });\n                }\n            ]);\n            return ng1Module;\n        };\n        return UpgradeAdapter;\n    }());\n    /**\n     * Synchronous promise-like object to wrap parent injectors,\n     * to preserve the synchronous nature of AngularJS's $compile.\n     */\n    var ParentInjectorPromise$1 = /** @class */ (function () {\n        function ParentInjectorPromise(element) {\n            this.element = element;\n            this.callbacks = [];\n            // store the promise on the element\n            element.data(controllerKey(INJECTOR_KEY), this);\n        }\n        ParentInjectorPromise.prototype.then = function (callback) {\n            if (this.injector) {\n                callback(this.injector);\n            }\n            else {\n                this.callbacks.push(callback);\n            }\n        };\n        ParentInjectorPromise.prototype.resolve = function (injector) {\n            this.injector = injector;\n            // reset the element data to point to the real injector\n            this.element.data(controllerKey(INJECTOR_KEY), injector);\n            // clean out the element to prevent memory leaks\n            this.element = null;\n            // run all the queued callbacks\n            this.callbacks.forEach(function (callback) { return callback(injector); });\n            this.callbacks.length = 0;\n        };\n        return ParentInjectorPromise;\n    }());\n    /**\n     * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n     *\n     * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n     * [Ahead-of-Time compilation](guide/aot-compiler).\n     * @publicApi\n     */\n    var UpgradeAdapterRef = /** @class */ (function () {\n        function UpgradeAdapterRef() {\n            /* @internal */\n            this._readyFn = null;\n            this.ng1RootScope = null;\n            this.ng1Injector = null;\n            this.ng2ModuleRef = null;\n            this.ng2Injector = null;\n        }\n        /* @internal */\n        UpgradeAdapterRef.prototype._bootstrapDone = function (ngModuleRef, ng1Injector) {\n            this.ng2ModuleRef = ngModuleRef;\n            this.ng2Injector = ngModuleRef.injector;\n            this.ng1Injector = ng1Injector;\n            this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n            this._readyFn && this._readyFn(this);\n        };\n        /**\n         * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n         * application has been bootstrapped.\n         *\n         * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n         * require a call to `$apply()`.\n         */\n        UpgradeAdapterRef.prototype.ready = function (fn) {\n            this._readyFn = fn;\n        };\n        /**\n         * Dispose of running hybrid AngularJS / Angular application.\n         */\n        UpgradeAdapterRef.prototype.dispose = function () {\n            this.ng1Injector.get($ROOT_SCOPE).$destroy();\n            this.ng2ModuleRef.destroy();\n        };\n        return UpgradeAdapterRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only re-exports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.UpgradeAdapter = UpgradeAdapter;\n    exports.UpgradeAdapterRef = UpgradeAdapterRef;\n    exports.VERSION = VERSION;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=upgrade.umd.js.map\n"]}
{"version":3,"sources":["packages/upgrade/upgrade-static.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","upgrade","static","core","platformBrowser","this","i0","noNg","Error","noNgElement","cleanData","angular","bootstrap","element","injector","version","undefined","resumeBootstrap","getTestability","window","hasOwnProperty","_a","setAngularJSGlobal","getAngularJSGlobal","module_","prefix","dependencies","e","nodes","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","call","__read","o","n","m","Symbol","iterator","r","i","ar","next","done","push","value","error","__spreadArray","to","from","il","length","j","INJECTOR_KEY","PropertyBinding","prop","attr","parseBinding","bracketAttr","parenAttr","bracketParenAttr","capitalAttr","charAt","toUpperCase","substr","onAttr","bindAttr","bindonAttr","DIRECTIVE_PREFIX_REGEXP","DIRECTIVE_SPECIAL_CHARS_REGEXP","node","isParentNode","isFunction","querySelectorAll","controllerKey","name","destroyApp","$injector","$rootElement","get","$destroy","getTypeName","type","overriddenName","toString","split","getDowngradedModuleCount","has","getUpgradeAppType","validateInjectionKey","downgradedModule","injectionKey","attemptedAction","upgradeAppType","downgradedModuleCount","_matches","INITIAL_VALUE","__UNINITIALIZED__","DowngradeComponentAdapter","attrs","scope","ngModel","parentInjector","$compile","$parse","componentFactory","wrapCallback","implementsOnChanges","inputChangeCount","inputChanges","componentScope","$new","compileContents","_this","compiledProjectableNodes","linkFns","groupProjectableNodes","map","empty","forEach","linkFn","clone","append","createComponent","projectableNodes","childInjector","Injector","create","providers","provide","useValue","parent","componentRef","viewChangeDetector","ChangeDetectorRef","changeDetector","changeDetectorRef","component","instance","testability","Testability","TestabilityRegistry","registerApplication","location","nativeElement","hookupNgModel","supportsNgModel","writeValue","registerOnChange","$render","$viewValue","$setViewValue","bind","registerOnTouched","$setTouched","setupInputs","manuallyAttachView","propagateDigest","inputs","_loop_1","prevValue","input","propName","templateName","expr","observeFn_1","currValue","strictEquals","val1","val2","updateInput","$observe","unwatch_1","this_1","$watch","watchFn","detectChanges","componentType","ngOnChanges","markForCheck","unwatch_2","ApplicationRef","attachView","hostView","setupOutputs","outputs","output","substring","subscribeToOutput","isAssignment","getter","setter","assign","emitter","subscribe","v","$event","registerCleanup","testabilityRegistry","destroyComponentRef","destroy","destroyed","on","$on","unregisterApplication","getInjector","SimpleChange","groupNodesBySelector","ngContentSelectors","ii","jj","ngContentIndex","findMatchingNgContentIndex","contents","ngContentIndices","wildcardNgContentIndex","selector","matchesSelector","sort","el","elProto","Element","matches","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","nodeType","Node","ELEMENT_NODE","SyncPromise","resolved","callbacks","all","valuesOrPromises","aggrPromise","resolvedCount","results","resolve","idx","isThenable","obj","then","callback","ParentInjectorPromise","_super","injectorKey","data","__extends","TypeError","String","__","constructor","VERSION","Version","tempInjectorRef","setTempInjectorRef","angular1Providers","useFactory","injectorFactory","deps","rootScopeFactory","compileFactory","parseFactory","NgAdapterInjector","modInjector","token","notFoundValue","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","moduleUid","identity","x","REQUIRE_PREFIX_RE","UpgradeHelper","elementRef","directive","$controller","$element","getDirective","directives","compile","link","notSupported","replace","terminal","getTemplate","fetchRemoteTemplate","template","getOrCall","templateUrl","$templateCache_1","url_1","Promise","reject","$httpBackend","status","response","put","buildController","controllerType","$scope","controller","controllerAs","compileTemplate","compileHtml","onDestroy","controllerInstance","$onDestroy","prepareTransclusion","transclude","contentChildNodes","extractChildNodes","attachChildrenFn","cloneAttachFn","$template","slots_1","slotMap_1","filledSlots_1","keys","slotName","optional","directiveNormalize","_","letter","nodeName","toLowerCase","filter","cloneAttach","$$slots","TEXT_NODE","nodeValue","resolveAndBindRequiredControllers","directiveRequire","getDirectiveRequire","requiredControllers","resolveRequire","bindToController","isMap","requiredControllersMap_1","key","html","innerHTML","childNodes","childNode","firstChild","removeChild","match","isArray","req","value_1","inheritType","isOptional","searchParents","startOnParent","ctrlKey","elem","inheritedData","property","args","_i","arguments","apply","feature","INITIAL_VALUE$1","Bindings","twoWayBoundProperties","twoWayBoundLastValues","expressionBoundProperties","propertyToOutputMap","UpgradeComponent","helper","bindings","initializeBindings","$parentScope","$componentScope","initializeOutputs","ngOnInit","attachChildNodes","bindingDestination","bindOutputs","pendingChanges","forwardChanges","$onInit","$doCheck","callDoCheck","unregisterDoCheckWatcher","$parent","preLink","pre","postLink","post","parentBoundTranscludeFn","$postLink","changes","ngDoCheck","newValue","is","emit","ngOnDestroy","btcIsObject","context","bindingType","json","JSON","stringify","concat","EventEmitter","currentValue","$onChanges","ɵfac","UpgradeComponent_Factory","t","ɵɵinvalidFactory","ɵdir","ɵɵdefineDirective","features","ɵɵNgOnChangesFeature","UpgradeModule","ngZone","platformRef","element$1","modules","config","INIT_MODULE_NAME","UPGRADE_MODULE_NAME","constant","$provide","decorator","testabilityDelegate","originalWhenStable","whenStable","newWhenStable","ng2Testability","isStable","intervalDelegate","wrappedInterval","fn","delay","count","invokeApply","pass","runOutsideAngular","setTimeout","run","cancel","$rootScope","subscription","onMicrotaskEmpty","$$phase","isDevMode","console","warn","$evalAsync","$digest","unsubscribe","upgradeModule","windowAngular","originalResumeBootstrap_1","ngZone_1","UpgradeModule_Factory","ɵɵinject","NgZone","PlatformRef","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","downgradeComponent","info","directiveFactory","isNgUpgradeLite","cb","isInAngularZone","hasMultipleDowngradedModules","restrict","required","moduleInjector","ranAsync","lazyModuleRefKey","lazyModuleRef","promise","doDowngrade","ComponentFactoryResolver","resolveComponentFactory","injectorPromise","facade","downgradeFn","pInjector","mInjector","_b","downgradeInjectable","err","message","downgradeModule","moduleFactoryOrBootstrapFn","lazyModuleName","lazyInjectorKey","bootstrapFn","extraProviders","bootstrapModuleFactory","result","ref","getAngularLib","setAngularLib","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license Angular v12.0.0-next.8+31.sha-ebc80b3\n * (c) 2010-2021 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/upgrade/static', ['exports', '@angular/core', '@angular/platform-browser'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.upgrade = global.ng.upgrade || {}, global.ng.upgrade.static = {}), global.ng.core, global.ng.platformBrowser));\n}(this, (function (exports, i0, platformBrowser) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noNg() {\n        throw new Error('AngularJS v1.x is not loaded!');\n    }\n    var noNgElement = (function () { return noNg(); });\n    noNgElement.cleanData = noNg;\n    var angular = {\n        bootstrap: noNg,\n        module: noNg,\n        element: noNgElement,\n        injector: noNg,\n        version: undefined,\n        resumeBootstrap: noNg,\n        getTestability: noNg\n    };\n    try {\n        if (window.hasOwnProperty('angular')) {\n            angular = window.angular;\n        }\n    }\n    catch (_a) {\n        // ignore in CJS mode.\n    }\n    /**\n     * @deprecated Use `setAngularJSGlobal` instead.\n     *\n     * @publicApi\n     */\n    function setAngularLib(ng) {\n        setAngularJSGlobal(ng);\n    }\n    /**\n     * @deprecated Use `getAngularJSGlobal` instead.\n     *\n     * @publicApi\n     */\n    function getAngularLib() {\n        return getAngularJSGlobal();\n    }\n    /**\n     * Resets the AngularJS global.\n     *\n     * Used when AngularJS is loaded lazily, and not available on `window`.\n     *\n     * @publicApi\n     */\n    function setAngularJSGlobal(ng) {\n        angular = ng;\n    }\n    /**\n     * Returns the current AngularJS global.\n     *\n     * @publicApi\n     */\n    function getAngularJSGlobal() {\n        return angular;\n    }\n    var bootstrap = function (e, modules, config) { return angular.bootstrap(e, modules, config); };\n    // Do not declare as `module` to avoid webpack bug\n    // (see https://github.com/angular/angular/issues/30050).\n    var module_ = function (prefix, dependencies) { return angular.module(prefix, dependencies); };\n    var element = (function (e) { return angular.element(e); });\n    element.cleanData = function (nodes) { return angular.element.cleanData(nodes); };\n    var injector = function (modules, strictDi) { return angular.injector(modules, strictDi); };\n    var resumeBootstrap = function () { return angular.resumeBootstrap(); };\n    var getTestability = function (e) { return angular.getTestability(e); };\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (Object.prototype.hasOwnProperty.call(b, p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, o) {\n        for (var p in m)\n            if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p))\n                __createBinding(o, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    /** @deprecated */\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    /** @deprecated */\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    function __spreadArray(to, from) {\n        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n            to[j] = from[i];\n        return to;\n    }\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var $COMPILE = '$compile';\n    var $CONTROLLER = '$controller';\n    var $DELEGATE = '$delegate';\n    var $EXCEPTION_HANDLER = '$exceptionHandler';\n    var $HTTP_BACKEND = '$httpBackend';\n    var $INJECTOR = '$injector';\n    var $INTERVAL = '$interval';\n    var $PARSE = '$parse';\n    var $PROVIDE = '$provide';\n    var $ROOT_ELEMENT = '$rootElement';\n    var $ROOT_SCOPE = '$rootScope';\n    var $SCOPE = '$scope';\n    var $TEMPLATE_CACHE = '$templateCache';\n    var $TEMPLATE_REQUEST = '$templateRequest';\n    var $$TESTABILITY = '$$testability';\n    var COMPILER_KEY = '$$angularCompiler';\n    var DOWNGRADED_MODULE_COUNT_KEY = '$$angularDowngradedModuleCount';\n    var GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\n    var INJECTOR_KEY = '$$angularInjector';\n    var LAZY_MODULE_REF = '$$angularLazyModuleRef';\n    var NG_ZONE_KEY = '$$angularNgZone';\n    var UPGRADE_APP_TYPE_KEY = '$$angularUpgradeAppType';\n    var REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\n    var REQUIRE_NG_MODEL = '?ngModel';\n    var UPGRADE_MODULE_NAME = '$$UpgradeModule';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A `PropertyBinding` represents a mapping between a property name\n     * and an attribute name. It is parsed from a string of the form\n     * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n     * and attribute have the same identifier.\n     */\n    var PropertyBinding = /** @class */ (function () {\n        function PropertyBinding(prop, attr) {\n            this.prop = prop;\n            this.attr = attr;\n            this.parseBinding();\n        }\n        PropertyBinding.prototype.parseBinding = function () {\n            this.bracketAttr = \"[\" + this.attr + \"]\";\n            this.parenAttr = \"(\" + this.attr + \")\";\n            this.bracketParenAttr = \"[(\" + this.attr + \")]\";\n            var capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n            this.onAttr = \"on\" + capitalAttr;\n            this.bindAttr = \"bind\" + capitalAttr;\n            this.bindonAttr = \"bindon\" + capitalAttr;\n        };\n        return PropertyBinding;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\n    var DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n    function onError(e) {\n        // TODO: (misko): We seem to not have a stack trace here!\n        if (console.error) {\n            console.error(e, e.stack);\n        }\n        else {\n            // tslint:disable-next-line:no-console\n            console.log(e, e.stack);\n        }\n        throw e;\n    }\n    /**\n     * Clean the jqLite/jQuery data on the element and all its descendants.\n     * Equivalent to how jqLite/jQuery invoke `cleanData()` on an Element when removed:\n     *   https://github.com/angular/angular.js/blob/2e72ea13fa98bebf6ed4b5e3c45eaf5f990ed16f/src/jqLite.js#L349-L355\n     *   https://github.com/jquery/jquery/blob/6984d1747623dbc5e87fd6c261a5b6b1628c107c/src/manipulation.js#L182\n     *\n     * NOTE:\n     * `cleanData()` will also invoke the AngularJS `$destroy` DOM event on the element:\n     *   https://github.com/angular/angular.js/blob/2e72ea13fa98bebf6ed4b5e3c45eaf5f990ed16f/src/Angular.js#L1932-L1945\n     *\n     * @param node The DOM node whose data needs to be cleaned.\n     */\n    function cleanData(node) {\n        element.cleanData([node]);\n        if (isParentNode(node)) {\n            element.cleanData(node.querySelectorAll('*'));\n        }\n    }\n    function controllerKey(name) {\n        return '$' + name + 'Controller';\n    }\n    /**\n     * Destroy an AngularJS app given the app `$injector`.\n     *\n     * NOTE: Destroying an app is not officially supported by AngularJS, but try to do our best by\n     *       destroying `$rootScope` and clean the jqLite/jQuery data on `$rootElement` and all\n     *       descendants.\n     *\n     * @param $injector The `$injector` of the AngularJS app to destroy.\n     */\n    function destroyApp($injector) {\n        var $rootElement = $injector.get($ROOT_ELEMENT);\n        var $rootScope = $injector.get($ROOT_SCOPE);\n        $rootScope.$destroy();\n        cleanData($rootElement[0]);\n    }\n    function directiveNormalize(name) {\n        return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n            .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, function (_, letter) { return letter.toUpperCase(); });\n    }\n    function getTypeName(type) {\n        // Return the name of the type or the first line of its stringified version.\n        return type.overriddenName || type.name || type.toString().split('\\n')[0];\n    }\n    function getDowngradedModuleCount($injector) {\n        return $injector.has(DOWNGRADED_MODULE_COUNT_KEY) ? $injector.get(DOWNGRADED_MODULE_COUNT_KEY) :\n            0;\n    }\n    function getUpgradeAppType($injector) {\n        return $injector.has(UPGRADE_APP_TYPE_KEY) ? $injector.get(UPGRADE_APP_TYPE_KEY) :\n            0 /* None */;\n    }\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n    function isParentNode(node) {\n        return isFunction(node.querySelectorAll);\n    }\n    function validateInjectionKey($injector, downgradedModule, injectionKey, attemptedAction) {\n        var upgradeAppType = getUpgradeAppType($injector);\n        var downgradedModuleCount = getDowngradedModuleCount($injector);\n        // Check for common errors.\n        switch (upgradeAppType) {\n            case 1 /* Dynamic */:\n            case 2 /* Static */:\n                if (downgradedModule) {\n                    throw new Error(\"Error while \" + attemptedAction + \": 'downgradedModule' unexpectedly specified.\\n\" +\n                        'You should not specify a value for \\'downgradedModule\\', unless you are downgrading ' +\n                        'more than one Angular module (via \\'downgradeModule()\\').');\n                }\n                break;\n            case 3 /* Lite */:\n                if (!downgradedModule && (downgradedModuleCount >= 2)) {\n                    throw new Error(\"Error while \" + attemptedAction + \": 'downgradedModule' not specified.\\n\" +\n                        'This application contains more than one downgraded Angular module, thus you need to ' +\n                        'always specify \\'downgradedModule\\' when downgrading components and injectables.');\n                }\n                if (!$injector.has(injectionKey)) {\n                    throw new Error(\"Error while \" + attemptedAction + \": Unable to find the specified downgraded module.\\n\" +\n                        'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n                        'application?');\n                }\n                break;\n            default:\n                throw new Error(\"Error while \" + attemptedAction + \": Not a valid '@angular/upgrade' application.\\n\" +\n                    'Did you forget to downgrade an Angular module or include it in the AngularJS ' +\n                    'application?');\n        }\n    }\n    var Deferred = /** @class */ (function () {\n        function Deferred() {\n            var _this = this;\n            this.promise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        return Deferred;\n    }());\n    /**\n     * @return Whether the passed-in component implements the subset of the\n     *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n     *     compatibility.\n     */\n    function supportsNgModel(component) {\n        return typeof component.writeValue === 'function' &&\n            typeof component.registerOnChange === 'function';\n    }\n    /**\n     * Glue the AngularJS `NgModelController` (if it exists) to the component\n     * (if it implements the needed subset of the `ControlValueAccessor` interface).\n     */\n    function hookupNgModel(ngModel, component) {\n        if (ngModel && supportsNgModel(component)) {\n            ngModel.$render = function () {\n                component.writeValue(ngModel.$viewValue);\n            };\n            component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n            if (typeof component.registerOnTouched === 'function') {\n                component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n            }\n        }\n    }\n    /**\n     * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n     */\n    function strictEquals(val1, val2) {\n        return val1 === val2 || (val1 !== val1 && val2 !== val2);\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var INITIAL_VALUE = {\n        __UNINITIALIZED__: true\n    };\n    var DowngradeComponentAdapter = /** @class */ (function () {\n        function DowngradeComponentAdapter(element, attrs, scope, ngModel, parentInjector, $compile, $parse, componentFactory, wrapCallback) {\n            this.element = element;\n            this.attrs = attrs;\n            this.scope = scope;\n            this.ngModel = ngModel;\n            this.parentInjector = parentInjector;\n            this.$compile = $compile;\n            this.$parse = $parse;\n            this.componentFactory = componentFactory;\n            this.wrapCallback = wrapCallback;\n            this.implementsOnChanges = false;\n            this.inputChangeCount = 0;\n            this.inputChanges = {};\n            this.componentScope = scope.$new();\n        }\n        DowngradeComponentAdapter.prototype.compileContents = function () {\n            var _this = this;\n            var compiledProjectableNodes = [];\n            var projectableNodes = this.groupProjectableNodes();\n            var linkFns = projectableNodes.map(function (nodes) { return _this.$compile(nodes); });\n            this.element.empty();\n            linkFns.forEach(function (linkFn) {\n                linkFn(_this.scope, function (clone) {\n                    compiledProjectableNodes.push(clone);\n                    _this.element.append(clone);\n                });\n            });\n            return compiledProjectableNodes;\n        };\n        DowngradeComponentAdapter.prototype.createComponent = function (projectableNodes) {\n            var providers = [{ provide: $SCOPE, useValue: this.componentScope }];\n            var childInjector = i0.Injector.create({ providers: providers, parent: this.parentInjector, name: 'DowngradeComponentAdapter' });\n            this.componentRef =\n                this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n            this.viewChangeDetector = this.componentRef.injector.get(i0.ChangeDetectorRef);\n            this.changeDetector = this.componentRef.changeDetectorRef;\n            this.component = this.componentRef.instance;\n            // testability hook is commonly added during component bootstrap in\n            // packages/core/src/application_ref.bootstrap()\n            // in downgraded application, component creation will take place here as well as adding the\n            // testability hook.\n            var testability = this.componentRef.injector.get(i0.Testability, null);\n            if (testability) {\n                this.componentRef.injector.get(i0.TestabilityRegistry)\n                    .registerApplication(this.componentRef.location.nativeElement, testability);\n            }\n            hookupNgModel(this.ngModel, this.component);\n        };\n        DowngradeComponentAdapter.prototype.setupInputs = function (manuallyAttachView, propagateDigest) {\n            var _this = this;\n            if (propagateDigest === void 0) { propagateDigest = true; }\n            var attrs = this.attrs;\n            var inputs = this.componentFactory.inputs || [];\n            var _loop_1 = function (i) {\n                var input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n                var expr = null;\n                if (attrs.hasOwnProperty(input.attr)) {\n                    var observeFn_1 = (function (prop) {\n                        var prevValue = INITIAL_VALUE;\n                        return function (currValue) {\n                            // Initially, both `$observe()` and `$watch()` will call this function.\n                            if (!strictEquals(prevValue, currValue)) {\n                                if (prevValue === INITIAL_VALUE) {\n                                    prevValue = currValue;\n                                }\n                                _this.updateInput(prop, prevValue, currValue);\n                                prevValue = currValue;\n                            }\n                        };\n                    })(input.prop);\n                    attrs.$observe(input.attr, observeFn_1);\n                    // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n                    // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n                    // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n                    var unwatch_1 = this_1.componentScope.$watch(function () {\n                        unwatch_1();\n                        unwatch_1 = null;\n                        observeFn_1(attrs[input.attr]);\n                    });\n                }\n                else if (attrs.hasOwnProperty(input.bindAttr)) {\n                    expr = attrs[input.bindAttr];\n                }\n                else if (attrs.hasOwnProperty(input.bracketAttr)) {\n                    expr = attrs[input.bracketAttr];\n                }\n                else if (attrs.hasOwnProperty(input.bindonAttr)) {\n                    expr = attrs[input.bindonAttr];\n                }\n                else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n                    expr = attrs[input.bracketParenAttr];\n                }\n                if (expr != null) {\n                    var watchFn = (function (prop) { return function (currValue, prevValue) { return _this.updateInput(prop, prevValue, currValue); }; })(input.prop);\n                    this_1.componentScope.$watch(expr, watchFn);\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < inputs.length; i++) {\n                _loop_1(i);\n            }\n            // Invoke `ngOnChanges()` and Change Detection (when necessary)\n            var detectChanges = function () { return _this.changeDetector.detectChanges(); };\n            var prototype = this.componentFactory.componentType.prototype;\n            this.implementsOnChanges = !!(prototype && prototype.ngOnChanges);\n            this.componentScope.$watch(function () { return _this.inputChangeCount; }, this.wrapCallback(function () {\n                // Invoke `ngOnChanges()`\n                if (_this.implementsOnChanges) {\n                    var inputChanges = _this.inputChanges;\n                    _this.inputChanges = {};\n                    _this.component.ngOnChanges(inputChanges);\n                }\n                _this.viewChangeDetector.markForCheck();\n                // If opted out of propagating digests, invoke change detection when inputs change.\n                if (!propagateDigest) {\n                    detectChanges();\n                }\n            }));\n            // If not opted out of propagating digests, invoke change detection on every digest\n            if (propagateDigest) {\n                this.componentScope.$watch(this.wrapCallback(detectChanges));\n            }\n            // If necessary, attach the view so that it will be dirty-checked.\n            // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n            if (manuallyAttachView || !propagateDigest) {\n                var unwatch_2 = this.componentScope.$watch(function () {\n                    unwatch_2();\n                    unwatch_2 = null;\n                    var appRef = _this.parentInjector.get(i0.ApplicationRef);\n                    appRef.attachView(_this.componentRef.hostView);\n                });\n            }\n        };\n        DowngradeComponentAdapter.prototype.setupOutputs = function () {\n            var attrs = this.attrs;\n            var outputs = this.componentFactory.outputs || [];\n            for (var j = 0; j < outputs.length; j++) {\n                var output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n                var bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n                var bracketParenAttr = \"[(\" + output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8) + \")]\";\n                // order below is important - first update bindings then evaluate expressions\n                if (attrs.hasOwnProperty(bindonAttr)) {\n                    this.subscribeToOutput(output, attrs[bindonAttr], true);\n                }\n                if (attrs.hasOwnProperty(bracketParenAttr)) {\n                    this.subscribeToOutput(output, attrs[bracketParenAttr], true);\n                }\n                if (attrs.hasOwnProperty(output.onAttr)) {\n                    this.subscribeToOutput(output, attrs[output.onAttr]);\n                }\n                if (attrs.hasOwnProperty(output.parenAttr)) {\n                    this.subscribeToOutput(output, attrs[output.parenAttr]);\n                }\n            }\n        };\n        DowngradeComponentAdapter.prototype.subscribeToOutput = function (output, expr, isAssignment) {\n            var _this = this;\n            if (isAssignment === void 0) { isAssignment = false; }\n            var getter = this.$parse(expr);\n            var setter = getter.assign;\n            if (isAssignment && !setter) {\n                throw new Error(\"Expression '\" + expr + \"' is not assignable!\");\n            }\n            var emitter = this.component[output.prop];\n            if (emitter) {\n                emitter.subscribe({\n                    next: isAssignment ? function (v) { return setter(_this.scope, v); } :\n                        function (v) { return getter(_this.scope, { '$event': v }); }\n                });\n            }\n            else {\n                throw new Error(\"Missing emitter '\" + output.prop + \"' on component '\" + getTypeName(this.componentFactory.componentType) + \"'!\");\n            }\n        };\n        DowngradeComponentAdapter.prototype.registerCleanup = function () {\n            var _this = this;\n            var testabilityRegistry = this.componentRef.injector.get(i0.TestabilityRegistry);\n            var destroyComponentRef = this.wrapCallback(function () { return _this.componentRef.destroy(); });\n            var destroyed = false;\n            this.element.on('$destroy', function () {\n                // The `$destroy` event may have been triggered by the `cleanData()` call in the\n                // `componentScope` `$destroy` handler below. In that case, we don't want to call\n                // `componentScope.$destroy()` again.\n                if (!destroyed)\n                    _this.componentScope.$destroy();\n            });\n            this.componentScope.$on('$destroy', function () {\n                if (!destroyed) {\n                    destroyed = true;\n                    testabilityRegistry.unregisterApplication(_this.componentRef.location.nativeElement);\n                    // The `componentScope` might be getting destroyed, because an ancestor element is being\n                    // removed/destroyed. If that is the case, jqLite/jQuery would normally invoke `cleanData()`\n                    // on the removed element and all descendants.\n                    //   https://github.com/angular/angular.js/blob/2e72ea13fa98bebf6ed4b5e3c45eaf5f990ed16f/src/jqLite.js#L349-L355\n                    //   https://github.com/jquery/jquery/blob/6984d1747623dbc5e87fd6c261a5b6b1628c107c/src/manipulation.js#L182\n                    //\n                    // Here, however, `destroyComponentRef()` may under some circumstances remove the element\n                    // from the DOM and therefore it will no longer be a descendant of the removed element when\n                    // `cleanData()` is called. This would result in a memory leak, because the element's data\n                    // and event handlers (and all objects directly or indirectly referenced by them) would be\n                    // retained.\n                    //\n                    // To ensure the element is always properly cleaned up, we manually call `cleanData()` on\n                    // this element and its descendants before destroying the `ComponentRef`.\n                    cleanData(_this.element[0]);\n                    destroyComponentRef();\n                }\n            });\n        };\n        DowngradeComponentAdapter.prototype.getInjector = function () {\n            return this.componentRef.injector;\n        };\n        DowngradeComponentAdapter.prototype.updateInput = function (prop, prevValue, currValue) {\n            if (this.implementsOnChanges) {\n                this.inputChanges[prop] = new i0.SimpleChange(prevValue, currValue, prevValue === currValue);\n            }\n            this.inputChangeCount++;\n            this.component[prop] = currValue;\n        };\n        DowngradeComponentAdapter.prototype.groupProjectableNodes = function () {\n            var ngContentSelectors = this.componentFactory.ngContentSelectors;\n            return groupNodesBySelector(ngContentSelectors, this.element.contents());\n        };\n        return DowngradeComponentAdapter;\n    }());\n    /**\n     * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n     */\n    function groupNodesBySelector(ngContentSelectors, nodes) {\n        var projectableNodes = [];\n        for (var i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n            projectableNodes[i] = [];\n        }\n        for (var j = 0, jj = nodes.length; j < jj; ++j) {\n            var node = nodes[j];\n            var ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n            if (ngContentIndex != null) {\n                projectableNodes[ngContentIndex].push(node);\n            }\n        }\n        return projectableNodes;\n    }\n    function findMatchingNgContentIndex(element, ngContentSelectors) {\n        var ngContentIndices = [];\n        var wildcardNgContentIndex = -1;\n        for (var i = 0; i < ngContentSelectors.length; i++) {\n            var selector = ngContentSelectors[i];\n            if (selector === '*') {\n                wildcardNgContentIndex = i;\n            }\n            else {\n                if (matchesSelector(element, selector)) {\n                    ngContentIndices.push(i);\n                }\n            }\n        }\n        ngContentIndices.sort();\n        if (wildcardNgContentIndex !== -1) {\n            ngContentIndices.push(wildcardNgContentIndex);\n        }\n        return ngContentIndices.length ? ngContentIndices[0] : null;\n    }\n    var _matches;\n    function matchesSelector(el, selector) {\n        if (!_matches) {\n            var elProto = Element.prototype;\n            _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n                elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n        }\n        return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isThenable(obj) {\n        return !!obj && isFunction(obj.then);\n    }\n    /**\n     * Synchronous, promise-like object.\n     */\n    var SyncPromise = /** @class */ (function () {\n        function SyncPromise() {\n            this.resolved = false;\n            this.callbacks = [];\n        }\n        SyncPromise.all = function (valuesOrPromises) {\n            var aggrPromise = new SyncPromise();\n            var resolvedCount = 0;\n            var results = [];\n            var resolve = function (idx, value) {\n                results[idx] = value;\n                if (++resolvedCount === valuesOrPromises.length)\n                    aggrPromise.resolve(results);\n            };\n            valuesOrPromises.forEach(function (p, idx) {\n                if (isThenable(p)) {\n                    p.then(function (v) { return resolve(idx, v); });\n                }\n                else {\n                    resolve(idx, p);\n                }\n            });\n            return aggrPromise;\n        };\n        SyncPromise.prototype.resolve = function (value) {\n            // Do nothing, if already resolved.\n            if (this.resolved)\n                return;\n            this.value = value;\n            this.resolved = true;\n            // Run the queued callbacks.\n            this.callbacks.forEach(function (callback) { return callback(value); });\n            this.callbacks.length = 0;\n        };\n        SyncPromise.prototype.then = function (callback) {\n            if (this.resolved) {\n                callback(this.value);\n            }\n            else {\n                this.callbacks.push(callback);\n            }\n        };\n        return SyncPromise;\n    }());\n\n    /**\n     * @description\n     *\n     * A helper function that allows an Angular component to be used from AngularJS.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n     * library for hybrid upgrade apps that support AOT compilation*\n     *\n     * This helper function returns a factory function to be used for registering\n     * an AngularJS wrapper directive for \"downgrading\" an Angular component.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * Let's assume that you have an Angular component called `ng2Heroes` that needs\n     * to be made available in AngularJS templates.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes\"}\n     *\n     * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n     * that will make this Angular component available inside AngularJS templates.\n     * The `downgradeComponent()` function returns a factory function that we\n     * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-wrapper\"}\n     *\n     * For more details and examples on downgrading Angular components to AngularJS components please\n     * visit the [Upgrade guide](guide/upgrade#using-angular-components-from-angularjs-code).\n     *\n     * @param info contains information about the Component that is being downgraded:\n     *\n     * - `component: Type<any>`: The type of the Component that will be downgraded\n     * - `downgradedModule?: string`: The name of the downgraded module (if any) that the component\n     *   \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose\n     *   corresponding Angular module will be bootstrapped, when the component needs to be instantiated.\n     *   <br />\n     *   (This option is only necessary when using `downgradeModule()` to downgrade more than one\n     *   Angular module.)\n     * - `propagateDigest?: boolean`: Whether to perform {@link ChangeDetectorRef#detectChanges\n     *   change detection} on the component on every\n     *   [$digest](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest). If set to `false`,\n     *   change detection will still be performed when any of the component's inputs changes.\n     *   (Default: true)\n     *\n     * @returns a factory function that can be used to register the component in an\n     * AngularJS module.\n     *\n     * @publicApi\n     */\n    function downgradeComponent(info) {\n        var directiveFactory = function ($compile, $injector, $parse) {\n            // When using `downgradeModule()`, we need to handle certain things specially. For example:\n            // - We always need to attach the component view to the `ApplicationRef` for it to be\n            //   dirty-checked.\n            // - We need to ensure callbacks to Angular APIs (e.g. change detection) are run inside the\n            //   Angular zone.\n            //   NOTE: This is not needed, when using `UpgradeModule`, because `$digest()` will be run\n            //         inside the Angular zone (except if explicitly escaped, in which case we shouldn't\n            //         force it back in).\n            var isNgUpgradeLite = getUpgradeAppType($injector) === 3 /* Lite */;\n            var wrapCallback = !isNgUpgradeLite ? function (cb) { return cb; } : function (cb) { return function () { return i0.NgZone.isInAngularZone() ? cb() : ngZone.run(cb); }; };\n            var ngZone;\n            // When downgrading multiple modules, special handling is needed wrt injectors.\n            var hasMultipleDowngradedModules = isNgUpgradeLite && (getDowngradedModuleCount($injector) > 1);\n            return {\n                restrict: 'E',\n                terminal: true,\n                require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n                link: function (scope, element, attrs, required) {\n                    // We might have to compile the contents asynchronously, because this might have been\n                    // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n                    // been compiled.\n                    var ngModel = required[1];\n                    var parentInjector = required[0];\n                    var moduleInjector = undefined;\n                    var ranAsync = false;\n                    if (!parentInjector || hasMultipleDowngradedModules) {\n                        var downgradedModule = info.downgradedModule || '';\n                        var lazyModuleRefKey = \"\" + LAZY_MODULE_REF + downgradedModule;\n                        var attemptedAction = \"instantiating component '\" + getTypeName(info.component) + \"'\";\n                        validateInjectionKey($injector, downgradedModule, lazyModuleRefKey, attemptedAction);\n                        var lazyModuleRef = $injector.get(lazyModuleRefKey);\n                        moduleInjector = lazyModuleRef.injector || lazyModuleRef.promise;\n                    }\n                    // Notes:\n                    //\n                    // There are two injectors: `finalModuleInjector` and `finalParentInjector` (they might be\n                    // the same instance, but that is irrelevant):\n                    // - `finalModuleInjector` is used to retrieve `ComponentFactoryResolver`, thus it must be\n                    //   on the same tree as the `NgModule` that declares this downgraded component.\n                    // - `finalParentInjector` is used for all other injection purposes.\n                    //   (Note that Angular knows to only traverse the component-tree part of that injector,\n                    //   when looking for an injectable and then switch to the module injector.)\n                    //\n                    // There are basically three cases:\n                    // - If there is no parent component (thus no `parentInjector`), we bootstrap the downgraded\n                    //   `NgModule` and use its injector as both `finalModuleInjector` and\n                    //   `finalParentInjector`.\n                    // - If there is a parent component (and thus a `parentInjector`) and we are sure that it\n                    //   belongs to the same `NgModule` as this downgraded component (e.g. because there is only\n                    //   one downgraded module, we use that `parentInjector` as both `finalModuleInjector` and\n                    //   `finalParentInjector`.\n                    // - If there is a parent component, but it may belong to a different `NgModule`, then we\n                    //   use the `parentInjector` as `finalParentInjector` and this downgraded component's\n                    //   declaring `NgModule`'s injector as `finalModuleInjector`.\n                    //   Note 1: If the `NgModule` is already bootstrapped, we just get its injector (we don't\n                    //           bootstrap again).\n                    //   Note 2: It is possible that (while there are multiple downgraded modules) this\n                    //           downgraded component and its parent component both belong to the same NgModule.\n                    //           In that case, we could have used the `parentInjector` as both\n                    //           `finalModuleInjector` and `finalParentInjector`, but (for simplicity) we are\n                    //           treating this case as if they belong to different `NgModule`s. That doesn't\n                    //           really affect anything, since `parentInjector` has `moduleInjector` as ancestor\n                    //           and trying to resolve `ComponentFactoryResolver` from either one will return\n                    //           the same instance.\n                    // If there is a parent component, use its injector as parent injector.\n                    // If this is a \"top-level\" Angular component, use the module injector.\n                    var finalParentInjector = parentInjector || moduleInjector;\n                    // If this is a \"top-level\" Angular component or the parent component may belong to a\n                    // different `NgModule`, use the module injector for module-specific dependencies.\n                    // If there is a parent component that belongs to the same `NgModule`, use its injector.\n                    var finalModuleInjector = moduleInjector || parentInjector;\n                    var doDowngrade = function (injector, moduleInjector) {\n                        // Retrieve `ComponentFactoryResolver` from the injector tied to the `NgModule` this\n                        // component belongs to.\n                        var componentFactoryResolver = moduleInjector.get(i0.ComponentFactoryResolver);\n                        var componentFactory = componentFactoryResolver.resolveComponentFactory(info.component);\n                        if (!componentFactory) {\n                            throw new Error(\"Expecting ComponentFactory for: \" + getTypeName(info.component));\n                        }\n                        var injectorPromise = new ParentInjectorPromise(element);\n                        var facade = new DowngradeComponentAdapter(element, attrs, scope, ngModel, injector, $compile, $parse, componentFactory, wrapCallback);\n                        var projectableNodes = facade.compileContents();\n                        facade.createComponent(projectableNodes);\n                        facade.setupInputs(isNgUpgradeLite, info.propagateDigest);\n                        facade.setupOutputs();\n                        facade.registerCleanup();\n                        injectorPromise.resolve(facade.getInjector());\n                        if (ranAsync) {\n                            // If this is run async, it is possible that it is not run inside a\n                            // digest and initial input values will not be detected.\n                            scope.$evalAsync(function () { });\n                        }\n                    };\n                    var downgradeFn = !isNgUpgradeLite ? doDowngrade : function (pInjector, mInjector) {\n                        if (!ngZone) {\n                            ngZone = pInjector.get(i0.NgZone);\n                        }\n                        wrapCallback(function () { return doDowngrade(pInjector, mInjector); })();\n                    };\n                    // NOTE:\n                    // Not using `ParentInjectorPromise.all()` (which is inherited from `SyncPromise`), because\n                    // Closure Compiler (or some related tool) complains:\n                    // `TypeError: ...$src$downgrade_component_ParentInjectorPromise.all is not a function`\n                    SyncPromise.all([finalParentInjector, finalModuleInjector])\n                        .then(function (_a) {\n                        var _b = __read(_a, 2), pInjector = _b[0], mInjector = _b[1];\n                        return downgradeFn(pInjector, mInjector);\n                    });\n                    ranAsync = true;\n                }\n            };\n        };\n        // bracket-notation because of closure - see #14441\n        directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n        return directiveFactory;\n    }\n    /**\n     * Synchronous promise-like object to wrap parent injectors,\n     * to preserve the synchronous nature of AngularJS's `$compile`.\n     */\n    var ParentInjectorPromise = /** @class */ (function (_super) {\n        __extends(ParentInjectorPromise, _super);\n        function ParentInjectorPromise(element) {\n            var _this = _super.call(this) || this;\n            _this.element = element;\n            _this.injectorKey = controllerKey(INJECTOR_KEY);\n            // Store the promise on the element.\n            element.data(_this.injectorKey, _this);\n            return _this;\n        }\n        ParentInjectorPromise.prototype.resolve = function (injector) {\n            // Store the real injector on the element.\n            this.element.data(this.injectorKey, injector);\n            // Release the element to prevent memory leaks.\n            this.element = null;\n            // Resolve the promise.\n            _super.prototype.resolve.call(this, injector);\n        };\n        return ParentInjectorPromise;\n    }(SyncPromise));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * A helper function to allow an Angular service to be accessible from AngularJS.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n     * library for hybrid upgrade apps that support AOT compilation*\n     *\n     * This helper function returns a factory function that provides access to the Angular\n     * service identified by the `token` parameter.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * First ensure that the service to be downgraded is provided in an `NgModule`\n     * that will be part of the upgrade application. For example, let's assume we have\n     * defined `HeroesService`\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-heroes-service\"}\n     *\n     * and that we have included this in our upgrade app `NgModule`\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng2-module\"}\n     *\n     * Now we can register the `downgradeInjectable` factory function for the service\n     * on an AngularJS module.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"downgrade-ng2-heroes-service\"}\n     *\n     * Inside an AngularJS component's controller we can get hold of the\n     * downgraded service via the name we gave when downgrading.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"example-app\"}\n     *\n     * <div class=\"alert is-important\">\n     *\n     *   When using `downgradeModule()`, downgraded injectables will not be available until the Angular\n     *   module that provides them is instantiated. In order to be safe, you need to ensure that the\n     *   downgraded injectables are not used anywhere _outside_ the part of the app where it is\n     *   guaranteed that their module has been instantiated.\n     *\n     *   For example, it is _OK_ to use a downgraded service in an upgraded component that is only used\n     *   from a downgraded Angular component provided by the same Angular module as the injectable, but\n     *   it is _not OK_ to use it in an AngularJS component that may be used independently of Angular or\n     *   use it in a downgraded Angular component from a different module.\n     *\n     * </div>\n     *\n     * @param token an `InjectionToken` that identifies a service provided from Angular.\n     * @param downgradedModule the name of the downgraded module (if any) that the injectable\n     * \"belongs to\", as returned by a call to `downgradeModule()`. It is the module, whose injector will\n     * be used for instantiating the injectable.<br />\n     * (This option is only necessary when using `downgradeModule()` to downgrade more than one Angular\n     * module.)\n     *\n     * @returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n     * used to register the service on an AngularJS module.\n     *\n     * @publicApi\n     */\n    function downgradeInjectable(token, downgradedModule) {\n        if (downgradedModule === void 0) { downgradedModule = ''; }\n        var factory = function ($injector) {\n            var injectorKey = \"\" + INJECTOR_KEY + downgradedModule;\n            var injectableName = isFunction(token) ? getTypeName(token) : String(token);\n            var attemptedAction = \"instantiating injectable '\" + injectableName + \"'\";\n            validateInjectionKey($injector, downgradedModule, injectorKey, attemptedAction);\n            try {\n                var injector = $injector.get(injectorKey);\n                return injector.get(token);\n            }\n            catch (err) {\n                throw new Error(\"Error while \" + attemptedAction + \": \" + (err.message || err));\n            }\n        };\n        factory['$inject'] = [$INJECTOR];\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @publicApi\n     */\n    var VERSION = new i0.Version('12.0.0-next.8+31.sha-ebc80b3');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // We have to do a little dance to get the ng1 injector into the module injector.\n    // We store the ng1 injector so that the provider in the module injector can access it\n    // Then we \"get\" the ng1 injector from the module injector, which triggers the provider to read\n    // the stored injector and release the reference to it.\n    var tempInjectorRef = null;\n    function setTempInjectorRef(injector) {\n        tempInjectorRef = injector;\n    }\n    function injectorFactory() {\n        if (!tempInjectorRef) {\n            throw new Error('Trying to get the AngularJS injector before it being set.');\n        }\n        var injector = tempInjectorRef;\n        tempInjectorRef = null; // clear the value to prevent memory leaks\n        return injector;\n    }\n    function rootScopeFactory(i) {\n        return i.get('$rootScope');\n    }\n    function compileFactory(i) {\n        return i.get('$compile');\n    }\n    function parseFactory(i) {\n        return i.get('$parse');\n    }\n    var angular1Providers = [\n        // We must use exported named functions for the ng2 factories to keep the compiler happy:\n        // > Metadata collected contains an error that will be reported at runtime:\n        // >   Function calls are not supported.\n        // >   Consider replacing the function or lambda with a reference to an exported function\n        { provide: '$injector', useFactory: injectorFactory, deps: [] },\n        { provide: '$rootScope', useFactory: rootScopeFactory, deps: ['$injector'] },\n        { provide: '$compile', useFactory: compileFactory, deps: ['$injector'] },\n        { provide: '$parse', useFactory: parseFactory, deps: ['$injector'] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NgAdapterInjector = /** @class */ (function () {\n        function NgAdapterInjector(modInjector) {\n            this.modInjector = modInjector;\n        }\n        // When Angular locate a service in the component injector tree, the not found value is set to\n        // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n        // injector.\n        // AngularJS only supports a single tree and should always check the module injector.\n        NgAdapterInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === i0.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                return notFoundValue;\n            }\n            return this.modInjector.get(token, notFoundValue);\n        };\n        return NgAdapterInjector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var moduleUid = 0;\n    /**\n     * @description\n     *\n     * A helper function for creating an AngularJS module that can bootstrap an Angular module\n     * \"on-demand\" (possibly lazily) when a {@link downgradeComponent downgraded component} needs to be\n     * instantiated.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade/static) library for hybrid upgrade apps that\n     * support AOT compilation.*\n     *\n     * It allows loading/bootstrapping the Angular part of a hybrid application lazily and not having to\n     * pay the cost up-front. For example, you can have an AngularJS application that uses Angular for\n     * specific routes and only instantiate the Angular modules if/when the user visits one of these\n     * routes.\n     *\n     * The Angular module will be bootstrapped once (when requested for the first time) and the same\n     * reference will be used from that point onwards.\n     *\n     * `downgradeModule()` requires either an `NgModuleFactory` or a function:\n     * - `NgModuleFactory`: If you pass an `NgModuleFactory`, it will be used to instantiate a module\n     *   using `platformBrowser`'s {@link PlatformRef#bootstrapModuleFactory bootstrapModuleFactory()}.\n     * - `Function`: If you pass a function, it is expected to return a promise resolving to an\n     *   `NgModuleRef`. The function is called with an array of extra {@link StaticProvider Providers}\n     *   that are expected to be available from the returned `NgModuleRef`'s `Injector`.\n     *\n     * `downgradeModule()` returns the name of the created AngularJS wrapper module. You can use it to\n     * declare a dependency in your main AngularJS module.\n     *\n     * {@example upgrade/static/ts/lite/module.ts region=\"basic-how-to\"}\n     *\n     * For more details on how to use `downgradeModule()` see\n     * [Upgrading for Performance](guide/upgrade-performance).\n     *\n     * @usageNotes\n     *\n     * Apart from `UpgradeModule`, you can use the rest of the `upgrade/static` helpers as usual to\n     * build a hybrid application. Note that the Angular pieces (e.g. downgraded services) will not be\n     * available until the downgraded module has been bootstrapped, i.e. by instantiating a downgraded\n     * component.\n     *\n     * <div class=\"alert is-important\">\n     *\n     *   You cannot use `downgradeModule()` and `UpgradeModule` in the same hybrid application.<br />\n     *   Use one or the other.\n     *\n     * </div>\n     *\n     * ### Differences with `UpgradeModule`\n     *\n     * Besides their different API, there are two important internal differences between\n     * `downgradeModule()` and `UpgradeModule` that affect the behavior of hybrid applications:\n     *\n     * 1. Unlike `UpgradeModule`, `downgradeModule()` does not bootstrap the main AngularJS module\n     *    inside the {@link NgZone Angular zone}.\n     * 2. Unlike `UpgradeModule`, `downgradeModule()` does not automatically run a\n     *    [$digest()](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest) when changes are\n     *    detected in the Angular part of the application.\n     *\n     * What this means is that applications using `UpgradeModule` will run change detection more\n     * frequently in order to ensure that both frameworks are properly notified about possible changes.\n     * This will inevitably result in more change detection runs than necessary.\n     *\n     * `downgradeModule()`, on the other side, does not try to tie the two change detection systems as\n     * tightly, restricting the explicit change detection runs only to cases where it knows it is\n     * necessary (e.g. when the inputs of a downgraded component change). This improves performance,\n     * especially in change-detection-heavy applications, but leaves it up to the developer to manually\n     * notify each framework as needed.\n     *\n     * For a more detailed discussion of the differences and their implications, see\n     * [Upgrading for Performance](guide/upgrade-performance).\n     *\n     * <div class=\"alert is-helpful\">\n     *\n     *   You can manually trigger a change detection run in AngularJS using\n     *   [scope.$apply(...)](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$apply) or\n     *   [$rootScope.$digest()](https://docs.angularjs.org/api/ng/type/$rootScope.Scope#$digest).\n     *\n     *   You can manually trigger a change detection run in Angular using {@link NgZone#run\n     *   ngZone.run(...)}.\n     *\n     * </div>\n     *\n     * ### Downgrading multiple modules\n     *\n     * It is possible to downgrade multiple modules and include them in an AngularJS application. In\n     * that case, each downgraded module will be bootstrapped when an associated downgraded component or\n     * injectable needs to be instantiated.\n     *\n     * Things to keep in mind, when downgrading multiple modules:\n     *\n     * - Each downgraded component/injectable needs to be explicitly associated with a downgraded\n     *   module. See `downgradeComponent()` and `downgradeInjectable()` for more details.\n     *\n     * - If you want some injectables to be shared among all downgraded modules, you can provide them as\n     *   `StaticProvider`s, when creating the `PlatformRef` (e.g. via `platformBrowser` or\n     *   `platformBrowserDynamic`).\n     *\n     * - When using {@link PlatformRef#bootstrapmodule `bootstrapModule()`} or\n     *   {@link PlatformRef#bootstrapmodulefactory `bootstrapModuleFactory()`} to bootstrap the\n     *   downgraded modules, each one is considered a \"root\" module. As a consequence, a new instance\n     *   will be created for every injectable provided in `\"root\"` (via\n     *   {@link Injectable#providedIn `providedIn`}).\n     *   If this is not your intention, you can have a shared module (that will act as act as the \"root\"\n     *   module) and create all downgraded modules using that module's injector:\n     *\n     *   {@example upgrade/static/ts/lite-multi-shared/module.ts region=\"shared-root-module\"}\n     *\n     * @publicApi\n     */\n    function downgradeModule(moduleFactoryOrBootstrapFn) {\n        var lazyModuleName = UPGRADE_MODULE_NAME + \".lazy\" + ++moduleUid;\n        var lazyModuleRefKey = \"\" + LAZY_MODULE_REF + lazyModuleName;\n        var lazyInjectorKey = \"\" + INJECTOR_KEY + lazyModuleName;\n        var bootstrapFn = isFunction(moduleFactoryOrBootstrapFn) ?\n            moduleFactoryOrBootstrapFn :\n            function (extraProviders) { return platformBrowser.platformBrowser(extraProviders).bootstrapModuleFactory(moduleFactoryOrBootstrapFn); };\n        var injector;\n        // Create an ng1 module to bootstrap.\n        module_(lazyModuleName, [])\n            .constant(UPGRADE_APP_TYPE_KEY, 3 /* Lite */)\n            .factory(INJECTOR_KEY, [lazyInjectorKey, identity])\n            .factory(lazyInjectorKey, function () {\n            if (!injector) {\n                throw new Error('Trying to get the Angular injector before bootstrapping the corresponding ' +\n                    'Angular module.');\n            }\n            return injector;\n        })\n            .factory(LAZY_MODULE_REF, [lazyModuleRefKey, identity])\n            .factory(lazyModuleRefKey, [\n            $INJECTOR,\n            function ($injector) {\n                setTempInjectorRef($injector);\n                var result = {\n                    promise: bootstrapFn(angular1Providers).then(function (ref) {\n                        injector = result.injector = new NgAdapterInjector(ref.injector);\n                        injector.get($INJECTOR);\n                        // Destroy the AngularJS app once the Angular `PlatformRef` is destroyed.\n                        // This does not happen in a typical SPA scenario, but it might be useful for\n                        // other use-cases where disposing of an Angular/AngularJS app is necessary\n                        // (such as Hot Module Replacement (HMR)).\n                        // See https://github.com/angular/angular/issues/39935.\n                        injector.get(i0.PlatformRef).onDestroy(function () { return destroyApp($injector); });\n                        return injector;\n                    })\n                };\n                return result;\n            }\n        ])\n            .config([\n            $INJECTOR, $PROVIDE,\n            function ($injector, $provide) {\n                $provide.constant(DOWNGRADED_MODULE_COUNT_KEY, getDowngradedModuleCount($injector) + 1);\n            }\n        ]);\n        return lazyModuleName;\n    }\n    function identity(x) {\n        return x;\n    }\n\n    // Constants\n    var REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n    // Classes\n    var UpgradeHelper = /** @class */ (function () {\n        function UpgradeHelper(injector, name, elementRef, directive) {\n            this.name = name;\n            this.$injector = injector.get($INJECTOR);\n            this.$compile = this.$injector.get($COMPILE);\n            this.$controller = this.$injector.get($CONTROLLER);\n            this.element = elementRef.nativeElement;\n            this.$element = element(this.element);\n            this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n        }\n        UpgradeHelper.getDirective = function ($injector, name) {\n            var directives = $injector.get(name + 'Directive');\n            if (directives.length > 1) {\n                throw new Error(\"Only support single directive definition for: \" + name);\n            }\n            var directive = directives[0];\n            // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n            // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n            if (directive.compile && !directive.link)\n                notSupported(name, 'compile');\n            if (directive.replace)\n                notSupported(name, 'replace');\n            if (directive.terminal)\n                notSupported(name, 'terminal');\n            return directive;\n        };\n        UpgradeHelper.getTemplate = function ($injector, directive, fetchRemoteTemplate, $element) {\n            if (fetchRemoteTemplate === void 0) { fetchRemoteTemplate = false; }\n            if (directive.template !== undefined) {\n                return getOrCall(directive.template, $element);\n            }\n            else if (directive.templateUrl) {\n                var $templateCache_1 = $injector.get($TEMPLATE_CACHE);\n                var url_1 = getOrCall(directive.templateUrl, $element);\n                var template = $templateCache_1.get(url_1);\n                if (template !== undefined) {\n                    return template;\n                }\n                else if (!fetchRemoteTemplate) {\n                    throw new Error('loading directive templates asynchronously is not supported');\n                }\n                return new Promise(function (resolve, reject) {\n                    var $httpBackend = $injector.get($HTTP_BACKEND);\n                    $httpBackend('GET', url_1, null, function (status, response) {\n                        if (status === 200) {\n                            resolve($templateCache_1.put(url_1, response));\n                        }\n                        else {\n                            reject(\"GET component template from '\" + url_1 + \"' returned '\" + status + \": \" + response + \"'\");\n                        }\n                    });\n                });\n            }\n            else {\n                throw new Error(\"Directive '\" + directive.name + \"' is not a component, it is missing template.\");\n            }\n        };\n        UpgradeHelper.prototype.buildController = function (controllerType, $scope) {\n            // TODO: Document that we do not pre-assign bindings on the controller instance.\n            // Quoted properties below so that this code can be optimized with Closure Compiler.\n            var locals = { '$scope': $scope, '$element': this.$element };\n            var controller = this.$controller(controllerType, locals, null, this.directive.controllerAs);\n            this.$element.data(controllerKey(this.directive.name), controller);\n            return controller;\n        };\n        UpgradeHelper.prototype.compileTemplate = function (template) {\n            if (template === undefined) {\n                template =\n                    UpgradeHelper.getTemplate(this.$injector, this.directive, false, this.$element);\n            }\n            return this.compileHtml(template);\n        };\n        UpgradeHelper.prototype.onDestroy = function ($scope, controllerInstance) {\n            if (controllerInstance && isFunction(controllerInstance.$onDestroy)) {\n                controllerInstance.$onDestroy();\n            }\n            $scope.$destroy();\n            cleanData(this.element);\n        };\n        UpgradeHelper.prototype.prepareTransclusion = function () {\n            var _this = this;\n            var transclude = this.directive.transclude;\n            var contentChildNodes = this.extractChildNodes();\n            var attachChildrenFn = function (scope, cloneAttachFn) {\n                // Since AngularJS v1.5.8, `cloneAttachFn` will try to destroy the transclusion scope if\n                // `$template` is empty. Since the transcluded content comes from Angular, not AngularJS,\n                // there will be no transclusion scope here.\n                // Provide a dummy `scope.$destroy()` method to prevent `cloneAttachFn` from throwing.\n                scope = scope || { $destroy: function () { return undefined; } };\n                return cloneAttachFn($template, scope);\n            };\n            var $template = contentChildNodes;\n            if (transclude) {\n                var slots_1 = Object.create(null);\n                if (typeof transclude === 'object') {\n                    $template = [];\n                    var slotMap_1 = Object.create(null);\n                    var filledSlots_1 = Object.create(null);\n                    // Parse the element selectors.\n                    Object.keys(transclude).forEach(function (slotName) {\n                        var selector = transclude[slotName];\n                        var optional = selector.charAt(0) === '?';\n                        selector = optional ? selector.substring(1) : selector;\n                        slotMap_1[selector] = slotName;\n                        slots_1[slotName] = null; // `null`: Defined but not yet filled.\n                        filledSlots_1[slotName] = optional; // Consider optional slots as filled.\n                    });\n                    // Add the matching elements into their slot.\n                    contentChildNodes.forEach(function (node) {\n                        var slotName = slotMap_1[directiveNormalize(node.nodeName.toLowerCase())];\n                        if (slotName) {\n                            filledSlots_1[slotName] = true;\n                            slots_1[slotName] = slots_1[slotName] || [];\n                            slots_1[slotName].push(node);\n                        }\n                        else {\n                            $template.push(node);\n                        }\n                    });\n                    // Check for required slots that were not filled.\n                    Object.keys(filledSlots_1).forEach(function (slotName) {\n                        if (!filledSlots_1[slotName]) {\n                            throw new Error(\"Required transclusion slot '\" + slotName + \"' on directive: \" + _this.name);\n                        }\n                    });\n                    Object.keys(slots_1).filter(function (slotName) { return slots_1[slotName]; }).forEach(function (slotName) {\n                        var nodes = slots_1[slotName];\n                        slots_1[slotName] = function (scope, cloneAttach) {\n                            return cloneAttach(nodes, scope);\n                        };\n                    });\n                }\n                // Attach `$$slots` to default slot transclude fn.\n                attachChildrenFn.$$slots = slots_1;\n                // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n                // removes all text content after the first interpolation and updates it later, after\n                // evaluating the expressions. This would result in AngularJS failing to recognize text\n                // nodes that start with an interpolation as transcluded content and use the fallback\n                // content instead.\n                // To avoid this issue, we add a\n                // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n                // to empty text nodes (which can only be a result of Angular removing their initial content).\n                // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n                //       will still fail to be detected by AngularJS v1.6+\n                $template.forEach(function (node) {\n                    if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n                        node.nodeValue = '\\u200C';\n                    }\n                });\n            }\n            return attachChildrenFn;\n        };\n        UpgradeHelper.prototype.resolveAndBindRequiredControllers = function (controllerInstance) {\n            var directiveRequire = this.getDirectiveRequire();\n            var requiredControllers = this.resolveRequire(directiveRequire);\n            if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n                var requiredControllersMap_1 = requiredControllers;\n                Object.keys(requiredControllersMap_1).forEach(function (key) {\n                    controllerInstance[key] = requiredControllersMap_1[key];\n                });\n            }\n            return requiredControllers;\n        };\n        UpgradeHelper.prototype.compileHtml = function (html) {\n            this.element.innerHTML = html;\n            return this.$compile(this.element.childNodes);\n        };\n        UpgradeHelper.prototype.extractChildNodes = function () {\n            var childNodes = [];\n            var childNode;\n            while (childNode = this.element.firstChild) {\n                this.element.removeChild(childNode);\n                childNodes.push(childNode);\n            }\n            return childNodes;\n        };\n        UpgradeHelper.prototype.getDirectiveRequire = function () {\n            var require = this.directive.require || (this.directive.controller && this.directive.name);\n            if (isMap(require)) {\n                Object.keys(require).forEach(function (key) {\n                    var value = require[key];\n                    var match = value.match(REQUIRE_PREFIX_RE);\n                    var name = value.substring(match[0].length);\n                    if (!name) {\n                        require[key] = match[0] + key;\n                    }\n                });\n            }\n            return require;\n        };\n        UpgradeHelper.prototype.resolveRequire = function (require, controllerInstance) {\n            var _this = this;\n            if (!require) {\n                return null;\n            }\n            else if (Array.isArray(require)) {\n                return require.map(function (req) { return _this.resolveRequire(req); });\n            }\n            else if (typeof require === 'object') {\n                var value_1 = {};\n                Object.keys(require).forEach(function (key) { return value_1[key] = _this.resolveRequire(require[key]); });\n                return value_1;\n            }\n            else if (typeof require === 'string') {\n                var match = require.match(REQUIRE_PREFIX_RE);\n                var inheritType = match[1] || match[3];\n                var name = require.substring(match[0].length);\n                var isOptional = !!match[2];\n                var searchParents = !!inheritType;\n                var startOnParent = inheritType === '^^';\n                var ctrlKey = controllerKey(name);\n                var elem = startOnParent ? this.$element.parent() : this.$element;\n                var value = searchParents ? elem.inheritedData(ctrlKey) : elem.data(ctrlKey);\n                if (!value && !isOptional) {\n                    throw new Error(\"Unable to find required '\" + require + \"' in upgraded directive '\" + this.name + \"'.\");\n                }\n                return value;\n            }\n            else {\n                throw new Error(\"Unrecognized 'require' syntax on upgraded directive '\" + this.name + \"': \" + require);\n            }\n        };\n        return UpgradeHelper;\n    }());\n    function getOrCall(property) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        return isFunction(property) ? property.apply(void 0, __spreadArray([], __read(args))) : property;\n    }\n    // NOTE: Only works for `typeof T !== 'object'`.\n    function isMap(value) {\n        return value && !Array.isArray(value) && typeof value === 'object';\n    }\n    function notSupported(name, feature) {\n        throw new Error(\"Upgraded directive '\" + name + \"' contains unsupported feature: '\" + feature + \"'.\");\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOT_SUPPORTED = 'NOT_SUPPORTED';\n    var INITIAL_VALUE$1 = {\n        __UNINITIALIZED__: true\n    };\n    var Bindings = /** @class */ (function () {\n        function Bindings() {\n            this.twoWayBoundProperties = [];\n            this.twoWayBoundLastValues = [];\n            this.expressionBoundProperties = [];\n            this.propertyToOutputMap = {};\n        }\n        return Bindings;\n    }());\n    /**\n     * @description\n     *\n     * A helper class that allows an AngularJS component to be used from Angular.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n     * library for hybrid upgrade apps that support AOT compilation.*\n     *\n     * This helper class should be used as a base class for creating Angular directives\n     * that wrap AngularJS components that need to be \"upgraded\".\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n     * to be made available in Angular templates.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero\"}\n     *\n     * We must create a `Directive` that will make this AngularJS component\n     * available inside Angular templates.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\"}\n     *\n     * In this example you can see that we must derive from the `UpgradeComponent`\n     * base class but also provide an {@link Directive `@Directive`} decorator. This is\n     * because the AOT compiler requires that this information is statically available at\n     * compile time.\n     *\n     * Note that we must do the following:\n     * * specify the directive's selector (`ng1-hero`)\n     * * specify all inputs and outputs that the AngularJS component expects\n     * * derive from `UpgradeComponent`\n     * * call the base class from the constructor, passing\n     *   * the AngularJS name of the component (`ng1Hero`)\n     *   * the `ElementRef` and `Injector` for the component wrapper\n     *\n     * @publicApi\n     */\n    var UpgradeComponent = /** @class */ (function () {\n        /**\n         * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n         * Instead you should derive a new class from this one and call the super constructor\n         * from the base class.\n         *\n         * {@example upgrade/static/ts/full/module.ts region=\"ng1-hero-wrapper\" }\n         *\n         * * The `name` parameter should be the name of the AngularJS directive.\n         * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n         *   injection into the base class constructor.\n         */\n        function UpgradeComponent(name, elementRef, injector) {\n            this.name = name;\n            this.elementRef = elementRef;\n            this.injector = injector;\n            this.helper = new UpgradeHelper(injector, name, elementRef);\n            this.$injector = this.helper.$injector;\n            this.element = this.helper.element;\n            this.$element = this.helper.$element;\n            this.directive = this.helper.directive;\n            this.bindings = this.initializeBindings(this.directive);\n            // We ask for the AngularJS scope from the Angular injector, since\n            // we will put the new component scope onto the new injector for each component\n            var $parentScope = injector.get($SCOPE);\n            // QUESTION 1: Should we create an isolated scope if the scope is only true?\n            // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n            this.$componentScope = $parentScope.$new(!!this.directive.scope);\n            this.initializeOutputs();\n        }\n        UpgradeComponent.prototype.ngOnInit = function () {\n            var _this = this;\n            // Collect contents, insert and compile template\n            var attachChildNodes = this.helper.prepareTransclusion();\n            var linkFn = this.helper.compileTemplate();\n            // Instantiate controller\n            var controllerType = this.directive.controller;\n            var bindToController = this.directive.bindToController;\n            if (controllerType) {\n                this.controllerInstance = this.helper.buildController(controllerType, this.$componentScope);\n            }\n            else if (bindToController) {\n                throw new Error(\"Upgraded directive '\" + this.directive.name + \"' specifies 'bindToController' but no controller.\");\n            }\n            // Set up outputs\n            this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n            this.bindOutputs();\n            // Require other controllers\n            var requiredControllers = this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n            // Hook: $onChanges\n            if (this.pendingChanges) {\n                this.forwardChanges(this.pendingChanges);\n                this.pendingChanges = null;\n            }\n            // Hook: $onInit\n            if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n                this.controllerInstance.$onInit();\n            }\n            // Hook: $doCheck\n            if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n                var callDoCheck = function () { return _this.controllerInstance.$doCheck(); };\n                this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n                callDoCheck();\n            }\n            // Linking\n            var link = this.directive.link;\n            var preLink = typeof link == 'object' && link.pre;\n            var postLink = typeof link == 'object' ? link.post : link;\n            var attrs = NOT_SUPPORTED;\n            var transcludeFn = NOT_SUPPORTED;\n            if (preLink) {\n                preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n            }\n            linkFn(this.$componentScope, null, { parentBoundTranscludeFn: attachChildNodes });\n            if (postLink) {\n                postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n            }\n            // Hook: $postLink\n            if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n                this.controllerInstance.$postLink();\n            }\n        };\n        UpgradeComponent.prototype.ngOnChanges = function (changes) {\n            if (!this.bindingDestination) {\n                this.pendingChanges = changes;\n            }\n            else {\n                this.forwardChanges(changes);\n            }\n        };\n        UpgradeComponent.prototype.ngDoCheck = function () {\n            var _this = this;\n            var twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n            var twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n            var propertyToOutputMap = this.bindings.propertyToOutputMap;\n            twoWayBoundProperties.forEach(function (propName, idx) {\n                var newValue = _this.bindingDestination[propName];\n                var oldValue = twoWayBoundLastValues[idx];\n                if (!Object.is(newValue, oldValue)) {\n                    var outputName = propertyToOutputMap[propName];\n                    var eventEmitter = _this[outputName];\n                    eventEmitter.emit(newValue);\n                    twoWayBoundLastValues[idx] = newValue;\n                }\n            });\n        };\n        UpgradeComponent.prototype.ngOnDestroy = function () {\n            if (isFunction(this.unregisterDoCheckWatcher)) {\n                this.unregisterDoCheckWatcher();\n            }\n            this.helper.onDestroy(this.$componentScope, this.controllerInstance);\n        };\n        UpgradeComponent.prototype.initializeBindings = function (directive) {\n            var _this = this;\n            var btcIsObject = typeof directive.bindToController === 'object';\n            if (btcIsObject && Object.keys(directive.scope).length) {\n                throw new Error(\"Binding definitions on scope and controller at the same time is not supported.\");\n            }\n            var context = btcIsObject ? directive.bindToController : directive.scope;\n            var bindings = new Bindings();\n            if (typeof context == 'object') {\n                Object.keys(context).forEach(function (propName) {\n                    var definition = context[propName];\n                    var bindingType = definition.charAt(0);\n                    // QUESTION: What about `=*`? Ignore? Throw? Support?\n                    switch (bindingType) {\n                        case '@':\n                        case '<':\n                            // We don't need to do anything special. They will be defined as inputs on the\n                            // upgraded component facade and the change propagation will be handled by\n                            // `ngOnChanges()`.\n                            break;\n                        case '=':\n                            bindings.twoWayBoundProperties.push(propName);\n                            bindings.twoWayBoundLastValues.push(INITIAL_VALUE$1);\n                            bindings.propertyToOutputMap[propName] = propName + 'Change';\n                            break;\n                        case '&':\n                            bindings.expressionBoundProperties.push(propName);\n                            bindings.propertyToOutputMap[propName] = propName;\n                            break;\n                        default:\n                            var json = JSON.stringify(context);\n                            throw new Error(\"Unexpected mapping '\" + bindingType + \"' in '\" + json + \"' in '\" + _this.name + \"' directive.\");\n                    }\n                });\n            }\n            return bindings;\n        };\n        UpgradeComponent.prototype.initializeOutputs = function () {\n            var _this = this;\n            // Initialize the outputs for `=` and `&` bindings\n            this.bindings.twoWayBoundProperties.concat(this.bindings.expressionBoundProperties)\n                .forEach(function (propName) {\n                var outputName = _this.bindings.propertyToOutputMap[propName];\n                _this[outputName] = new i0.EventEmitter();\n            });\n        };\n        UpgradeComponent.prototype.bindOutputs = function () {\n            var _this = this;\n            // Bind `&` bindings to the corresponding outputs\n            this.bindings.expressionBoundProperties.forEach(function (propName) {\n                var outputName = _this.bindings.propertyToOutputMap[propName];\n                var emitter = _this[outputName];\n                _this.bindingDestination[propName] = function (value) { return emitter.emit(value); };\n            });\n        };\n        UpgradeComponent.prototype.forwardChanges = function (changes) {\n            var _this = this;\n            // Forward input changes to `bindingDestination`\n            Object.keys(changes).forEach(function (propName) { return _this.bindingDestination[propName] = changes[propName].currentValue; });\n            if (isFunction(this.bindingDestination.$onChanges)) {\n                this.bindingDestination.$onChanges(changes);\n            }\n        };\n        return UpgradeComponent;\n    }());\n    UpgradeComponent.ɵfac = function UpgradeComponent_Factory(t) { i0.ɵɵinvalidFactory(); };\n    UpgradeComponent.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: UpgradeComponent, features: [i0.ɵɵNgOnChangesFeature] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UpgradeComponent, [{\n                type: i0.Directive\n            }], function () { return [{ type: undefined }, { type: i0.ElementRef }, { type: i0.Injector }]; }, null);\n    })();\n\n    /**\n     * @description\n     *\n     * An `NgModule`, which you import to provide AngularJS core services,\n     * and has an instance method used to bootstrap the hybrid upgrade application.\n     *\n     * *Part of the [upgrade/static](api?query=upgrade/static)\n     * library for hybrid upgrade apps that support AOT compilation*\n     *\n     * The `upgrade/static` package contains helpers that allow AngularJS and Angular components\n     * to be used together inside a hybrid upgrade application, which supports AOT compilation.\n     *\n     * Specifically, the classes and functions in the `upgrade/static` module allow the following:\n     *\n     * 1. Creation of an Angular directive that wraps and exposes an AngularJS component so\n     *    that it can be used in an Angular template. See `UpgradeComponent`.\n     * 2. Creation of an AngularJS directive that wraps and exposes an Angular component so\n     *    that it can be used in an AngularJS template. See `downgradeComponent`.\n     * 3. Creation of an Angular root injector provider that wraps and exposes an AngularJS\n     *    service so that it can be injected into an Angular context. See\n     *    {@link UpgradeModule#upgrading-an-angular-1-service Upgrading an AngularJS service} below.\n     * 4. Creation of an AngularJS service that wraps and exposes an Angular injectable\n     *    so that it can be injected into an AngularJS context. See `downgradeInjectable`.\n     * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n     *    coexisting in a single application.\n     *\n     * @usageNotes\n     *\n     * ```ts\n     * import {UpgradeModule} from '@angular/upgrade/static';\n     * ```\n     *\n     * See also the {@link UpgradeModule#examples examples} below.\n     *\n     * ### Mental Model\n     *\n     * When reasoning about how a hybrid application works it is useful to have a mental model which\n     * describes what is happening and explains what is happening at the lowest level.\n     *\n     * 1. There are two independent frameworks running in a single application, each framework treats\n     *    the other as a black box.\n     * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n     *    instantiated the element is the owner. Each framework only updates/interacts with its own\n     *    DOM elements and ignores others.\n     * 3. AngularJS directives always execute inside the AngularJS framework codebase regardless of\n     *    where they are instantiated.\n     * 4. Angular components always execute inside the Angular framework codebase regardless of\n     *    where they are instantiated.\n     * 5. An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\n     *    defining an Angular directive, which bootstraps the AngularJS component at its location\n     *    in the DOM. See `UpgradeComponent`.\n     * 6. An Angular component can be \"downgraded\" to an AngularJS component. This is achieved by\n     *    defining an AngularJS directive, which bootstraps the Angular component at its location\n     *    in the DOM. See `downgradeComponent`.\n     * 7. Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\n     *    the framework doing the instantiation. The other framework then instantiates and owns the\n     *    view for that component.\n     *    1. This implies that the component bindings will always follow the semantics of the\n     *       instantiation framework.\n     *    2. The DOM attributes are parsed by the framework that owns the current template. So\n     *       attributes in AngularJS templates must use kebab-case, while AngularJS templates must use\n     *       camelCase.\n     *    3. However the template binding syntax will always use the Angular style, e.g. square\n     *       brackets (`[...]`) for property binding.\n     * 8. Angular is bootstrapped first; AngularJS is bootstrapped second. AngularJS always owns the\n     *    root component of the application.\n     * 9. The new application is running in an Angular zone, and therefore it no longer needs calls to\n     *    `$apply()`.\n     *\n     * ### The `UpgradeModule` class\n     *\n     * This class is an `NgModule`, which you import to provide AngularJS core services,\n     * and has an instance method used to bootstrap the hybrid upgrade application.\n     *\n     * * Core AngularJS services\n     *   Importing this `NgModule` will add providers for the core\n     *   [AngularJS services](https://docs.angularjs.org/api/ng/service) to the root injector.\n     *\n     * * Bootstrap\n     *   The runtime instance of this class contains a {@link UpgradeModule#bootstrap `bootstrap()`}\n     *   method, which you use to bootstrap the top level AngularJS module onto an element in the\n     *   DOM for the hybrid upgrade app.\n     *\n     *   It also contains properties to access the {@link UpgradeModule#injector root injector}, the\n     *   bootstrap `NgZone` and the\n     *   [AngularJS $injector](https://docs.angularjs.org/api/auto/service/$injector).\n     *\n     * ### Examples\n     *\n     * Import the `UpgradeModule` into your top level {@link NgModule Angular `NgModule`}.\n     *\n     * {@example upgrade/static/ts/full/module.ts region='ng2-module'}\n     *\n     * Then inject `UpgradeModule` into your Angular `NgModule` and use it to bootstrap the top level\n     * [AngularJS module](https://docs.angularjs.org/api/ng/type/angular.Module) in the\n     * `ngDoBootstrap()` method.\n     *\n     * {@example upgrade/static/ts/full/module.ts region='bootstrap-ng1'}\n     *\n     * Finally, kick off the whole process, by bootstraping your top level Angular `NgModule`.\n     *\n     * {@example upgrade/static/ts/full/module.ts region='bootstrap-ng2'}\n     *\n     * {@a upgrading-an-angular-1-service}\n     * ### Upgrading an AngularJS service\n     *\n     * There is no specific API for upgrading an AngularJS service. Instead you should just follow the\n     * following recipe:\n     *\n     * Let's say you have an AngularJS service:\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"ng1-text-formatter-service\"}\n     *\n     * Then you should define an Angular provider to be included in your `NgModule` `providers`\n     * property.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"upgrade-ng1-service\"}\n     *\n     * Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\n     * or service.\n     *\n     * {@example upgrade/static/ts/full/module.ts region=\"use-ng1-upgraded-service\"}\n     *\n     * @publicApi\n     */\n    var UpgradeModule = /** @class */ (function () {\n        function UpgradeModule(\n        /** The root `Injector` for the upgrade application. */\n        injector, \n        /** The bootstrap zone for the upgrade application */\n        ngZone, \n        /**\n         * The owning `NgModuleRef`s `PlatformRef` instance.\n         * This is used to tie the lifecycle of the bootstrapped AngularJS apps to that of the Angular\n         * `PlatformRef`.\n         */\n        platformRef) {\n            this.ngZone = ngZone;\n            this.platformRef = platformRef;\n            this.injector = new NgAdapterInjector(injector);\n        }\n        /**\n         * Bootstrap an AngularJS application from this NgModule\n         * @param element the element on which to bootstrap the AngularJS application\n         * @param [modules] the AngularJS modules to bootstrap for this application\n         * @param [config] optional extra AngularJS bootstrap configuration\n         */\n        UpgradeModule.prototype.bootstrap = function (element$1, modules, config /*angular.IAngularBootstrapConfig*/) {\n            var _this = this;\n            if (modules === void 0) { modules = []; }\n            var INIT_MODULE_NAME = UPGRADE_MODULE_NAME + '.init';\n            // Create an ng1 module to bootstrap\n            module_(INIT_MODULE_NAME, [])\n                .constant(UPGRADE_APP_TYPE_KEY, 2 /* Static */)\n                .value(INJECTOR_KEY, this.injector)\n                .factory(LAZY_MODULE_REF, [INJECTOR_KEY, function (injector) { return ({ injector: injector }); }])\n                .config([\n                $PROVIDE, $INJECTOR,\n                function ($provide, $injector) {\n                    if ($injector.has($$TESTABILITY)) {\n                        $provide.decorator($$TESTABILITY, [\n                            $DELEGATE,\n                            function (testabilityDelegate) {\n                                var originalWhenStable = testabilityDelegate.whenStable;\n                                var injector = _this.injector;\n                                // Cannot use arrow function below because we need the context\n                                var newWhenStable = function (callback) {\n                                    originalWhenStable.call(testabilityDelegate, function () {\n                                        var ng2Testability = injector.get(i0.Testability);\n                                        if (ng2Testability.isStable()) {\n                                            callback();\n                                        }\n                                        else {\n                                            ng2Testability.whenStable(newWhenStable.bind(testabilityDelegate, callback));\n                                        }\n                                    });\n                                };\n                                testabilityDelegate.whenStable = newWhenStable;\n                                return testabilityDelegate;\n                            }\n                        ]);\n                    }\n                    if ($injector.has($INTERVAL)) {\n                        $provide.decorator($INTERVAL, [\n                            $DELEGATE,\n                            function (intervalDelegate) {\n                                // Wrap the $interval service so that setInterval is called outside NgZone,\n                                // but the callback is still invoked within it. This is so that $interval\n                                // won't block stability, which preserves the behavior from AngularJS.\n                                var wrappedInterval = function (fn, delay, count, invokeApply) {\n                                    var pass = [];\n                                    for (var _i = 4; _i < arguments.length; _i++) {\n                                        pass[_i - 4] = arguments[_i];\n                                    }\n                                    return _this.ngZone.runOutsideAngular(function () {\n                                        return intervalDelegate.apply(void 0, __spreadArray([function () {\n                                                var args = [];\n                                                for (var _i = 0; _i < arguments.length; _i++) {\n                                                    args[_i] = arguments[_i];\n                                                }\n                                                // Run callback in the next VM turn - $interval calls\n                                                // $rootScope.$apply, and running the callback in NgZone will\n                                                // cause a '$digest already in progress' error if it's in the\n                                                // same vm turn.\n                                                setTimeout(function () {\n                                                    _this.ngZone.run(function () { return fn.apply(void 0, __spreadArray([], __read(args))); });\n                                                });\n                                            }, delay, count, invokeApply], __read(pass)));\n                                    });\n                                };\n                                wrappedInterval['cancel'] = intervalDelegate.cancel;\n                                return wrappedInterval;\n                            }\n                        ]);\n                    }\n                }\n            ])\n                .run([\n                $INJECTOR,\n                function ($injector) {\n                    _this.$injector = $injector;\n                    var $rootScope = $injector.get('$rootScope');\n                    // Initialize the ng1 $injector provider\n                    setTempInjectorRef($injector);\n                    _this.injector.get($INJECTOR);\n                    // Put the injector on the DOM, so that it can be \"required\"\n                    element(element$1).data(controllerKey(INJECTOR_KEY), _this.injector);\n                    // Destroy the AngularJS app once the Angular `PlatformRef` is destroyed.\n                    // This does not happen in a typical SPA scenario, but it might be useful for\n                    // other use-cases where disposing of an Angular/AngularJS app is necessary\n                    // (such as Hot Module Replacement (HMR)).\n                    // See https://github.com/angular/angular/issues/39935.\n                    _this.platformRef.onDestroy(function () { return destroyApp($injector); });\n                    // Wire up the ng1 rootScope to run a digest cycle whenever the zone settles\n                    // We need to do this in the next tick so that we don't prevent the bootup stabilizing\n                    setTimeout(function () {\n                        var subscription = _this.ngZone.onMicrotaskEmpty.subscribe(function () {\n                            if ($rootScope.$$phase) {\n                                if (i0.isDevMode()) {\n                                    console.warn('A digest was triggered while one was already in progress. This may mean that something is triggering digests outside the Angular zone.');\n                                }\n                                return $rootScope.$evalAsync();\n                            }\n                            return $rootScope.$digest();\n                        });\n                        $rootScope.$on('$destroy', function () {\n                            subscription.unsubscribe();\n                        });\n                    }, 0);\n                }\n            ]);\n            var upgradeModule = module_(UPGRADE_MODULE_NAME, [INIT_MODULE_NAME].concat(modules));\n            // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n            var windowAngular = window['angular'];\n            windowAngular.resumeBootstrap = undefined;\n            // Bootstrap the AngularJS application inside our zone\n            this.ngZone.run(function () {\n                bootstrap(element$1, [upgradeModule.name], config);\n            });\n            // Patch resumeBootstrap() to run inside the ngZone\n            if (windowAngular.resumeBootstrap) {\n                var originalResumeBootstrap_1 = windowAngular.resumeBootstrap;\n                var ngZone_1 = this.ngZone;\n                windowAngular.resumeBootstrap = function () {\n                    var _this = this;\n                    var args = arguments;\n                    windowAngular.resumeBootstrap = originalResumeBootstrap_1;\n                    return ngZone_1.run(function () { return windowAngular.resumeBootstrap.apply(_this, args); });\n                };\n            }\n        };\n        return UpgradeModule;\n    }());\n    UpgradeModule.ɵfac = function UpgradeModule_Factory(t) { return new (t || UpgradeModule)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i0.PlatformRef)); };\n    UpgradeModule.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: UpgradeModule });\n    UpgradeModule.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ providers: [angular1Providers] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UpgradeModule, [{\n                type: i0.NgModule,\n                args: [{ providers: [angular1Providers] }]\n            }], function () { return [{ type: i0.Injector }, { type: i0.NgZone }, { type: i0.PlatformRef }]; }, null);\n    })();\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only re-exports items to appear in the public api. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.UpgradeComponent = UpgradeComponent;\n    exports.UpgradeModule = UpgradeModule;\n    exports.VERSION = VERSION;\n    exports.downgradeComponent = downgradeComponent;\n    exports.downgradeInjectable = downgradeInjectable;\n    exports.downgradeModule = downgradeModule;\n    exports.getAngularJSGlobal = getAngularJSGlobal;\n    exports.getAngularLib = getAngularLib;\n    exports.setAngularJSGlobal = setAngularJSGlobal;\n    exports.setAngularLib = setAngularLib;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=upgrade-static.umd.js.map\n"]}
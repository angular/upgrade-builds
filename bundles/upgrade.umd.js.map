{"version":3,"file":"upgrade.umd.js","sources":["../../../../packages/upgrade/src/dynamic/upgrade_adapter.ts","../../../../packages/upgrade/src/dynamic/upgrade_ng1_adapter.ts","../../../../packages/upgrade/src/dynamic/ng_content_selector_helper.ts","../../../../packages/upgrade/src/common/downgrade_injectable.ts","../../../../packages/upgrade/src/common/downgrade_component.ts","../../../../packages/upgrade/src/common/downgrade_component_adapter.ts","../../../../packages/upgrade/src/common/util.ts","../../../../packages/upgrade/src/common/ng_content_selector_helper.ts","../../../../packages/upgrade/src/common/component_info.ts","../../../../packages/upgrade/src/common/compiler_helpers/createElementCssSelector.ts","../../../../packages/upgrade/src/common/compiler_helpers/selector.ts","../../../../packages/upgrade/src/common/compiler_helpers/ml_parser/html_tags.ts","../../../../packages/upgrade/src/common/compiler_helpers/ml_parser/tags.ts","../../../../packages/upgrade/src/common/constants.ts","../../../../packages/upgrade/src/common/angular1.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {DirectiveResolver} from '@angular/compiler';\nimport {Compiler, CompilerOptions, Directive, Injector, NgModule, NgModuleRef, NgZone, Provider, Testability, Type} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport * as angular from '../common/angular1';\nimport {ComponentInfo} from '../common/component_info';\nimport {$$TESTABILITY, $COMPILE, $INJECTOR, $ROOT_SCOPE, COMPILER_KEY, INJECTOR_KEY, NG_ZONE_KEY} from '../common/constants';\nimport {downgradeComponent} from '../common/downgrade_component';\nimport {downgradeInjectable} from '../common/downgrade_injectable';\nimport {NgContentSelectorHelper} from '../common/ng_content_selector_helper';\nimport {Deferred, controllerKey, onError} from '../common/util';\n\nimport {DynamicNgContentSelectorHelper} from './ng_content_selector_helper';\nimport {UpgradeNg1ComponentAdapterBuilder} from './upgrade_ng1_adapter';\n\nlet /** @type {?} */ upgradeCount: number = 0;\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n * \n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n * \n * ## Mental Model\n * \n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n * \n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n * \n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * \n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * \n * ```\n * \n * \\@stable\n */\nexport class UpgradeAdapter {\nprivate idPrefix: string = `NG2_UPGRADE_${upgradeCount++}_`;\nprivate directiveResolver: DirectiveResolver = new DirectiveResolver();\nprivate downgradedComponents: Type<any>[] = [];\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n */\nprivate ng1ComponentsToBeUpgraded: {[name: string]: UpgradeNg1ComponentAdapterBuilder} = {};\nprivate upgradedProviders: Provider[] = [];\nprivate ngZone: NgZone;\nprivate ng1Module: angular.IModule;\nprivate moduleRef: NgModuleRef<any> = null;\nprivate ng2BootstrapDeferred: Deferred<angular.IInjectorService>;\n/**\n * @param {?} ng2AppModule\n * @param {?=} compilerOptions\n */\nconstructor(private ng2AppModule: Type<any>,\nprivate compilerOptions?: CompilerOptions) {\n    if (!ng2AppModule) {\n      throw new Error(\n          'UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.');\n    }\n  }\n/**\n * Allows Angular Component to be used from AngularJS.\n * \n * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n * Angular Component. The adapter will bootstrap Angular component from within the\n * AngularJS template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in AngularJS template. This means that the\n *    host element is controlled by AngularJS, but the component's view will be controlled by\n *    Angular.\n * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n *    syntax. This has to be done, this way because we must follow Angular components do not\n *    declare how the attributes should be interpreted.\n * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n *    by way of the `ControlValueAccessor` interface from \\@angular/forms. Only components that\n *    implement this interface are eligible.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n *   - ng-model: `<comp ng-model=\"name\">`\n * - Content projection: yes\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n * \n * \\@Component({ \n *   selector: 'greet',\n *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n * })\n * class Greeter {\n *   \\@Input() salutation: string;\n *   \\@Input() name: string;\n * }\n * \n * \\@NgModule({ \n *   declarations: [Greeter],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML =\n *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n * });\n * ```\n * @param {?} component\n * @return {?}\n */\ndowngradeNg2Component(component: Type<any>): Function {\n    this.downgradedComponents.push(component);\n\n    const /** @type {?} */ metadata: Directive = this.directiveResolver.resolve(component);\n    const /** @type {?} */ info: ComponentInfo = {component, inputs: metadata.inputs, outputs: metadata.outputs};\n\n    return downgradeComponent(info);\n  }\n/**\n * Allows AngularJS Component to be used from Angular.\n * \n * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n * directive. The adapter will bootstrap AngularJS component from within the Angular\n * template.\n * \n * ## Mental Model\n * \n * 1. The component is instantiated by being listed in Angular template. This means that the\n *    host element is controlled by Angular, but the component's view will be controlled by\n *    AngularJS.\n * \n * ## Supported Features\n * \n * - Bindings:\n *   - Attribute: `<comp name=\"World\">`\n *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n *   - Expression:  `<comp [name]=\"username\">`\n *   - Event:  `<comp (close)=\"doSomething()\">`\n * - Transclusion: yes\n * - Only some of the features of\n *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n *   supported:\n *   - `compile`: not supported because the host element is owned by Angular, which does\n *     not allow modifying DOM structure during compilation.\n *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n *   - `controllerAs`: supported.\n *   - `bindToController`: supported.\n *   - `link`: supported. (NOTE: only pre-link function is supported.)\n *   - `name`: supported.\n *   - `priority`: ignored.\n *   - `replace`: not supported.\n *   - `require`: supported.\n *   - `restrict`: must be set to 'E'.\n *   - `scope`: supported.\n *   - `template`: supported.\n *   - `templateUrl`: supported.\n *   - `terminal`: ignored.\n *   - `transclude`: supported.\n * \n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n * const module = angular.module('myExample', []);\n * \n * module.directive('greet', function() {\n *   return {\n *     scope: {salutation: '=', name: '=' },\n *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n *   };\n * });\n * \n * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n * \n * \\@Component({ \n *   selector: 'ng2',\n *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n * })\n * class Ng2Component {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2></ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n * });\n * ```\n * @param {?} name\n * @return {?}\n */\nupgradeNg1Component(name: string): Type<any> {\n    if (( /** @type {?} */((<any>this.ng1ComponentsToBeUpgraded))).hasOwnProperty(name)) {\n      return this.ng1ComponentsToBeUpgraded[name].type;\n    } else {\n      return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n          .type;\n    }\n  }\n/**\n * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n * Use this instead of `angular.mock.module()` to load the upgrade module into\n * the AngularJS testing injector.\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * \n * // configure the adapter with upgrade/downgrade components and services\n * upgradeAdapter.downgradeNg2Component(MyComponent);\n * \n * let upgradeAdapterRef: UpgradeAdapterRef;\n * let $compile, $rootScope;\n * \n * // We must register the adapter before any calls to `inject()`\n * beforeEach(() => {\n *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n * });\n * \n * beforeEach(inject((_$compile_, _$rootScope_) => {\n *   $compile = _$compile_;\n *   $rootScope = _$rootScope_;\n * }));\n * \n * it(\"says hello\", (done) => {\n *   upgradeAdapterRef.ready(() => {\n *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n *     $rootScope.$apply();\n *     expect(element.html()).toContain(\"Hello World\");\n *     done();\n *   })\n * });\n * \n * ```\n * \n * @param {?=} modules any AngularJS modules that the upgrade module should depend upon\n * @return {?} an {\\@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n * run assertions once the Angular components are ready to test through AngularJS.\n */\nregisterForNg1Tests(modules?: string[]): UpgradeAdapterRef {\n    const /** @type {?} */ windowNgMock = ( /** @type {?} */((window as any)))['angular'].mock;\n    if (!windowNgMock || !windowNgMock.module) {\n      throw new Error('Failed to find \\'angular.mock.module\\'.');\n    }\n    this.declareNg1Module(modules);\n    windowNgMock.module(this.ng1Module.name);\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n    this.ng2BootstrapDeferred.promise.then(\n        (ng1Injector) => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); }, onError);\n    return upgrade;\n  }\n/**\n * Bootstrap a hybrid AngularJS / Angular application.\n * \n * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n * AngularJS, this bootstrap is asynchronous.\n * \n * ### Example\n * \n * ```\n * const adapter = new UpgradeAdapter(MyNg2Module);\n * const module = angular.module('myExample', []);\n * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n * \n * module.directive('ng1', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n * \n * \n * \\@Component({ \n *   selector: 'ng2',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n * })\n * class Ng2 {\n * }\n * \n * \\@NgModule({ \n *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n * \n * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n * \n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n * ```\n * @param {?} element\n * @param {?=} modules\n * @param {?=} config\n * @return {?}\n */\nbootstrap(element: Element, modules?: any[], config?: angular.IAngularBootstrapConfig):\n      UpgradeAdapterRef {\n    this.declareNg1Module(modules);\n\n    const /** @type {?} */ upgrade = new UpgradeAdapterRef();\n\n    // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n    const /** @type {?} */ windowAngular = ( /** @type {?} */((window as any)) /** TODO #???? */)['angular'];\n    windowAngular.resumeBootstrap = undefined;\n\n    this.ngZone.run(() => { angular.bootstrap(element, [this.ng1Module.name], config); });\n    const /** @type {?} */ ng1BootstrapPromise = new Promise((resolve) => {\n      if (windowAngular.resumeBootstrap) {\n        const /** @type {?} */ originalResumeBootstrap: () => void = windowAngular.resumeBootstrap;\n        windowAngular.resumeBootstrap = function() {\n          windowAngular.resumeBootstrap = originalResumeBootstrap;\n          windowAngular.resumeBootstrap.apply(this, arguments);\n          resolve();\n        };\n      } else {\n        resolve();\n      }\n    });\n\n    Promise.all([this.ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(([ng1Injector]) => {\n      angular.element(element).data(controllerKey(INJECTOR_KEY), this.moduleRef.injector);\n      this.moduleRef.injector.get(NgZone).run(\n          () => { ( /** @type {?} */((<any>upgrade)))._bootstrapDone(this.moduleRef, ng1Injector); });\n    }, onError);\n    return upgrade;\n  }\n/**\n * Allows AngularJS service to be accessible from Angular.\n * \n * \n * ### Example\n * \n * ```\n * class Login { ... }\n * class Server { ... }\n * \n * \\@Injectable() \n * class Example {\n *   constructor(\\@Inject('server') server, login: Login) {\n *     ...\n *   }\n * }\n * \n * const module = angular.module('myExample', []);\n * module.service('server', Server);\n * module.service('login', Login);\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * adapter.upgradeNg1Provider('server');\n * adapter.upgradeNg1Provider('login', {asToken: Login});\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng2Injector.get(Example);\n * });\n * \n * ```\n * @param {?} name\n * @param {?=} options\n * @return {?}\n */\nupgradeNg1Provider(name: string, options?: {asToken: any}) {\n    const /** @type {?} */ token = options && options.asToken || name;\n    this.upgradedProviders.push({\n      provide: token,\n      useFactory: ($injector: angular.IInjectorService) => $injector.get(name),\n      deps: [$INJECTOR]\n    });\n  }\n/**\n * Allows Angular service to be accessible from AngularJS.\n * \n * \n * ### Example\n * \n * ```\n * class Example {\n * }\n * \n * const adapter = new UpgradeAdapter(MyNg2Module);\n * \n * const module = angular.module('myExample', []);\n * module.factory('example', adapter.downgradeNg2Provider(Example));\n * \n * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n *   const example: Example = ref.ng1Injector.get('example');\n * });\n * \n * ```\n * @param {?} token\n * @return {?}\n */\ndowngradeNg2Provider(token: any): Function { return downgradeInjectable(token); }\n/**\n * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n * hybrid application.\n * \n * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n * \n * @param {?=} modules The AngularJS modules that this upgrade module should depend upon.\n * @return {?} The AngularJS upgrade module that is declared by this method\n * \n * ### Example\n * \n * ```\n * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n * upgradeAdapter.declareNg1Module(['heroApp']);\n * ```\n */\nprivate declareNg1Module(modules: string[] = []): angular.IModule {\n    const /** @type {?} */ delayApplyExps: Function[] = [];\n    let /** @type {?} */ original$applyFn: Function;\n    let /** @type {?} */ rootScopePrototype: any;\n    let /** @type {?} */ rootScope: angular.IRootScopeService;\n    const /** @type {?} */ upgradeAdapter = this;\n    const /** @type {?} */ ng1Module = this.ng1Module = angular.module(this.idPrefix, modules);\n    const /** @type {?} */ platformRef = platformBrowserDynamic();\n\n    this.ngZone = new NgZone({enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec')});\n    this.ng2BootstrapDeferred = new Deferred();\n    ng1Module.factory(INJECTOR_KEY, () => this.moduleRef.injector.get(Injector))\n        .constant(NG_ZONE_KEY, this.ngZone)\n        .factory(COMPILER_KEY, () => this.moduleRef.injector.get(Compiler))\n        .config([\n          '$provide', '$injector',\n          (provide: angular.IProvideService, ng1Injector: angular.IInjectorService) => {\n            provide.decorator($ROOT_SCOPE, [\n              '$delegate',\n              function(rootScopeDelegate: angular.IRootScopeService) {\n                // Capture the root apply so that we can delay first call to $apply until we\n                // bootstrap Angular and then we replay and restore the $apply.\n                rootScopePrototype = rootScopeDelegate.constructor.prototype;\n                if (rootScopePrototype.hasOwnProperty('$apply')) {\n                  original$applyFn = rootScopePrototype.$apply;\n                  rootScopePrototype.$apply = (exp: any) => delayApplyExps.push(exp);\n                } else {\n                  throw new Error('Failed to find \\'$apply\\' on \\'$rootScope\\'!');\n                }\n                return rootScope = rootScopeDelegate;\n              }\n            ]);\n            if (ng1Injector.has($$TESTABILITY)) {\n              provide.decorator($$TESTABILITY, [\n                '$delegate',\n                function(testabilityDelegate: angular.ITestabilityService) {\n                  const /** @type {?} */ originalWhenStable: Function = testabilityDelegate.whenStable;\n                  // Cannot use arrow function below because we need the context\n                  const /** @type {?} */ newWhenStable = function(callback: Function) {\n                    originalWhenStable.call(this, function() {\n                      const /** @type {?} */ ng2Testability: Testability =\n                          upgradeAdapter.moduleRef.injector.get(Testability);\n                      if (ng2Testability.isStable()) {\n                        callback.apply(this, arguments);\n                      } else {\n                        ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                      }\n                    });\n                  };\n\n                  testabilityDelegate.whenStable = newWhenStable;\n                  return testabilityDelegate;\n                }\n              ]);\n            }\n          }\n        ]);\n\n    ng1Module.run([\n      '$injector', '$rootScope',\n      (ng1Injector: angular.IInjectorService, rootScope: angular.IRootScopeService) => {\n        UpgradeNg1ComponentAdapterBuilder.resolve(this.ng1ComponentsToBeUpgraded, ng1Injector)\n            .then(() => {\n              // At this point we have ng1 injector and we have lifted ng1 components into ng2, we\n              // now can bootstrap ng2.\n              const /** @type {?} */ DynamicNgUpgradeModule =\n                  NgModule({\n                    providers: [\n                      {provide: $INJECTOR, useFactory: () => ng1Injector},\n                      {provide: $COMPILE, useFactory: () => ng1Injector.get($COMPILE)},\n                      {provide: NgContentSelectorHelper, useClass: DynamicNgContentSelectorHelper},\n                      this.upgradedProviders\n                    ],\n                    imports: [this.ng2AppModule],\n                    entryComponents: this.downgradedComponents\n                  }).Class({\n                    constructor: function DynamicNgUpgradeModule() {},\n                    ngDoBootstrap: function() {}\n                  });\n              ( /** @type {?} */((platformRef as any)))\n                  ._bootstrapModuleWithZone(\n                      DynamicNgUpgradeModule, this.compilerOptions, this.ngZone)\n                  .then((ref: NgModuleRef<any>) => {\n                    this.moduleRef = ref;\n                    this.ngZone.run(() => {\n                      if (rootScopePrototype) {\n                        rootScopePrototype.$apply = original$applyFn;  // restore original $apply\n                        while (delayApplyExps.length) {\n                          rootScope.$apply(delayApplyExps.shift());\n                        }\n                        rootScopePrototype = null;\n                      }\n                    });\n                  })\n                  .then(() => this.ng2BootstrapDeferred.resolve(ng1Injector), onError)\n                  .then(() => {\n                    let /** @type {?} */ subscription =\n                        this.ngZone.onMicrotaskEmpty.subscribe({next: () => rootScope.$digest()});\n                    rootScope.$on('$destroy', () => { subscription.unsubscribe(); });\n                  });\n            })\n            .catch((e) => this.ng2BootstrapDeferred.reject(e));\n      }\n    ]);\n\n    return ng1Module;\n  }\n}\n\nfunction UpgradeAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapter.prototype.idPrefix;\n/** @type {?} */\nUpgradeAdapter.prototype.directiveResolver;\n/** @type {?} */\nUpgradeAdapter.prototype.downgradedComponents;\n/**\n * An internal map of ng1 components which need to up upgraded to ng2.\n * \n * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n * \n * \\@internal\n * @type {?}\n */\nUpgradeAdapter.prototype.ng1ComponentsToBeUpgraded;\n/** @type {?} */\nUpgradeAdapter.prototype.upgradedProviders;\n/** @type {?} */\nUpgradeAdapter.prototype.ngZone;\n/** @type {?} */\nUpgradeAdapter.prototype.ng1Module;\n/** @type {?} */\nUpgradeAdapter.prototype.moduleRef;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2BootstrapDeferred;\n/** @type {?} */\nUpgradeAdapter.prototype.ng2AppModule;\n/** @type {?} */\nUpgradeAdapter.prototype.compilerOptions;\n}\n\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) {\n    // store the promise on the element\n    element.data(controllerKey(INJECTOR_KEY), this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector;\n\n    // reset the element data to point to the real injector\n    this.element.data(controllerKey(INJECTOR_KEY), injector);\n\n    // clean out the element to prevent memory leaks\n    this.element = null;\n\n    // run all the queued callbacks\n    this.callbacks.forEach((callback) => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n * \n * \\@stable\n */\nexport class UpgradeAdapterRef {\nprivate _readyFn: (upgradeAdapterRef?: UpgradeAdapterRef) => void = null;\npublic ng1RootScope: angular.IRootScopeService = null;\npublic ng1Injector: angular.IInjectorService = null;\npublic ng2ModuleRef: NgModuleRef<any> = null;\npublic ng2Injector: Injector = null;\n/**\n * @param {?} ngModuleRef\n * @param {?} ng1Injector\n * @return {?}\n */\nprivate _bootstrapDone(ngModuleRef: NgModuleRef<any>, ng1Injector: angular.IInjectorService) {\n    this.ng2ModuleRef = ngModuleRef;\n    this.ng2Injector = ngModuleRef.injector;\n    this.ng1Injector = ng1Injector;\n    this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n    this._readyFn && this._readyFn(this);\n  }\n/**\n * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n * application has been bootstrapped.\n * \n * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n * require a call to `$apply()`.\n * @param {?} fn\n * @return {?}\n */\npublic ready(fn: (upgradeAdapterRef?: UpgradeAdapterRef) => void) { this._readyFn = fn; }\n/**\n * Dispose of running hybrid AngularJS / Angular application.\n * @return {?}\n */\npublic dispose() {\n    this.ng1Injector.get($ROOT_SCOPE).$destroy();\n    this.ng2ModuleRef.destroy();\n  }\n}\n\nfunction UpgradeAdapterRef_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeAdapterRef.prototype._readyFn;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1RootScope;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng1Injector;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2ModuleRef;\n/** @type {?} */\nUpgradeAdapterRef.prototype.ng2Injector;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, DoCheck, ElementRef, EventEmitter, Inject, OnChanges, OnInit, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $SCOPE, $TEMPLATE_CACHE} from '../common/constants';\nimport {controllerKey} from '../common/util';\n\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n\n\nconst /** @type {?} */ CAMEL_CASE = /([A-Z])/g;\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nconst /** @type {?} */ NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nexport class UpgradeNg1ComponentAdapterBuilder {\n  type: Type<any>;\n  inputs: string[] = [];\n  inputsRename: string[] = [];\n  outputs: string[] = [];\n  outputsRename: string[] = [];\n  propertyOutputs: string[] = [];\n  checkProperties: string[] = [];\n  propertyMap: {[name: string]: string} = {};\n  linkFn: angular.ILinkFn = null;\n  directive: angular.IDirective = null;\n  $controller: angular.IControllerService = null;\n/**\n * @param {?} name\n */\nconstructor(public name: string) {\n    const selector = name.replace(\n        CAMEL_CASE, (all: any /** TODO #9100 */, next: string) => '-' + next.toLowerCase());\n    const self = this;\n    this.type =\n        Directive({selector: selector, inputs: this.inputsRename, outputs: this.outputsRename})\n            .Class({\n              constructor: [\n                new Inject($SCOPE), ElementRef,\n                function(scope: angular.IScope, elementRef: ElementRef) {\n                  return new UpgradeNg1ComponentAdapter(\n                      self.linkFn, scope, self.directive, elementRef, self.$controller, self.inputs,\n                      self.outputs, self.propertyOutputs, self.checkProperties, self.propertyMap);\n                }\n              ],\n              ngOnInit: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngOnChanges: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngDoCheck: function() { /* needs to be here for ng2 to properly detect it */ },\n              ngOnDestroy: function() { /* needs to be here for ng2 to properly detect it */ },\n            });\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nextractDirective(injector: angular.IInjectorService): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = injector.get(this.name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const /** @type {?} */ directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    const /** @type {?} */ link = directive.link;\n    if (typeof link == 'object') {\n      if (( /** @type {?} */((<angular.IDirectivePrePost>link))).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n/**\n * @param {?} feature\n * @return {?}\n */\nprivate notSupported(feature: string) {\n    throw new Error(`Upgraded directive '${this.name}' does not support '${feature}'.`);\n  }\n/**\n * @return {?}\n */\nextractBindings() {\n    const /** @type {?} */ btcIsObject = typeof this.directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(this.directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time are not supported.`);\n    }\n\n    const /** @type {?} */ context = (btcIsObject) ? this.directive.bindToController : this.directive.scope;\n\n    if (typeof context == 'object') {\n      for (const /** @type {?} */ name in context) {\n        if (( /** @type {?} */((<any>context))).hasOwnProperty(name)) {\n          let /** @type {?} */ localName = context[name];\n          const /** @type {?} */ type = localName.charAt(0);\n          const /** @type {?} */ typeOptions = localName.charAt(1);\n          localName = typeOptions === '?' ? localName.substr(2) : localName.substr(1);\n          localName = localName || name;\n\n          const /** @type {?} */ outputName = 'output_' + name;\n          const /** @type {?} */ outputNameRename = outputName + ': ' + name;\n          const /** @type {?} */ outputNameRenameChange = outputName + ': ' + name + 'Change';\n          const /** @type {?} */ inputName = 'input_' + name;\n          const /** @type {?} */ inputNameRename = inputName + ': ' + name;\n          switch (type) {\n            case '=':\n              this.propertyOutputs.push(outputName);\n              this.checkProperties.push(localName);\n              this.outputs.push(outputName);\n              this.outputsRename.push(outputNameRenameChange);\n              this.propertyMap[outputName] = localName;\n              this.inputs.push(inputName);\n              this.inputsRename.push(inputNameRename);\n              this.propertyMap[inputName] = localName;\n              break;\n            case '@':\n            // handle the '<' binding of angular 1.5 components\n            case '<':\n              this.inputs.push(inputName);\n              this.inputsRename.push(inputNameRename);\n              this.propertyMap[inputName] = localName;\n              break;\n            case '&':\n              this.outputs.push(outputName);\n              this.outputsRename.push(outputNameRename);\n              this.propertyMap[outputName] = localName;\n              break;\n            default:\n              let /** @type {?} */ json = JSON.stringify(context);\n              throw new Error(\n                  `Unexpected mapping '${type}' in '${json}' in '${this.name}' directive.`);\n          }\n        }\n      }\n    }\n  }\n/**\n * @param {?} compile\n * @param {?} templateCache\n * @param {?} httpBackend\n * @return {?}\n */\ncompileTemplate(\n      compile: angular.ICompileService, templateCache: angular.ITemplateCacheService,\n      httpBackend: angular.IHttpBackendService): Promise<angular.ILinkFn> {\n    if (this.directive.template !== undefined) {\n      this.linkFn = compileHtml(\n          isFunction(this.directive.template) ? this.directive.template() :\n                                                this.directive.template);\n    } else if (this.directive.templateUrl) {\n      const /** @type {?} */ url = isFunction(this.directive.templateUrl) ? this.directive.templateUrl() :\n                                                           this.directive.templateUrl;\n      const /** @type {?} */ html = templateCache.get(url);\n      if (html !== undefined) {\n        this.linkFn = compileHtml(html);\n      } else {\n        return new Promise((resolve, err) => {\n          httpBackend(\n              'GET', url, null,\n              (status: any /** TODO #9100 */, response: any /** TODO #9100 */) => {\n                if (status == 200) {\n                  resolve(this.linkFn = compileHtml(templateCache.put(url, response)));\n                } else {\n                  err(`GET ${url} returned ${status}: ${response}`);\n                }\n              });\n        });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n    return null;\n/**\n * @param {?} html\n * @return {?}\n */\nfunction compileHtml(html: any /** TODO #9100 */): angular.ILinkFn {\n      const /** @type {?} */ div = document.createElement('div');\n      div.innerHTML = html;\n      return compile(div.childNodes);\n    }\n  }\n/**\n * Upgrade ng1 components into Angular.\n * @param {?} exportedComponents\n * @param {?} injector\n * @return {?}\n */\nstatic resolve(\n      exportedComponents: {[name: string]: UpgradeNg1ComponentAdapterBuilder},\n      injector: angular.IInjectorService): Promise<angular.ILinkFn[]> {\n    const /** @type {?} */ promises: Promise<angular.ILinkFn>[] = [];\n    const /** @type {?} */ compile: angular.ICompileService = injector.get($COMPILE);\n    const /** @type {?} */ templateCache: angular.ITemplateCacheService = injector.get($TEMPLATE_CACHE);\n    const /** @type {?} */ httpBackend: angular.IHttpBackendService = injector.get($HTTP_BACKEND);\n    const /** @type {?} */ $controller: angular.IControllerService = injector.get($CONTROLLER);\n    for (const /** @type {?} */ name in exportedComponents) {\n      if (( /** @type {?} */((<any>exportedComponents))).hasOwnProperty(name)) {\n        const /** @type {?} */ exportedComponent = exportedComponents[name];\n        exportedComponent.directive = exportedComponent.extractDirective(injector);\n        exportedComponent.$controller = $controller;\n        exportedComponent.extractBindings();\n        const /** @type {?} */ promise: Promise<angular.ILinkFn> =\n            exportedComponent.compileTemplate(compile, templateCache, httpBackend);\n        if (promise) promises.push(promise);\n      }\n    }\n    return Promise.all(promises);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapterBuilder_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.type;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.inputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.outputsRename;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyOutputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.propertyMap;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.linkFn;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.$controller;\n/** @type {?} */\nUpgradeNg1ComponentAdapterBuilder.prototype.name;\n}\n\nclass UpgradeNg1ComponentAdapter implements OnInit, OnChanges, DoCheck {\nprivate controllerInstance: IControllerInstance = null;\n  destinationObj: IBindingDestination = null;\n  checkLastValues: any[] = [];\n  componentScope: angular.IScope;\n  element: Element;\n  $element: any = null;\n/**\n * @param {?} linkFn\n * @param {?} scope\n * @param {?} directive\n * @param {?} elementRef\n * @param {?} $controller\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} propOuts\n * @param {?} checkProperties\n * @param {?} propertyMap\n */\nconstructor(\nprivate linkFn: angular.ILinkFn, scope: angular.IScope,\nprivate directive: angular.IDirective,\n      elementRef: ElementRef,\nprivate $controller: angular.IControllerService,\nprivate inputs: string[],\nprivate outputs: string[],\nprivate propOuts: string[],\nprivate checkProperties: string[],\nprivate propertyMap: {[key: string]: string}) {\n    this.element = elementRef.nativeElement;\n    this.componentScope = scope.$new(!!directive.scope);\n    this.$element = angular.element(this.element);\n    const controllerType = directive.controller;\n    if (directive.bindToController && controllerType) {\n      this.controllerInstance = this.buildController(controllerType);\n      this.destinationObj = this.controllerInstance;\n    } else {\n      this.destinationObj = this.componentScope;\n    }\n\n    for (let i = 0; i < inputs.length; i++) {\n      (this as any /** TODO #9100 */)[inputs[i]] = null;\n    }\n    for (let j = 0; j < outputs.length; j++) {\n      const emitter = (this as any /** TODO #9100 */)[outputs[j]] = new EventEmitter();\n      this.setComponentProperty(\n          outputs[j], ((emitter: any /** TODO #9100 */) => (value: any /** TODO #9100 */) =>\n                           emitter.emit(value))(emitter));\n    }\n    for (let k = 0; k < propOuts.length; k++) {\n      (this as any /** TODO #9100 */)[propOuts[k]] = new EventEmitter();\n      this.checkLastValues.push(INITIAL_VALUE);\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.directive.bindToController && this.directive.controller) {\n      this.controllerInstance = this.buildController(this.directive.controller);\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    let /** @type {?} */ link = this.directive.link;\n    if (typeof link == 'object') link = ( /** @type {?} */((<angular.IDirectivePrePost>link))).pre;\n    if (link) {\n      const /** @type {?} */ attrs: angular.IAttributes = NOT_SUPPORTED;\n      const /** @type {?} */ transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n      const /** @type {?} */ linkController = this.resolveRequired(this.$element, this.directive.require);\n      ( /** @type {?} */((<angular.IDirectiveLinkFn>this.directive.link)))(\n          this.componentScope, this.$element, attrs, linkController, transcludeFn);\n    }\n\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: any /** TODO #9100 */;\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n    this.linkFn(this.componentScope, (clonedElement, scope) => {\n      for (let /** @type {?} */ i = 0, /** @type {?} */ ii = clonedElement.length; i < ii; i++) {\n        this.element.appendChild(clonedElement[i]);\n      }\n    }, {\n      parentBoundTranscludeFn: (scope: any /** TODO #9100 */,\n                                cloneAttach: any /** TODO #9100 */) => { cloneAttach(childNodes); }\n    });\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ ng1Changes: any = {};\n    Object.keys(changes).forEach(name => {\n      const /** @type {?} */ change: SimpleChange = changes[name];\n      this.setComponentProperty(name, change.currentValue);\n      ng1Changes[this.propertyMap[name]] = change;\n    });\n\n    if (isFunction(this.destinationObj.$onChanges)) {\n      this.destinationObj.$onChanges(ng1Changes);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    const /** @type {?} */ destinationObj = this.destinationObj;\n    const /** @type {?} */ lastValues = this.checkLastValues;\n    const /** @type {?} */ checkProperties = this.checkProperties;\n    for (let /** @type {?} */ i = 0; i < checkProperties.length; i++) {\n      const /** @type {?} */ value = destinationObj[checkProperties[i]];\n      const /** @type {?} */ last = lastValues[i];\n      if (value !== last) {\n        if (typeof value == 'number' && isNaN(value) && typeof last == 'number' && isNaN(last)) {\n          // ignore because NaN != NaN\n        } else {\n          const /** @type {?} */ eventEmitter: EventEmitter<any> = ( /** @type {?} */((this as any)) /** TODO #9100 */)[this.propOuts[i]];\n          eventEmitter.emit(lastValues[i] = value);\n        }\n      }\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      this.controllerInstance.$doCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n  }\n/**\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nsetComponentProperty(name: string, value: any) {\n    this.destinationObj[this.propertyMap[name]] = value;\n  }\n/**\n * @param {?} controllerType\n * @return {?}\n */\nprivate buildController(controllerType: any /** TODO #9100 */) {\n    const /** @type {?} */ locals = {$scope: this.componentScope, $element: this.$element};\n    const /** @type {?} */ controller: any =\n        this.$controller(controllerType, locals, null, this.directive.controllerAs);\n    this.$element.data(controllerKey(this.directive.name), controller);\n    return controller;\n  }\n/**\n * @param {?} $element\n * @param {?} require\n * @return {?}\n */\nprivate resolveRequired(\n      $element: angular.IAugmentedJQuery, require: angular.DirectiveRequireProperty): any {\n    if (!require) {\n      return undefined;\n    } else if (typeof require == 'string') {\n      let /** @type {?} */ name: string = /** @type {?} */(( <string>require));\n      let /** @type {?} */ isOptional = false;\n      let /** @type {?} */ startParent = false;\n      let /** @type {?} */ searchParents = false;\n      if (name.charAt(0) == '?') {\n        isOptional = true;\n        name = name.substr(1);\n      }\n      if (name.charAt(0) == '^') {\n        searchParents = true;\n        name = name.substr(1);\n      }\n      if (name.charAt(0) == '^') {\n        startParent = true;\n        name = name.substr(1);\n      }\n\n      const /** @type {?} */ key = controllerKey(name);\n      if (startParent) $element = $element.parent();\n      const /** @type {?} */ dep = searchParents ? $element.inheritedData(key) : $element.data(key);\n      if (!dep && !isOptional) {\n        throw new Error(`Can not locate '${require}' in '${this.directive.name}'.`);\n      }\n      return dep;\n    } else if (require instanceof Array) {\n      const /** @type {?} */ deps: any[] = [];\n      for (let /** @type {?} */ i = 0; i < require.length; i++) {\n        deps.push(this.resolveRequired($element, require[i]));\n      }\n      return deps;\n    }\n    throw new Error(\n        `Directive '${this.directive.name}' require syntax unrecognized: ${this.directive.require}`);\n  }\n}\n\nfunction UpgradeNg1ComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.controllerInstance;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.destinationObj;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkLastValues;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.componentScope;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$element;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.linkFn;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.directive;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.$controller;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.inputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.outputs;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propOuts;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.checkProperties;\n/** @type {?} */\nUpgradeNg1ComponentAdapter.prototype.propertyMap;\n}\n\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Compiler, Injectable} from '@angular/core';\n\nimport {ComponentInfo} from '../common/component_info';\nimport {NgContentSelectorHelper} from '../common/ng_content_selector_helper';\n/**\n * See `NgContentSelectorHelper` for more information about this class.\n */\nexport class DynamicNgContentSelectorHelper extends NgContentSelectorHelper {\n/**\n * @param {?} compiler\n */\nconstructor(private compiler: Compiler) { super(); }\n/**\n * @param {?} info\n * @return {?}\n */\ngetNgContentSelectors(info: ComponentInfo): string[] {\n    return this.compiler.getNgContentSelectors(info.component);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Compiler, },\n];\n}\n\nfunction DynamicNgContentSelectorHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nDynamicNgContentSelectorHelper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDynamicNgContentSelectorHelper.ctorParameters;\n/** @type {?} */\nDynamicNgContentSelectorHelper.prototype.compiler;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '@angular/core';\nimport {INJECTOR_KEY} from './constants';\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allow an Angular service to be accessible from AngularJS.\n * \n * \\@howToUse \n * \n * First ensure that the service to be downgraded is provided in an {\\@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n * \n * and that we have included this in our upgrade app {\\@link NgModule}\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n * \n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n * \n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"example-app\"}\n * \n * \\@description \n * \n * Takes a `token` that identifies a service provided from Angular.\n * \n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n * \n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n * \n * \\@experimental\n * @param {?} token\n * @return {?}\n */\nexport function downgradeInjectable(token: any): Function {\n  const /** @type {?} */ factory = function(i: Injector) { return i.get(token); };\n  ( /** @type {?} */((factory as any))).$inject = [INJECTOR_KEY];\n\n  return factory;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentFactory, ComponentFactoryResolver, Injector, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {$COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, REQUIRE_INJECTOR, REQUIRE_NG_MODEL} from './constants';\nimport {DowngradeComponentAdapter} from './downgrade_component_adapter';\nimport {NgContentSelectorHelper} from './ng_content_selector_helper';\nimport {controllerKey, getComponentName} from './util';\n\nlet /** @type {?} */ downgradeCount = 0;\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an Angular component to be used from AngularJS.\n * \n * \\@howToUse \n * \n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n * \n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n * \n * In this example you can see that we must provide information about the component being\n * \"downgraded\". This is because once the AoT compiler has run, all metadata about the\n * component has been removed from the code, and so cannot be inferred.\n * \n * We must do the following:\n * * specify the Angular component class that is to be downgraded\n * * specify all inputs and outputs that the AngularJS component expects\n * * specify the selectors used in any `ng-content` elements in the component's template\n * \n * \\@description \n * \n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n * \n * The parameter contains information about the Component that is being downgraded:\n * \n * * `component: Type<any>`: The type of the Component that will be downgraded\n * * `inputs: string[]`: A collection of strings that specify what inputs the component accepts\n * * `outputs: string[]`: A collection of strings that specify what outputs the component emits\n * * `selectors: string[]`: A collection of strings that specify what selectors are expected on\n *   `ng-content` elements in the template to enable content projection (a.k.a. transclusion in\n *   AngularJS)\n * \n * The `inputs` and `outputs` are strings that map the names of properties to camelCased\n * attribute names. They are of the form `\"prop: attr\"`; or simply `\"propAndAttr\" where the\n * property and attribute have the same identifier.\n * \n * The `selectors` are the values of the `select` attribute of each of the `ng-content` elements\n * that appear in the downgraded component's template.\n * These selectors must be provided in the order that they appear in the template as they are\n * mapped by index to the projected nodes.\n * \n * \\@experimental\n * @param {?} info\n * @return {?}\n */\nexport function downgradeComponent(info: /* ComponentInfo */ {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n  selectors?: string[]\n}): any /* angular.IInjectable */ {\n  const /** @type {?} */ idPrefix = `NG2_UPGRADE_${downgradeCount++}_`;\n  let /** @type {?} */ idCount = 0;\n\n  const /** @type {?} */ directiveFactory:\n      angular.IAnnotatedFunction = function(\n                                       $compile: angular.ICompileService,\n                                       $injector: angular.IInjectorService,\n                                       $parse: angular.IParseService): angular.IDirective {\n\n    return {\n      restrict: 'E',\n      terminal: true,\n      require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n      link: (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes,\n             required: any[]) => {\n        // We might have to compile the contents asynchronously, because this might have been\n        // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n        // been compiled.\n\n        const /** @type {?} */ parentInjector: Injector|ParentInjectorPromise =\n            required[0] || $injector.get(INJECTOR_KEY);\n        const /** @type {?} */ ngModel: angular.INgModelController = required[1];\n\n        const /** @type {?} */ downgradeFn = (injector: Injector) => {\n          const /** @type {?} */ componentFactoryResolver: ComponentFactoryResolver =\n              injector.get(ComponentFactoryResolver);\n          const /** @type {?} */ componentFactory: ComponentFactory<any> =\n              componentFactoryResolver.resolveComponentFactory(info.component);\n\n          if (!componentFactory) {\n            throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n          }\n\n          const /** @type {?} */ id = idPrefix + (idCount++);\n          const /** @type {?} */ injectorPromise = new ParentInjectorPromise(element);\n          const /** @type {?} */ facade = new DowngradeComponentAdapter(\n              id, info, element, attrs, scope, ngModel, injector, $injector, $compile, $parse,\n              componentFactory);\n\n          const /** @type {?} */ projectableNodes = facade.compileContents();\n          facade.createComponent(projectableNodes);\n          facade.setupInputs();\n          facade.setupOutputs();\n          facade.registerCleanup();\n\n          injectorPromise.resolve(facade.getInjector());\n        };\n\n        if (parentInjector instanceof ParentInjectorPromise) {\n          parentInjector.then(downgradeFn);\n        } else {\n          downgradeFn(parentInjector);\n        }\n      }\n    };\n  };\n\n  // bracket-notation because of closure - see #14441\n  directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n  return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nclass ParentInjectorPromise {\nprivate injector: Injector;\nprivate injectorKey: string = controllerKey(INJECTOR_KEY);\nprivate callbacks: ((injector: Injector) => any)[] = [];\n/**\n * @param {?} element\n */\nconstructor(private element: angular.IAugmentedJQuery) {\n    // Store the promise on the element.\n    element.data(this.injectorKey, this);\n  }\n/**\n * @param {?} callback\n * @return {?}\n */\nthen(callback: (injector: Injector) => any) {\n    if (this.injector) {\n      callback(this.injector);\n    } else {\n      this.callbacks.push(callback);\n    }\n  }\n/**\n * @param {?} injector\n * @return {?}\n */\nresolve(injector: Injector) {\n    this.injector = injector;\n\n    // Store the real injector on the element.\n    this.element.data(this.injectorKey, injector);\n\n    // Release the element to prevent memory leaks.\n    this.element = null;\n\n    // Run the queued callbacks.\n    this.callbacks.forEach(callback => callback(injector));\n    this.callbacks.length = 0;\n  }\n}\n\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n/** @type {?} */\nParentInjectorPromise.prototype.injector;\n/** @type {?} */\nParentInjectorPromise.prototype.injectorKey;\n/** @type {?} */\nParentInjectorPromise.prototype.callbacks;\n/** @type {?} */\nParentInjectorPromise.prototype.element;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectorRef, ComponentFactory, ComponentRef, EventEmitter, Injector, OnChanges, ReflectiveInjector, SimpleChange, SimpleChanges, Type} from '@angular/core';\n\nimport * as angular from './angular1';\nimport {createElementCssSelector} from './compiler_helpers/createElementCssSelector';\nimport {CssSelector, SelectorMatcher} from './compiler_helpers/selector';\nimport {ComponentInfo, PropertyBinding} from './component_info';\nimport {$SCOPE} from './constants';\nimport {NgContentSelectorHelper} from './ng_content_selector_helper';\nimport {getAttributesAsArray, getComponentName, hookupNgModel} from './util';\n\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nexport class DowngradeComponentAdapter {\nprivate inputChangeCount: number = 0;\nprivate inputChanges: SimpleChanges = null;\nprivate componentScope: angular.IScope;\nprivate componentRef: ComponentRef<any> = null;\nprivate component: any = null;\nprivate changeDetector: ChangeDetectorRef = null;\n/**\n * @param {?} id\n * @param {?} info\n * @param {?} element\n * @param {?} attrs\n * @param {?} scope\n * @param {?} ngModel\n * @param {?} parentInjector\n * @param {?} $injector\n * @param {?} $compile\n * @param {?} $parse\n * @param {?} componentFactory\n */\nconstructor(\nprivate id: string,\nprivate info: ComponentInfo,\nprivate element: angular.IAugmentedJQuery,\nprivate attrs: angular.IAttributes,\nprivate scope: angular.IScope,\nprivate ngModel: angular.INgModelController,\nprivate parentInjector: Injector,\nprivate $injector: angular.IInjectorService,\nprivate $compile: angular.ICompileService,\nprivate $parse: angular.IParseService,\nprivate componentFactory: ComponentFactory<any>) {\n    (this.element[0] as any).id = id;\n    this.componentScope = scope.$new();\n  }\n/**\n * @return {?}\n */\ncompileContents(): Node[][] {\n    const /** @type {?} */ compiledProjectableNodes: Node[][] = [];\n    const /** @type {?} */ projectableNodes: Node[][] = this.groupProjectableNodes();\n    const /** @type {?} */ linkFns = projectableNodes.map(nodes => this.$compile(nodes));\n\n    this.element.empty();\n\n    linkFns.forEach(linkFn => {\n      linkFn(this.scope, (clone: Node[]) => {\n        compiledProjectableNodes.push(clone);\n        this.element.append(clone);\n      });\n    });\n\n    return compiledProjectableNodes;\n  }\n/**\n * @param {?} projectableNodes\n * @return {?}\n */\ncreateComponent(projectableNodes: Node[][]) {\n    const /** @type {?} */ childInjector = ReflectiveInjector.resolveAndCreate(\n        [{provide: $SCOPE, useValue: this.componentScope}], this.parentInjector);\n\n    this.componentRef =\n        this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n    this.changeDetector = this.componentRef.changeDetectorRef;\n    this.component = this.componentRef.instance;\n\n    hookupNgModel(this.ngModel, this.component);\n  }\n/**\n * @return {?}\n */\nsetupInputs(): void {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ inputs = this.info.inputs || [];\n    for (let /** @type {?} */ i = 0; i < inputs.length; i++) {\n      const /** @type {?} */ input = new PropertyBinding(inputs[i]);\n      let /** @type {?} */ expr: any /** TODO #9100 */ = null;\n\n      if (attrs.hasOwnProperty(input.attr)) {\n        const /** @type {?} */ observeFn = (prop => {\n          let /** @type {?} */ prevValue = INITIAL_VALUE;\n          return (currValue: any) => {\n            if (prevValue === INITIAL_VALUE) {\n              prevValue = currValue;\n            }\n\n            this.updateInput(prop, prevValue, currValue);\n            prevValue = currValue;\n          };\n        })(input.prop);\n        attrs.$observe(input.attr, observeFn);\n\n      } else if (attrs.hasOwnProperty(input.bindAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bindAttr];\n      } else if (attrs.hasOwnProperty(input.bracketAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bracketAttr];\n      } else if (attrs.hasOwnProperty(input.bindonAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bindonAttr];\n      } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[input.bracketParenAttr];\n      }\n      if (expr != null) {\n        const /** @type {?} */ watchFn =\n            (prop => (currValue: any, prevValue: any) =>\n                 this.updateInput(prop, prevValue, currValue))(input.prop);\n        this.componentScope.$watch(expr, watchFn);\n      }\n    }\n\n    const /** @type {?} */ prototype = this.info.component.prototype;\n    if (prototype && ( /** @type {?} */((<OnChanges>prototype))).ngOnChanges) {\n      // Detect: OnChanges interface\n      this.inputChanges = {};\n      this.componentScope.$watch(() => this.inputChangeCount, () => {\n        const /** @type {?} */ inputChanges = this.inputChanges;\n        this.inputChanges = {};\n        ( /** @type {?} */((<OnChanges>this.component))).ngOnChanges(inputChanges);\n      });\n    }\n    this.componentScope.$watch(() => this.changeDetector && this.changeDetector.detectChanges());\n  }\n/**\n * @return {?}\n */\nsetupOutputs() {\n    const /** @type {?} */ attrs = this.attrs;\n    const /** @type {?} */ outputs = this.info.outputs || [];\n    for (let /** @type {?} */ j = 0; j < outputs.length; j++) {\n      const /** @type {?} */ output = new PropertyBinding(outputs[j]);\n      let /** @type {?} */ expr: any /** TODO #9100 */ = null;\n      let /** @type {?} */ assignExpr = false;\n\n      const /** @type {?} */ bindonAttr =\n          output.bindonAttr ? output.bindonAttr.substring(0, output.bindonAttr.length - 6) : null;\n      const /** @type {?} */ bracketParenAttr = output.bracketParenAttr ?\n          `[(${output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8)})]` :\n          null;\n\n      if (attrs.hasOwnProperty(output.onAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[output.onAttr];\n      } else if (attrs.hasOwnProperty(output.parenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[output.parenAttr];\n      } else if (attrs.hasOwnProperty(bindonAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[bindonAttr];\n        assignExpr = true;\n      } else if (attrs.hasOwnProperty(bracketParenAttr)) {\n        expr = ( /** @type {?} */((attrs as any)) /** TODO #9100 */)[bracketParenAttr];\n        assignExpr = true;\n      }\n\n      if (expr != null && assignExpr != null) {\n        const /** @type {?} */ getter = this.$parse(expr);\n        const /** @type {?} */ setter = getter.assign;\n        if (assignExpr && !setter) {\n          throw new Error(`Expression '${expr}' is not assignable!`);\n        }\n        const /** @type {?} */ emitter = /** @type {?} */(( this.component[output.prop] as EventEmitter<any>));\n        if (emitter) {\n          emitter.subscribe({\n            next: assignExpr ?\n                ((setter: any) => (v: any /** TODO #9100 */) => setter(this.scope, v))(setter) :\n                ((getter: any) => (v: any /** TODO #9100 */) =>\n                     getter(this.scope, {$event: v}))(getter)\n          });\n        } else {\n          throw new Error(\n              `Missing emitter '${output.prop}' on component '${getComponentName(this.info.component)}'!`);\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\nregisterCleanup() {\n    this.element.bind('$destroy', () => {\n      this.componentScope.$destroy();\n      this.componentRef.destroy();\n    });\n  }\n/**\n * @return {?}\n */\ngetInjector(): Injector { return this.componentRef && this.componentRef.injector; }\n/**\n * @param {?} prop\n * @param {?} prevValue\n * @param {?} currValue\n * @return {?}\n */\nprivate updateInput(prop: string, prevValue: any, currValue: any) {\n    if (this.inputChanges) {\n      this.inputChangeCount++;\n      this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n    }\n\n    this.component[prop] = currValue;\n  }\n/**\n * @return {?}\n */\ngroupProjectableNodes() {\n    const /** @type {?} */ ngContentSelectorHelper = /** @type {?} */((\n        this.parentInjector.get(NgContentSelectorHelper) as NgContentSelectorHelper));\n    const /** @type {?} */ ngContentSelectors = ngContentSelectorHelper.getNgContentSelectors(this.info);\n\n    if (!ngContentSelectors) {\n      throw new Error('Expecting ngContentSelectors for: ' + getComponentName(this.info.component));\n    }\n\n    return this._groupNodesBySelector(ngContentSelectors, this.element.contents());\n  }\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nprivate _groupNodesBySelector(ngContentSelectors: string[], nodes: Node[]): Node[][] {\n    const /** @type {?} */ projectableNodes: Node[][] = [];\n    let /** @type {?} */ matcher = new SelectorMatcher();\n    let /** @type {?} */ wildcardNgContentIndex: number;\n\n    for (let /** @type {?} */ i = 0, /** @type {?} */ ii = ngContentSelectors.length; i < ii; ++i) {\n      projectableNodes[i] = [];\n\n      const /** @type {?} */ selector = ngContentSelectors[i];\n      if (selector === '*') {\n        wildcardNgContentIndex = i;\n      } else {\n        matcher.addSelectables(CssSelector.parse(selector), i);\n      }\n    }\n\n    for (let /** @type {?} */ j = 0, /** @type {?} */ jj = nodes.length; j < jj; ++j) {\n      const /** @type {?} */ ngContentIndices: number[] = [];\n      const /** @type {?} */ node = nodes[j];\n      const /** @type {?} */ selector =\n          createElementCssSelector(node.nodeName.toLowerCase(), getAttributesAsArray(node));\n\n      matcher.match(selector, (_, index) => ngContentIndices.push(index));\n      ngContentIndices.sort();\n\n      if (wildcardNgContentIndex !== undefined) {\n        ngContentIndices.push(wildcardNgContentIndex);\n      }\n\n      if (ngContentIndices.length) {\n        projectableNodes[ngContentIndices[0]].push(node);\n      }\n    }\n\n    return projectableNodes;\n  }\n}\n\nfunction DowngradeComponentAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChangeCount;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.inputChanges;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentScope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentRef;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.component;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.changeDetector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.id;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.info;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.element;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.attrs;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.scope;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.ngModel;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.parentInjector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$injector;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$compile;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.$parse;\n/** @type {?} */\nDowngradeComponentAdapter.prototype.componentFactory;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\nimport * as angular from './angular1';\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e: any) {\n  // TODO: (misko): We seem to not have a stack trace here!\n  if (console.error) {\n    console.error(e, e.stack);\n  } else {\n    // tslint:disable-next-line:no-console\n    console.log(e, e.stack);\n  }\n  throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name: string): string {\n  return '$' + name + 'Controller';\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getAttributesAsArray(node: Node): [string, string][] {\n  const /** @type {?} */ attributes = node.attributes;\n  let /** @type {?} */ asArray: [string, string][];\n  if (attributes) {\n    let /** @type {?} */ attrLen = attributes.length;\n    asArray = new Array(attrLen);\n    for (let /** @type {?} */ i = 0; i < attrLen; i++) {\n      asArray[i] = [attributes[i].nodeName, attributes[i].nodeValue];\n    }\n  }\n  return asArray || [];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component: Type<any>): string {\n  // Return the name of the component or the first line of its stringified version.\n  return ( /** @type {?} */((component as any))).overriddenName || component.name || component.toString().split('\\n')[0];\n}\nexport class Deferred<R> {\n  promise: Promise<R>;\n  resolve: (value?: R|PromiseLike<R>) => void;\n  reject: (error?: any) => void;\nconstructor() {\n    this.promise = new Promise((res, rej) => {\n      this.resolve = res;\n      this.reject = rej;\n    });\n  }\n}\n\nfunction Deferred_tsickle_Closure_declarations() {\n/** @type {?} */\nDeferred.prototype.promise;\n/** @type {?} */\nDeferred.prototype.resolve;\n/** @type {?} */\nDeferred.prototype.reject;\n}\n\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component: any) {\n  return typeof component.writeValue === 'function' &&\n      typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel: angular.INgModelController, component: any) {\n  if (ngModel && supportsNgModel(component)) {\n    ngModel.$render = () => { component.writeValue(ngModel.$viewValue); };\n    component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentInfo} from './component_info';\n/**\n * This class gives an extension point between the static and dynamic versions\n * of ngUpgrade:\n * * In the static version (this one) we must specify them manually as part of\n *   the call to `downgradeComponent(...)`.\n * * In the dynamic version (`DynamicNgContentSelectorHelper`) we are able to\n *   ask the compiler for the selectors of a component.\n */\nexport class NgContentSelectorHelper {\n/**\n * @param {?} info\n * @return {?}\n */\ngetNgContentSelectors(info: ComponentInfo): string[] {\n    // if no selectors are passed then default to a single \"wildcard\" selector\n    return info.selectors || ['*'];\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Type} from '@angular/core';\n\nexport interface ComponentInfo {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n  selectors?: string[];\n}\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  prop: string;\n  attr: string;\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n/**\n * @param {?} binding\n */\nconstructor(public binding: string) { this.parseBinding(); }\n/**\n * @return {?}\n */\nprivate parseBinding() {\n    const /** @type {?} */ parts = this.binding.split(':');\n    this.prop = parts[0].trim();\n    this.attr = (parts[1] || this.prop).trim();\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const /** @type {?} */ capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n\nfunction PropertyBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyBinding.prototype.prop;\n/** @type {?} */\nPropertyBinding.prototype.attr;\n/** @type {?} */\nPropertyBinding.prototype.bracketAttr;\n/** @type {?} */\nPropertyBinding.prototype.bracketParenAttr;\n/** @type {?} */\nPropertyBinding.prototype.parenAttr;\n/** @type {?} */\nPropertyBinding.prototype.onAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindonAttr;\n/** @type {?} */\nPropertyBinding.prototype.binding;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CssSelector} from './selector';\n\n/*\n * The following items are copied from the Angular Compiler to be used here\n * without the need to import the entire compiler into the build\n */\n\nconst /** @type {?} */ CLASS_ATTR = 'class';\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nexport function createElementCssSelector(\n    elementName: string, attributes: [string, string][]): CssSelector {\n  const /** @type {?} */ cssSelector = new CssSelector();\n  const /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n\n  cssSelector.setElement(elNameNoNs);\n\n  for (let /** @type {?} */ i = 0; i < attributes.length; i++) {\n    const /** @type {?} */ attrName = attributes[i][0];\n    const /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n    const /** @type {?} */ attrValue = attributes[i][1];\n\n    cssSelector.addAttribute(attrNameNoNs, attrValue);\n    if (attrName.toLowerCase() == CLASS_ATTR) {\n      const /** @type {?} */ classes = splitClasses(attrValue);\n      classes.forEach(className => cssSelector.addClassName(className));\n    }\n  }\n  return cssSelector;\n}\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName: string): [string, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nexport function splitClasses(classAttrValue: string): string[] {\n  return classAttrValue.trim().split(/\\s+/g);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {getHtmlTagDefinition} from './ml_parser/html_tags';\n\nconst /** @type {?} */ _SELECTOR_REGEXP = new RegExp(\n    '(\\\\:not\\\\()|' +           //\":not(\"\n        '([-\\\\w]+)|' +         // \"tag\"\n        '(?:\\\\.([-\\\\w]+))|' +  // \".class\"\n        // \"-\" should appear first in the regexp below as FF31 parses \"[.-\\w]\" as a range\n        '(?:\\\\[([-.\\\\w*]+)(?:=([^\\\\]]*))?\\\\])|' +  // \"[name]\", \"[name=value]\"\n        '(\\\\))|' +                                 // \")\"\n        '(\\\\s*,\\\\s*)',                             // \",\"\n    'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nexport class CssSelector {\n  element: string = null;\n  classNames: string[] = [];\n  attrs: string[] = [];\n  notSelectors: CssSelector[] = [];\n/**\n * @param {?} selector\n * @return {?}\n */\nstatic parse(selector: string): CssSelector[] {\n    const /** @type {?} */ results: CssSelector[] = [];\n    const /** @type {?} */ _addResult = (res: CssSelector[], cssSel: CssSelector) => {\n      if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n          cssSel.attrs.length == 0) {\n        cssSel.element = '*';\n      }\n      res.push(cssSel);\n    };\n    let /** @type {?} */ cssSelector = new CssSelector();\n    let /** @type {?} */ match: string[];\n    let /** @type {?} */ current = cssSelector;\n    let /** @type {?} */ inNot = false;\n    _SELECTOR_REGEXP.lastIndex = 0;\n    while (match = _SELECTOR_REGEXP.exec(selector)) {\n      if (match[1]) {\n        if (inNot) {\n          throw new Error('Nesting :not is not allowed in a selector');\n        }\n        inNot = true;\n        current = new CssSelector();\n        cssSelector.notSelectors.push(current);\n      }\n      if (match[2]) {\n        current.setElement(match[2]);\n      }\n      if (match[3]) {\n        current.addClassName(match[3]);\n      }\n      if (match[4]) {\n        current.addAttribute(match[4], match[5]);\n      }\n      if (match[6]) {\n        inNot = false;\n        current = cssSelector;\n      }\n      if (match[7]) {\n        if (inNot) {\n          throw new Error('Multiple selectors in :not are not supported');\n        }\n        _addResult(results, cssSelector);\n        cssSelector = current = new CssSelector();\n      }\n    }\n    _addResult(results, cssSelector);\n    return results;\n  }\n/**\n * @return {?}\n */\nisElementSelector(): boolean {\n    return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n        this.notSelectors.length === 0;\n  }\n/**\n * @return {?}\n */\nhasElementSelector(): boolean { return !!this.element; }\n/**\n * @param {?=} element\n * @return {?}\n */\nsetElement(element: string = null) { this.element = element; }\n/**\n * Gets a template string for an element that matches the selector.\n * @return {?}\n */\ngetMatchingElementTemplate(): string {\n    const /** @type {?} */ tagName = this.element || 'div';\n    const /** @type {?} */ classAttr = this.classNames.length > 0 ? ` class=\"${this.classNames.join(' ')}\"` : '';\n\n    let /** @type {?} */ attrs = '';\n    for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n      const /** @type {?} */ attrName = this.attrs[i];\n      const /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? `=\"${this.attrs[i + 1]}\"` : '';\n      attrs += ` ${attrName}${attrValue}`;\n    }\n\n    return getHtmlTagDefinition(tagName).isVoid ? `<${tagName}${classAttr}${attrs}/>` :\n                                                  `<${tagName}${classAttr}${attrs}></${tagName}>`;\n  }\n/**\n * @param {?} name\n * @param {?=} value\n * @return {?}\n */\naddAttribute(name: string, value: string = '') {\n    this.attrs.push(name, value && value.toLowerCase() || '');\n  }\n/**\n * @param {?} name\n * @return {?}\n */\naddClassName(name: string) { this.classNames.push(name.toLowerCase()); }\n/**\n * @return {?}\n */\ntoString(): string {\n    let /** @type {?} */ res: string = this.element || '';\n    if (this.classNames) {\n      this.classNames.forEach(klass => res += `.${klass}`);\n    }\n    if (this.attrs) {\n      for (let /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n        const /** @type {?} */ name = this.attrs[i];\n        const /** @type {?} */ value = this.attrs[i + 1];\n        res += `[${name}${value ? '=' + value : ''}]`;\n      }\n    }\n    this.notSelectors.forEach(notSelector => res += `:not(${notSelector})`);\n    return res;\n  }\n}\n\nfunction CssSelector_tsickle_Closure_declarations() {\n/** @type {?} */\nCssSelector.prototype.element;\n/** @type {?} */\nCssSelector.prototype.classNames;\n/** @type {?} */\nCssSelector.prototype.attrs;\n/** @type {?} */\nCssSelector.prototype.notSelectors;\n}\n\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nexport class SelectorMatcher {\n/**\n * @param {?} notSelectors\n * @return {?}\n */\nstatic createNotMatcher(notSelectors: CssSelector[]): SelectorMatcher {\n    const /** @type {?} */ notMatcher = new SelectorMatcher();\n    notMatcher.addSelectables(notSelectors, null);\n    return notMatcher;\n  }\nprivate _elementMap = new Map<string, SelectorContext[]>();\nprivate _elementPartialMap = new Map<string, SelectorMatcher>();\nprivate _classMap = new Map<string, SelectorContext[]>();\nprivate _classPartialMap = new Map<string, SelectorMatcher>();\nprivate _attrValueMap = new Map<string, Map<string, SelectorContext[]>>();\nprivate _attrValuePartialMap = new Map<string, Map<string, SelectorMatcher>>();\nprivate _listContexts: SelectorListContext[] = [];\n/**\n * @param {?} cssSelectors\n * @param {?=} callbackCtxt\n * @return {?}\n */\naddSelectables(cssSelectors: CssSelector[], callbackCtxt?: any) {\n    let /** @type {?} */ listContext: SelectorListContext = null;\n    if (cssSelectors.length > 1) {\n      listContext = new SelectorListContext(cssSelectors);\n      this._listContexts.push(listContext);\n    }\n    for (let /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n      this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n    }\n  }\n/**\n * Add an object that can be found later on by calling `match`.\n * @param {?} cssSelector A css selector\n * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n * @param {?} listContext\n * @return {?}\n */\nprivate _addSelectable(\n      cssSelector: CssSelector, callbackCtxt: any, listContext: SelectorListContext) {\n    let /** @type {?} */ matcher: SelectorMatcher = this;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n    const /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n\n    if (element) {\n      const /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n      if (isTerminal) {\n        this._addTerminal(matcher._elementMap, element, selectable);\n      } else {\n        matcher = this._addPartial(matcher._elementPartialMap, element);\n      }\n    }\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n        const /** @type {?} */ className = classNames[i];\n        if (isTerminal) {\n          this._addTerminal(matcher._classMap, className, selectable);\n        } else {\n          matcher = this._addPartial(matcher._classPartialMap, className);\n        }\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ isTerminal = i === attrs.length - 2;\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n        if (isTerminal) {\n          const /** @type {?} */ terminalMap = matcher._attrValueMap;\n          let /** @type {?} */ terminalValuesMap = terminalMap.get(name);\n          if (!terminalValuesMap) {\n            terminalValuesMap = new Map<string, SelectorContext[]>();\n            terminalMap.set(name, terminalValuesMap);\n          }\n          this._addTerminal(terminalValuesMap, value, selectable);\n        } else {\n          const /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n          let /** @type {?} */ partialValuesMap = partialMap.get(name);\n          if (!partialValuesMap) {\n            partialValuesMap = new Map<string, SelectorMatcher>();\n            partialMap.set(name, partialValuesMap);\n          }\n          matcher = this._addPartial(partialValuesMap, value);\n        }\n      }\n    }\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @param {?} selectable\n * @return {?}\n */\nprivate _addTerminal(\n      map: Map<string, SelectorContext[]>, name: string, selectable: SelectorContext) {\n    let /** @type {?} */ terminalList = map.get(name);\n    if (!terminalList) {\n      terminalList = [];\n      map.set(name, terminalList);\n    }\n    terminalList.push(selectable);\n  }\n/**\n * @param {?} map\n * @param {?} name\n * @return {?}\n */\nprivate _addPartial(map: Map<string, SelectorMatcher>, name: string): SelectorMatcher {\n    let /** @type {?} */ matcher = map.get(name);\n    if (!matcher) {\n      matcher = new SelectorMatcher();\n      map.set(name, matcher);\n    }\n    return matcher;\n  }\n/**\n * Find the objects that have been added via `addSelectable`\n * whose css selector is contained in the given css selector.\n * @param {?} cssSelector A css selector\n * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n * @return {?} boolean true if a match was found\n */\nmatch(cssSelector: CssSelector, matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = false;\n    const /** @type {?} */ element = cssSelector.element;\n    const /** @type {?} */ classNames = cssSelector.classNames;\n    const /** @type {?} */ attrs = cssSelector.attrs;\n\n    for (let /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n      this._listContexts[i].alreadyMatched = false;\n    }\n\n    result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n    result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n        result;\n\n    if (classNames) {\n      for (let /** @type {?} */ i = 0; i < classNames.length; i++) {\n        const /** @type {?} */ className = classNames[i];\n        result =\n            this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n        result =\n            this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n            result;\n      }\n    }\n\n    if (attrs) {\n      for (let /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n        const /** @type {?} */ name = attrs[i];\n        const /** @type {?} */ value = attrs[i + 1];\n\n        const /** @type {?} */ terminalValuesMap = this._attrValueMap.get(name);\n        if (value) {\n          result =\n              this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n\n        const /** @type {?} */ partialValuesMap = this._attrValuePartialMap.get(name);\n        if (value) {\n          result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n        }\n        result =\n            this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n      }\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchTerminal(\n      map: Map<string, SelectorContext[]>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    let /** @type {?} */ selectables: SelectorContext[] = map.get(name) || [];\n    const /** @type {?} */ starSelectables: SelectorContext[] = map.get('*');\n    if (starSelectables) {\n      selectables = selectables.concat(starSelectables);\n    }\n    if (selectables.length === 0) {\n      return false;\n    }\n    let /** @type {?} */ selectable: SelectorContext;\n    let /** @type {?} */ result = false;\n    for (let /** @type {?} */ i = 0; i < selectables.length; i++) {\n      selectable = selectables[i];\n      result = selectable.finalize(cssSelector, matchedCallback) || result;\n    }\n    return result;\n  }\n/**\n * \\@internal\n * @param {?} map\n * @param {?} name\n * @param {?} cssSelector\n * @param {?} matchedCallback\n * @return {?}\n */\n_matchPartial(\n      map: Map<string, SelectorMatcher>, name: string, cssSelector: CssSelector,\n      matchedCallback: (c: CssSelector, a: any) => void): boolean {\n    if (!map || typeof name !== 'string') {\n      return false;\n    }\n\n    const /** @type {?} */ nestedSelector = map.get(name);\n    if (!nestedSelector) {\n      return false;\n    }\n    // TODO(perf): get rid of recursion and measure again\n    // TODO(perf): don't pass the whole selector into the recursion,\n    // but only the not processed parts\n    return nestedSelector.match(cssSelector, matchedCallback);\n  }\n}\n\nfunction SelectorMatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorMatcher.prototype._elementMap;\n/** @type {?} */\nSelectorMatcher.prototype._elementPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._classMap;\n/** @type {?} */\nSelectorMatcher.prototype._classPartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValueMap;\n/** @type {?} */\nSelectorMatcher.prototype._attrValuePartialMap;\n/** @type {?} */\nSelectorMatcher.prototype._listContexts;\n}\n\nexport class SelectorListContext {\n  alreadyMatched: boolean = false;\n/**\n * @param {?} selectors\n */\nconstructor(public selectors: CssSelector[]) {}\n}\n\nfunction SelectorListContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorListContext.prototype.alreadyMatched;\n/** @type {?} */\nSelectorListContext.prototype.selectors;\n}\n\nexport class SelectorContext {\n  notSelectors: CssSelector[];\n/**\n * @param {?} selector\n * @param {?} cbContext\n * @param {?} listContext\n */\nconstructor(\npublic selector: CssSelector,\npublic cbContext: any,\npublic listContext: SelectorListContext) {\n    this.notSelectors = selector.notSelectors;\n  }\n/**\n * @param {?} cssSelector\n * @param {?} callback\n * @return {?}\n */\nfinalize(cssSelector: CssSelector, callback: (c: CssSelector, a: any) => void): boolean {\n    let /** @type {?} */ result = true;\n    if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n      const /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n      result = !notMatcher.match(cssSelector, null);\n    }\n    if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n      if (this.listContext) {\n        this.listContext.alreadyMatched = true;\n      }\n      callback(this.selector, this.cbContext);\n    }\n    return result;\n  }\n}\n\nfunction SelectorContext_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectorContext.prototype.notSelectors;\n/** @type {?} */\nSelectorContext.prototype.selector;\n/** @type {?} */\nSelectorContext.prototype.cbContext;\n/** @type {?} */\nSelectorContext.prototype.listContext;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {TagContentType, TagDefinition} from './tags';\nexport class HtmlTagDefinition implements TagDefinition {\nprivate closedByChildren: {[key: string]: boolean} = {};\n\n  closedByParent: boolean = false;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean = false;\n/**\n * @param {?=} __0\n */\nconstructor(\n      {closedByChildren, requiredParents, implicitNamespacePrefix,\n       contentType = TagContentType.PARSABLE_DATA, closedByParent = false, isVoid = false,\n       ignoreFirstLf = false}: {\n        closedByChildren?: string[],\n        closedByParent?: boolean,\n        requiredParents?: string[],\n        implicitNamespacePrefix?: string,\n        contentType?: TagContentType,\n        isVoid?: boolean,\n        ignoreFirstLf?: boolean\n      } = {}) {\n    if (closedByChildren && closedByChildren.length > 0) {\n      closedByChildren.forEach(tagName => this.closedByChildren[tagName] = true);\n    }\n    this.isVoid = isVoid;\n    this.closedByParent = closedByParent || isVoid;\n    if (requiredParents && requiredParents.length > 0) {\n      this.requiredParents = {};\n      // The first parent is the list is automatically when none of the listed parents are present\n      this.parentToAdd = requiredParents[0];\n      requiredParents.forEach(tagName => this.requiredParents[tagName] = true);\n    }\n    this.implicitNamespacePrefix = implicitNamespacePrefix;\n    this.contentType = contentType;\n    this.ignoreFirstLf = ignoreFirstLf;\n  }\n/**\n * @param {?} currentParent\n * @return {?}\n */\nrequireExtraParent(currentParent: string): boolean {\n    if (!this.requiredParents) {\n      return false;\n    }\n\n    if (!currentParent) {\n      return true;\n    }\n\n    const /** @type {?} */ lcParent = currentParent.toLowerCase();\n    const /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n    return !isParentTemplate && this.requiredParents[lcParent] != true;\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nisClosedByChild(name: string): boolean {\n    return this.isVoid || name.toLowerCase() in this.closedByChildren;\n  }\n}\n\nfunction HtmlTagDefinition_tsickle_Closure_declarations() {\n/** @type {?} */\nHtmlTagDefinition.prototype.closedByChildren;\n/** @type {?} */\nHtmlTagDefinition.prototype.closedByParent;\n/** @type {?} */\nHtmlTagDefinition.prototype.requiredParents;\n/** @type {?} */\nHtmlTagDefinition.prototype.parentToAdd;\n/** @type {?} */\nHtmlTagDefinition.prototype.implicitNamespacePrefix;\n/** @type {?} */\nHtmlTagDefinition.prototype.contentType;\n/** @type {?} */\nHtmlTagDefinition.prototype.isVoid;\n/** @type {?} */\nHtmlTagDefinition.prototype.ignoreFirstLf;\n/** @type {?} */\nHtmlTagDefinition.prototype.canSelfClose;\n}\n\n\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nconst /** @type {?} */ TAG_DEFINITIONS: {[key: string]: HtmlTagDefinition} = {\n  'base': new HtmlTagDefinition({isVoid: true}),\n  'meta': new HtmlTagDefinition({isVoid: true}),\n  'area': new HtmlTagDefinition({isVoid: true}),\n  'embed': new HtmlTagDefinition({isVoid: true}),\n  'link': new HtmlTagDefinition({isVoid: true}),\n  'img': new HtmlTagDefinition({isVoid: true}),\n  'input': new HtmlTagDefinition({isVoid: true}),\n  'param': new HtmlTagDefinition({isVoid: true}),\n  'hr': new HtmlTagDefinition({isVoid: true}),\n  'br': new HtmlTagDefinition({isVoid: true}),\n  'source': new HtmlTagDefinition({isVoid: true}),\n  'track': new HtmlTagDefinition({isVoid: true}),\n  'wbr': new HtmlTagDefinition({isVoid: true}),\n  'p': new HtmlTagDefinition({\n    closedByChildren: [\n      'address', 'article', 'aside', 'blockquote', 'div', 'dl',      'fieldset', 'footer', 'form',\n      'h1',      'h2',      'h3',    'h4',         'h5',  'h6',      'header',   'hgroup', 'hr',\n      'main',    'nav',     'ol',    'p',          'pre', 'section', 'table',    'ul'\n    ],\n    closedByParent: true\n  }),\n  'thead': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot']}),\n  'tbody': new HtmlTagDefinition({closedByChildren: ['tbody', 'tfoot'], closedByParent: true}),\n  'tfoot': new HtmlTagDefinition({closedByChildren: ['tbody'], closedByParent: true}),\n  'tr': new HtmlTagDefinition({\n    closedByChildren: ['tr'],\n    requiredParents: ['tbody', 'tfoot', 'thead'],\n    closedByParent: true\n  }),\n  'td': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'th': new HtmlTagDefinition({closedByChildren: ['td', 'th'], closedByParent: true}),\n  'col': new HtmlTagDefinition({requiredParents: ['colgroup'], isVoid: true}),\n  'svg': new HtmlTagDefinition({implicitNamespacePrefix: 'svg'}),\n  'math': new HtmlTagDefinition({implicitNamespacePrefix: 'math'}),\n  'li': new HtmlTagDefinition({closedByChildren: ['li'], closedByParent: true}),\n  'dt': new HtmlTagDefinition({closedByChildren: ['dt', 'dd']}),\n  'dd': new HtmlTagDefinition({closedByChildren: ['dt', 'dd'], closedByParent: true}),\n  'rb': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rt': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'rtc': new HtmlTagDefinition({closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true}),\n  'rp': new HtmlTagDefinition({closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true}),\n  'optgroup': new HtmlTagDefinition({closedByChildren: ['optgroup'], closedByParent: true}),\n  'option': new HtmlTagDefinition({closedByChildren: ['option', 'optgroup'], closedByParent: true}),\n  'pre': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'listing': new HtmlTagDefinition({ignoreFirstLf: true}),\n  'style': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'script': new HtmlTagDefinition({contentType: TagContentType.RAW_TEXT}),\n  'title': new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT}),\n  'textarea':\n      new HtmlTagDefinition({contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true}),\n};\n\nconst /** @type {?} */ _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nexport function getHtmlTagDefinition(tagName: string): HtmlTagDefinition {\n  return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}","\nexport type TagContentType = number;\nexport let TagContentType: any = {};\nTagContentType.RAW_TEXT = 0;\nTagContentType.ESCAPABLE_RAW_TEXT = 1;\nTagContentType.PARSABLE_DATA = 2;\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n\n\n// TODO(vicb): read-only when TS supports it\nexport interface TagDefinition {\n  closedByParent: boolean;\n  requiredParents: {[key: string]: boolean};\n  parentToAdd: string;\n  implicitNamespacePrefix: string;\n  contentType: TagContentType;\n  isVoid: boolean;\n  ignoreFirstLf: boolean;\n  canSelfClose: boolean;\n\n  requireExtraParent(currentParent: string): boolean;\n\n  isClosedByChild(name: string): boolean;\n}\n/**\n * @param {?} elementName\n * @return {?}\n */\nexport function splitNsName(elementName: string): [string, string] {\n  if (elementName[0] != ':') {\n    return [null, elementName];\n  }\n\n  const /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n\n  if (colonIndex == -1) {\n    throw new Error(`Unsupported format \"${elementName}\" expecting \":namespace:name\"`);\n  }\n\n  return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nexport function getNsPrefix(fullName: string): string {\n  return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nexport function mergeNsAndName(prefix: string, localName: string): string {\n  return prefix ? `:${prefix}:${localName}` : localName;\n}\n\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not exist.\nexport const /** @type {?} */ NAMED_ENTITIES: {[k: string]: string} = {\n  'Aacute': '\\u00C1',\n  'aacute': '\\u00E1',\n  'Acirc': '\\u00C2',\n  'acirc': '\\u00E2',\n  'acute': '\\u00B4',\n  'AElig': '\\u00C6',\n  'aelig': '\\u00E6',\n  'Agrave': '\\u00C0',\n  'agrave': '\\u00E0',\n  'alefsym': '\\u2135',\n  'Alpha': '\\u0391',\n  'alpha': '\\u03B1',\n  'amp': '&',\n  'and': '\\u2227',\n  'ang': '\\u2220',\n  'apos': '\\u0027',\n  'Aring': '\\u00C5',\n  'aring': '\\u00E5',\n  'asymp': '\\u2248',\n  'Atilde': '\\u00C3',\n  'atilde': '\\u00E3',\n  'Auml': '\\u00C4',\n  'auml': '\\u00E4',\n  'bdquo': '\\u201E',\n  'Beta': '\\u0392',\n  'beta': '\\u03B2',\n  'brvbar': '\\u00A6',\n  'bull': '\\u2022',\n  'cap': '\\u2229',\n  'Ccedil': '\\u00C7',\n  'ccedil': '\\u00E7',\n  'cedil': '\\u00B8',\n  'cent': '\\u00A2',\n  'Chi': '\\u03A7',\n  'chi': '\\u03C7',\n  'circ': '\\u02C6',\n  'clubs': '\\u2663',\n  'cong': '\\u2245',\n  'copy': '\\u00A9',\n  'crarr': '\\u21B5',\n  'cup': '\\u222A',\n  'curren': '\\u00A4',\n  'dagger': '\\u2020',\n  'Dagger': '\\u2021',\n  'darr': '\\u2193',\n  'dArr': '\\u21D3',\n  'deg': '\\u00B0',\n  'Delta': '\\u0394',\n  'delta': '\\u03B4',\n  'diams': '\\u2666',\n  'divide': '\\u00F7',\n  'Eacute': '\\u00C9',\n  'eacute': '\\u00E9',\n  'Ecirc': '\\u00CA',\n  'ecirc': '\\u00EA',\n  'Egrave': '\\u00C8',\n  'egrave': '\\u00E8',\n  'empty': '\\u2205',\n  'emsp': '\\u2003',\n  'ensp': '\\u2002',\n  'Epsilon': '\\u0395',\n  'epsilon': '\\u03B5',\n  'equiv': '\\u2261',\n  'Eta': '\\u0397',\n  'eta': '\\u03B7',\n  'ETH': '\\u00D0',\n  'eth': '\\u00F0',\n  'Euml': '\\u00CB',\n  'euml': '\\u00EB',\n  'euro': '\\u20AC',\n  'exist': '\\u2203',\n  'fnof': '\\u0192',\n  'forall': '\\u2200',\n  'frac12': '\\u00BD',\n  'frac14': '\\u00BC',\n  'frac34': '\\u00BE',\n  'frasl': '\\u2044',\n  'Gamma': '\\u0393',\n  'gamma': '\\u03B3',\n  'ge': '\\u2265',\n  'gt': '>',\n  'harr': '\\u2194',\n  'hArr': '\\u21D4',\n  'hearts': '\\u2665',\n  'hellip': '\\u2026',\n  'Iacute': '\\u00CD',\n  'iacute': '\\u00ED',\n  'Icirc': '\\u00CE',\n  'icirc': '\\u00EE',\n  'iexcl': '\\u00A1',\n  'Igrave': '\\u00CC',\n  'igrave': '\\u00EC',\n  'image': '\\u2111',\n  'infin': '\\u221E',\n  'int': '\\u222B',\n  'Iota': '\\u0399',\n  'iota': '\\u03B9',\n  'iquest': '\\u00BF',\n  'isin': '\\u2208',\n  'Iuml': '\\u00CF',\n  'iuml': '\\u00EF',\n  'Kappa': '\\u039A',\n  'kappa': '\\u03BA',\n  'Lambda': '\\u039B',\n  'lambda': '\\u03BB',\n  'lang': '\\u27E8',\n  'laquo': '\\u00AB',\n  'larr': '\\u2190',\n  'lArr': '\\u21D0',\n  'lceil': '\\u2308',\n  'ldquo': '\\u201C',\n  'le': '\\u2264',\n  'lfloor': '\\u230A',\n  'lowast': '\\u2217',\n  'loz': '\\u25CA',\n  'lrm': '\\u200E',\n  'lsaquo': '\\u2039',\n  'lsquo': '\\u2018',\n  'lt': '<',\n  'macr': '\\u00AF',\n  'mdash': '\\u2014',\n  'micro': '\\u00B5',\n  'middot': '\\u00B7',\n  'minus': '\\u2212',\n  'Mu': '\\u039C',\n  'mu': '\\u03BC',\n  'nabla': '\\u2207',\n  'nbsp': '\\u00A0',\n  'ndash': '\\u2013',\n  'ne': '\\u2260',\n  'ni': '\\u220B',\n  'not': '\\u00AC',\n  'notin': '\\u2209',\n  'nsub': '\\u2284',\n  'Ntilde': '\\u00D1',\n  'ntilde': '\\u00F1',\n  'Nu': '\\u039D',\n  'nu': '\\u03BD',\n  'Oacute': '\\u00D3',\n  'oacute': '\\u00F3',\n  'Ocirc': '\\u00D4',\n  'ocirc': '\\u00F4',\n  'OElig': '\\u0152',\n  'oelig': '\\u0153',\n  'Ograve': '\\u00D2',\n  'ograve': '\\u00F2',\n  'oline': '\\u203E',\n  'Omega': '\\u03A9',\n  'omega': '\\u03C9',\n  'Omicron': '\\u039F',\n  'omicron': '\\u03BF',\n  'oplus': '\\u2295',\n  'or': '\\u2228',\n  'ordf': '\\u00AA',\n  'ordm': '\\u00BA',\n  'Oslash': '\\u00D8',\n  'oslash': '\\u00F8',\n  'Otilde': '\\u00D5',\n  'otilde': '\\u00F5',\n  'otimes': '\\u2297',\n  'Ouml': '\\u00D6',\n  'ouml': '\\u00F6',\n  'para': '\\u00B6',\n  'permil': '\\u2030',\n  'perp': '\\u22A5',\n  'Phi': '\\u03A6',\n  'phi': '\\u03C6',\n  'Pi': '\\u03A0',\n  'pi': '\\u03C0',\n  'piv': '\\u03D6',\n  'plusmn': '\\u00B1',\n  'pound': '\\u00A3',\n  'prime': '\\u2032',\n  'Prime': '\\u2033',\n  'prod': '\\u220F',\n  'prop': '\\u221D',\n  'Psi': '\\u03A8',\n  'psi': '\\u03C8',\n  'quot': '\\u0022',\n  'radic': '\\u221A',\n  'rang': '\\u27E9',\n  'raquo': '\\u00BB',\n  'rarr': '\\u2192',\n  'rArr': '\\u21D2',\n  'rceil': '\\u2309',\n  'rdquo': '\\u201D',\n  'real': '\\u211C',\n  'reg': '\\u00AE',\n  'rfloor': '\\u230B',\n  'Rho': '\\u03A1',\n  'rho': '\\u03C1',\n  'rlm': '\\u200F',\n  'rsaquo': '\\u203A',\n  'rsquo': '\\u2019',\n  'sbquo': '\\u201A',\n  'Scaron': '\\u0160',\n  'scaron': '\\u0161',\n  'sdot': '\\u22C5',\n  'sect': '\\u00A7',\n  'shy': '\\u00AD',\n  'Sigma': '\\u03A3',\n  'sigma': '\\u03C3',\n  'sigmaf': '\\u03C2',\n  'sim': '\\u223C',\n  'spades': '\\u2660',\n  'sub': '\\u2282',\n  'sube': '\\u2286',\n  'sum': '\\u2211',\n  'sup': '\\u2283',\n  'sup1': '\\u00B9',\n  'sup2': '\\u00B2',\n  'sup3': '\\u00B3',\n  'supe': '\\u2287',\n  'szlig': '\\u00DF',\n  'Tau': '\\u03A4',\n  'tau': '\\u03C4',\n  'there4': '\\u2234',\n  'Theta': '\\u0398',\n  'theta': '\\u03B8',\n  'thetasym': '\\u03D1',\n  'thinsp': '\\u2009',\n  'THORN': '\\u00DE',\n  'thorn': '\\u00FE',\n  'tilde': '\\u02DC',\n  'times': '\\u00D7',\n  'trade': '\\u2122',\n  'Uacute': '\\u00DA',\n  'uacute': '\\u00FA',\n  'uarr': '\\u2191',\n  'uArr': '\\u21D1',\n  'Ucirc': '\\u00DB',\n  'ucirc': '\\u00FB',\n  'Ugrave': '\\u00D9',\n  'ugrave': '\\u00F9',\n  'uml': '\\u00A8',\n  'upsih': '\\u03D2',\n  'Upsilon': '\\u03A5',\n  'upsilon': '\\u03C5',\n  'Uuml': '\\u00DC',\n  'uuml': '\\u00FC',\n  'weierp': '\\u2118',\n  'Xi': '\\u039E',\n  'xi': '\\u03BE',\n  'Yacute': '\\u00DD',\n  'yacute': '\\u00FD',\n  'yen': '\\u00A5',\n  'yuml': '\\u00FF',\n  'Yuml': '\\u0178',\n  'Zeta': '\\u0396',\n  'zeta': '\\u03B6',\n  'zwj': '\\u200D',\n  'zwnj': '\\u200C',\n};\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const $COMPILE = '$compile';\nexport const /** @type {?} */ $CONTROLLER = '$controller';\nexport const /** @type {?} */ $DELEGATE = '$delegate';\nexport const /** @type {?} */ $HTTP_BACKEND = '$httpBackend';\nexport const /** @type {?} */ $INJECTOR = '$injector';\nexport const /** @type {?} */ $PARSE = '$parse';\nexport const /** @type {?} */ $PROVIDE = '$provide';\nexport const /** @type {?} */ $ROOT_SCOPE = '$rootScope';\nexport const /** @type {?} */ $SCOPE = '$scope';\nexport const /** @type {?} */ $TEMPLATE_CACHE = '$templateCache';\nexport const /** @type {?} */ $TEMPLATE_REQUEST = '$templateRequest';\n\nexport const /** @type {?} */ $$TESTABILITY = '$$testability';\n\nexport const /** @type {?} */ COMPILER_KEY = '$$angularCompiler';\nexport const /** @type {?} */ GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport const /** @type {?} */ INJECTOR_KEY = '$$angularInjector';\nexport const /** @type {?} */ NG_ZONE_KEY = '$$angularNgZone';\n\nexport const /** @type {?} */ REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport const /** @type {?} */ REQUIRE_NG_MODEL = '?ngModel';\n\nexport const /** @type {?} */ UPGRADE_MODULE_NAME = '$$UpgradeModule';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type Ng1Token = string;\n\nexport type Ng1Expression = string | Function;\n\nexport interface IAnnotatedFunction extends Function { $inject?: Ng1Token[]; }\n\nexport type IInjectable = (Ng1Token | Function)[] | IAnnotatedFunction;\n\nexport type SingleOrListOrMap<T> = T | T[] | {[key: string]: T};\n\nexport interface IModule {\n  name: string;\n  requires: (string|IInjectable)[];\n  config(fn: IInjectable): IModule;\n  directive(selector: string, factory: IInjectable): IModule;\n  component(selector: string, component: IComponent): IModule;\n  controller(name: string, type: IInjectable): IModule;\n  factory(key: Ng1Token, factoryFn: IInjectable): IModule;\n  value(key: Ng1Token, value: any): IModule;\n  constant(token: Ng1Token, value: any): IModule;\n  run(a: IInjectable): IModule;\n}\nexport interface ICompileService {\n  (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n}\nexport interface ILinkFn {\n  (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n}\nexport interface ILinkFnOptions {\n  parentBoundTranscludeFn?: Function;\n  transcludeControllers?: {[key: string]: any};\n  futureParentElement?: Node;\n}\nexport interface IRootScopeService {\n  $new(isolate?: boolean): IScope;\n  $id: string;\n  $parent: IScope;\n  $root: IScope;\n  $watch(exp: Ng1Expression, fn?: (a1?: any, a2?: any) => void): Function;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $destroy(): any;\n  $apply(exp?: Ng1Expression): any;\n  $digest(): any;\n  $evalAsync(): any;\n  $on(event: string, fn?: (event?: any, ...args: any[]) => void): Function;\n  $$childTail: IScope;\n  $$childHead: IScope;\n  $$nextSibling: IScope;\n  [key: string]: any;\n}\nexport interface IScope extends IRootScopeService {}\n\nexport interface IAngularBootstrapConfig { strictDi?: boolean; }\nexport interface IDirective {\n  compile?: IDirectiveCompileFn;\n  controller?: IController;\n  controllerAs?: string;\n  bindToController?: boolean|{[key: string]: string};\n  link?: IDirectiveLinkFn|IDirectivePrePost;\n  name?: string;\n  priority?: number;\n  replace?: boolean;\n  require?: DirectiveRequireProperty;\n  restrict?: string;\n  scope?: boolean|{[key: string]: string};\n  template?: string|Function;\n  templateUrl?: string|Function;\n  templateNamespace?: string;\n  terminal?: boolean;\n  transclude?: boolean|'element'|{[key: string]: string};\n}\nexport type DirectiveRequireProperty = SingleOrListOrMap<string>;\nexport interface IDirectiveCompileFn {\n  (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n   transclude: ITranscludeFunction): IDirectivePrePost;\n}\nexport interface IDirectivePrePost {\n  pre?: IDirectiveLinkFn;\n  post?: IDirectiveLinkFn;\n}\nexport interface IDirectiveLinkFn {\n  (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n   controller: any, transclude: ITranscludeFunction): void;\n}\nexport interface IComponent {\n  bindings?: {[key: string]: string};\n  controller?: string|IInjectable;\n  controllerAs?: string;\n  require?: DirectiveRequireProperty;\n  template?: string|Function;\n  templateUrl?: string|Function;\n  transclude?: boolean;\n}\nexport interface IAttributes { $observe(attr: string, fn: (v: string) => void): void; }\nexport interface ITranscludeFunction {\n  // If the scope is provided, then the cloneAttachFn must be as well.\n  (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n  // If one argument is provided, then it's assumed to be the cloneAttachFn.\n  (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n}\nexport interface ICloneAttachFunction {\n  // Let's hint but not force cloneAttachFn's signature\n  (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n}\nexport type IAugmentedJQuery = Node[] & {\n  bind?: (name: string, fn: () => void) => void;\n  data?: (name: string, value?: any) => any;\n  text?: () => string;\n  inheritedData?: (name: string, value?: any) => any;\n  contents?: () => IAugmentedJQuery;\n  parent?: () => IAugmentedJQuery;\n  empty?: () => void;\n  append?: (content: IAugmentedJQuery | string) => IAugmentedJQuery;\n  controller?: (name: string) => any;\n  isolateScope?: () => IScope;\n  injector?: () => IInjectorService;\n};\nexport interface IProvider { $get: IInjectable; }\nexport interface IProvideService {\n  provider(token: Ng1Token, provider: IProvider): IProvider;\n  factory(token: Ng1Token, factory: IInjectable): IProvider;\n  service(token: Ng1Token, type: IInjectable): IProvider;\n  value(token: Ng1Token, value: any): IProvider;\n  constant(token: Ng1Token, value: any): void;\n  decorator(token: Ng1Token, factory: IInjectable): void;\n}\nexport interface IParseService { (expression: string): ICompiledExpression; }\nexport interface ICompiledExpression { assign(context: any, value: any): any; }\nexport interface IHttpBackendService {\n  (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n   withCredentials?: boolean): void;\n}\nexport interface ICacheObject {\n  put<T>(key: string, value?: T): T;\n  get(key: string): any;\n}\nexport interface ITemplateCacheService extends ICacheObject {}\nexport interface ITemplateRequestService {\n  (template: string|any /* TrustedResourceUrl */, ignoreRequestError?: boolean): Promise<string>;\n  totalPendingRequests: number;\n}\nexport type IController = string | IInjectable;\nexport interface IControllerService {\n  (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n  (controllerName: string, locals?: any): any;\n}\n\nexport interface IInjectorService {\n  get(key: string): any;\n  has(key: string): boolean;\n}\n\nexport interface ITestabilityService {\n  findBindings(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  findModels(element: Element, expression: string, opt_exactMatch?: boolean): Element[];\n  getLocation(): string;\n  setLocation(url: string): void;\n  whenStable(callback: Function): void;\n}\n\nexport interface INgModelController {\n  $render(): void;\n  $isEmpty(value: any): boolean;\n  $setValidity(validationErrorKey: string, isValid: boolean): void;\n  $setPristine(): void;\n  $setDirty(): void;\n  $setUntouched(): void;\n  $setTouched(): void;\n  $rollbackViewValue(): void;\n  $validate(): void;\n  $commitViewValue(): void;\n  $setViewValue(value: any, trigger: string): void;\n\n  $viewValue: any;\n  $modelValue: any;\n  $parsers: Function[];\n  $formatters: Function[];\n  $validators: {[key: string]: Function};\n  $asyncValidators: {[key: string]: Function};\n  $viewChangeListeners: Function[];\n  $error: Object;\n  $pending: Object;\n  $untouched: boolean;\n  $touched: boolean;\n  $pristine: boolean;\n  $dirty: boolean;\n  $valid: boolean;\n  $invalid: boolean;\n  $name: string;\n}\n/**\n * @return {?}\n */\nfunction noNg() {\n  throw new Error('AngularJS v1.x is not loaded!');\n}\n\nlet /** @type {?} */ angular: {\n  bootstrap: (e: Element, modules: (string | IInjectable)[], config: IAngularBootstrapConfig) =>\n                 void,\n  module: (prefix: string, dependencies?: string[]) => IModule,\n  element: (e: Element | string) => IAugmentedJQuery,\n  version: {major: number}, resumeBootstrap?: () => void,\n  getTestability: (e: Element) => ITestabilityService\n} = /** @type {?} */(( <any>{\n  bootstrap: noNg,\n  module: noNg,\n  element: noNg,\n  version: noNg,\n  resumeBootstrap: noNg,\n  getTestability: noNg\n}));\n\n\ntry {\n  if (window.hasOwnProperty('angular')) {\n    angular = ( /** @type {?} */((<any>window))).angular;\n  }\n} catch ( /** @type {?} */e) {\n  // ignore in CJS mode.\n}\n\nexport const /** @type {?} */ bootstrap = angular.bootstrap;\nexport const /** @type {?} */ module = angular.module;\nexport const /** @type {?} */ element = angular.element;\nexport const /** @type {?} */ version = angular.version;\nexport const /** @type {?} */ resumeBootstrap = angular.resumeBootstrap;\nexport const /** @type {?} */ getTestability = angular.getTestability;\n"],"names":["NgModule","Testability","Compiler","Injector","NgZone","platformBrowserDynamic","angular.element","EventEmitter","Inject","ElementRef","Directive","Injectable","ComponentFactoryResolver","ReflectiveInjector"],"mappings":"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"}
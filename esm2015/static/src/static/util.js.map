{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../../../packages/upgrade/static/src/static/util.ts"],"names":[],"mappings":";;;;;;;AAQA,OAAO,EAAW,sCAAsC,IAAI,qCAAqC,EAAC,MAAM,eAAe,CAAC;AAGxH,MAAM;IACJ,YAAoB,WAAqB;QAArB,gBAAW,GAAX,WAAW,CAAU;KAAI;;;;;IAM7C,GAAG,CAAC,KAAU,EAAE,aAAmB;QACjC,EAAE,CAAC,CAAC,aAAa,KAAK,qCAAqC,CAAC,CAAC,CAAC;YAC5D,MAAM,CAAC,aAAa,CAAC;SACtB;QAED,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;KACnD;CACF","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR} from '@angular/core';\n\n\nexport class NgAdapterInjector implements Injector {\n  constructor(private modInjector: Injector) {}\n\n  // When Angular locate a service in the component injector tree, the not found value is set to\n  // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n  // injector.\n  // AngularJS only supports a single tree and should always check the module injector.\n  get(token: any, notFoundValue?: any): any {\n    if (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n      return notFoundValue;\n    }\n\n    return this.modInjector.get(token, notFoundValue);\n  }\n}\n"]}
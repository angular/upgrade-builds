/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
export const /** @type {?} */ $COMPILE = '$compile';
export const /** @type {?} */ $CONTROLLER = '$controller';
export const /** @type {?} */ $DELEGATE = '$delegate';
export const /** @type {?} */ $HTTP_BACKEND = '$httpBackend';
export const /** @type {?} */ $INJECTOR = '$injector';
export const /** @type {?} */ $INTERVAL = '$interval';
export const /** @type {?} */ $PARSE = '$parse';
export const /** @type {?} */ $PROVIDE = '$provide';
export const /** @type {?} */ $ROOT_SCOPE = '$rootScope';
export const /** @type {?} */ $SCOPE = '$scope';
export const /** @type {?} */ $TEMPLATE_CACHE = '$templateCache';
export const /** @type {?} */ $TEMPLATE_REQUEST = '$templateRequest';
export const /** @type {?} */ $$TESTABILITY = '$$testability';
export const /** @type {?} */ COMPILER_KEY = '$$angularCompiler';
export const /** @type {?} */ GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';
export const /** @type {?} */ INJECTOR_KEY = '$$angularInjector';
export const /** @type {?} */ LAZY_MODULE_REF = '$$angularLazyModuleRef';
export const /** @type {?} */ NG_ZONE_KEY = '$$angularNgZone';
export const /** @type {?} */ REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;
export const /** @type {?} */ REQUIRE_NG_MODEL = '?ngModel';
export const /** @type {?} */ UPGRADE_MODULE_NAME = '$$UpgradeModule';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdXBncmFkZS9zcmMvY29tbW9uL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQVFBLE1BQU0sQ0FBQyx1QkFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyx1QkFBTSxXQUFXLEdBQUcsYUFBYSxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyx1QkFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQ3JDLE1BQU0sQ0FBQyx1QkFBTSxhQUFhLEdBQUcsY0FBYyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyx1QkFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQ3JDLE1BQU0sQ0FBQyx1QkFBTSxTQUFTLEdBQUcsV0FBVyxDQUFDO0FBQ3JDLE1BQU0sQ0FBQyx1QkFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDO0FBQy9CLE1BQU0sQ0FBQyx1QkFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDO0FBQ25DLE1BQU0sQ0FBQyx1QkFBTSxXQUFXLEdBQUcsWUFBWSxDQUFDO0FBQ3hDLE1BQU0sQ0FBQyx1QkFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDO0FBQy9CLE1BQU0sQ0FBQyx1QkFBTSxlQUFlLEdBQUcsZ0JBQWdCLENBQUM7QUFDaEQsTUFBTSxDQUFDLHVCQUFNLGlCQUFpQixHQUFHLGtCQUFrQixDQUFDO0FBRXBELE1BQU0sQ0FBQyx1QkFBTSxhQUFhLEdBQUcsZUFBZSxDQUFDO0FBRTdDLE1BQU0sQ0FBQyx1QkFBTSxZQUFZLEdBQUcsbUJBQW1CLENBQUM7QUFDaEQsTUFBTSxDQUFDLHVCQUFNLDJCQUEyQixHQUFHLGdDQUFnQyxDQUFDO0FBQzVFLE1BQU0sQ0FBQyx1QkFBTSxZQUFZLEdBQUcsbUJBQW1CLENBQUM7QUFDaEQsTUFBTSxDQUFDLHVCQUFNLGVBQWUsR0FBRyx3QkFBd0IsQ0FBQztBQUN4RCxNQUFNLENBQUMsdUJBQU0sV0FBVyxHQUFHLGlCQUFpQixDQUFDO0FBRTdDLE1BQU0sQ0FBQyx1QkFBTSxnQkFBZ0IsR0FBRyxLQUFLLEdBQUcsWUFBWSxDQUFDO0FBQ3JELE1BQU0sQ0FBQyx1QkFBTSxnQkFBZ0IsR0FBRyxVQUFVLENBQUM7QUFFM0MsTUFBTSxDQUFDLHVCQUFNLG1CQUFtQixHQUFHLGlCQUFpQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5leHBvcnQgY29uc3QgJENPTVBJTEUgPSAnJGNvbXBpbGUnO1xuZXhwb3J0IGNvbnN0ICRDT05UUk9MTEVSID0gJyRjb250cm9sbGVyJztcbmV4cG9ydCBjb25zdCAkREVMRUdBVEUgPSAnJGRlbGVnYXRlJztcbmV4cG9ydCBjb25zdCAkSFRUUF9CQUNLRU5EID0gJyRodHRwQmFja2VuZCc7XG5leHBvcnQgY29uc3QgJElOSkVDVE9SID0gJyRpbmplY3Rvcic7XG5leHBvcnQgY29uc3QgJElOVEVSVkFMID0gJyRpbnRlcnZhbCc7XG5leHBvcnQgY29uc3QgJFBBUlNFID0gJyRwYXJzZSc7XG5leHBvcnQgY29uc3QgJFBST1ZJREUgPSAnJHByb3ZpZGUnO1xuZXhwb3J0IGNvbnN0ICRST09UX1NDT1BFID0gJyRyb290U2NvcGUnO1xuZXhwb3J0IGNvbnN0ICRTQ09QRSA9ICckc2NvcGUnO1xuZXhwb3J0IGNvbnN0ICRURU1QTEFURV9DQUNIRSA9ICckdGVtcGxhdGVDYWNoZSc7XG5leHBvcnQgY29uc3QgJFRFTVBMQVRFX1JFUVVFU1QgPSAnJHRlbXBsYXRlUmVxdWVzdCc7XG5cbmV4cG9ydCBjb25zdCAkJFRFU1RBQklMSVRZID0gJyQkdGVzdGFiaWxpdHknO1xuXG5leHBvcnQgY29uc3QgQ09NUElMRVJfS0VZID0gJyQkYW5ndWxhckNvbXBpbGVyJztcbmV4cG9ydCBjb25zdCBHUk9VUF9QUk9KRUNUQUJMRV9OT0RFU19LRVkgPSAnJCRhbmd1bGFyR3JvdXBQcm9qZWN0YWJsZU5vZGVzJztcbmV4cG9ydCBjb25zdCBJTkpFQ1RPUl9LRVkgPSAnJCRhbmd1bGFySW5qZWN0b3InO1xuZXhwb3J0IGNvbnN0IExBWllfTU9EVUxFX1JFRiA9ICckJGFuZ3VsYXJMYXp5TW9kdWxlUmVmJztcbmV4cG9ydCBjb25zdCBOR19aT05FX0tFWSA9ICckJGFuZ3VsYXJOZ1pvbmUnO1xuXG5leHBvcnQgY29uc3QgUkVRVUlSRV9JTkpFQ1RPUiA9ICc/Xl4nICsgSU5KRUNUT1JfS0VZO1xuZXhwb3J0IGNvbnN0IFJFUVVJUkVfTkdfTU9ERUwgPSAnP25nTW9kZWwnO1xuXG5leHBvcnQgY29uc3QgVVBHUkFERV9NT0RVTEVfTkFNRSA9ICckJFVwZ3JhZGVNb2R1bGUnO1xuIl19
{"version":3,"sources":["../../../../../modules/@angular/upgrade/src/static/upgrade_component.ts"],"names":[],"mappings":"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","file":"upgrade_component.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DoCheck, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core';\n\nimport * as angular from '../common/angular1';\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $SCOPE, $TEMPLATE_CACHE} from '../common/constants';\nimport {controllerKey} from '../common/util';\nimport {looseIdentical} from '../facade/lang';\n\nconst /** @type {?} */ REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\nconst /** @type {?} */ NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nclass Bindings {\n  twoWayBoundProperties: string[] = [];\n  twoWayBoundLastValues: any[] = [];\n\n  expressionBoundProperties: string[] = [];\n\n  propertyToOutputMap: {[propName: string]: string} = {};\n}\n\nfunction Bindings_tsickle_Closure_declarations() {\n/** @type {?} */\nBindings.prototype.twoWayBoundProperties;\n/** @type {?} */\nBindings.prototype.twoWayBoundLastValues;\n/** @type {?} */\nBindings.prototype.expressionBoundProperties;\n/** @type {?} */\nBindings.prototype.propertyToOutputMap;\n}\n\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an AngularJS component to be used from Angular.\n * \n * \\@howToUse \n * \n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n * \n * We must create a {\\@link Directive} that will make this AngularJS component\n * available inside Angular templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n * \n * In this example you can see that we must derive from the {\\@link UpgradeComponent}\n * base class but also provide an {\\@link Directive `\\@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n * \n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the {\\@link ElementRef} and {\\@link Injector} for the component wrapper\n * \n * \\@description \n * \n * A helper class that should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n * \n * \\@experimental\n */\nexport class UpgradeComponent implements OnInit, OnChanges, DoCheck, OnDestroy {\nprivate $injector: angular.IInjectorService;\nprivate $compile: angular.ICompileService;\nprivate $templateCache: angular.ITemplateCacheService;\nprivate $httpBackend: angular.IHttpBackendService;\nprivate $controller: angular.IControllerService;\nprivate element: Element;\nprivate $element: angular.IAugmentedJQuery;\nprivate $componentScope: angular.IScope;\nprivate directive: angular.IDirective;\nprivate bindings: Bindings;\nprivate linkFn: angular.ILinkFn;\nprivate controllerInstance: IControllerInstance = null;\nprivate bindingDestination: IBindingDestination = null;\nprivate unregisterDoCheckWatcher: Function;\n/**\n * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n * Instead you should derive a new class from this one and call the super constructor\n * from the base class.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\" }\n * \n * * The `name` parameter should be the name of the AngularJS directive.\n * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n *   injection into the base class constructor.\n * \n * Note that we must manually implement lifecycle hooks that call through to the super class.\n * This is because, at the moment, the AoT compiler is not able to tell that the\n * `UpgradeComponent`\n * already implements them and so does not wire up calls to them at runtime.\n * @param {?} name\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(private name: string,\nprivate elementRef: ElementRef,\nprivate injector: Injector) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$templateCache = this.$injector.get($TEMPLATE_CACHE);\n    this.$httpBackend = this.$injector.get($HTTP_BACKEND);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = this.getDirective(name);\n    this.bindings = this.initializeBindings(this.directive);\n    this.linkFn = this.compileTemplate(this.directive);\n\n    // We ask for the AngularJS scope from the Angular injector, since\n    // we will put the new component scope onto the new injector for each component\n    const $parentScope = injector.get($SCOPE);\n    // QUESTION 1: Should we create an isolated scope if the scope is only true?\n    // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n    this.$componentScope = $parentScope.$new(!!this.directive.scope);\n\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    if (controllerType) {\n      this.controllerInstance = this.buildController(\n          controllerType, this.$componentScope, this.$element, this.directive.controllerAs);\n    } else if (bindToController) {\n      throw new Error(\n          `Upgraded directive '${name}' specifies 'bindToController' but no controller.`);\n    }\n\n    this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n\n    this.setupOutputs();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    const /** @type {?} */ attrs: angular.IAttributes = NOT_SUPPORTED;\n    const /** @type {?} */ transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n    const /** @type {?} */ directiveRequire = this.getDirectiveRequire(this.directive);\n    const /** @type {?} */ requiredControllers =\n        this.resolveRequire(this.directive.name, this.$element, directiveRequire);\n\n    if (this.directive.bindToController && isMap(directiveRequire)) {\n      const /** @type {?} */ requiredControllersMap = /** @type {?} */(( requiredControllers as{[key: string]: IControllerInstance}));\n      Object.keys(requiredControllersMap).forEach(key => {\n        this.controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n      this.controllerInstance.$onInit();\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      const /** @type {?} */ callDoCheck = () => this.controllerInstance.$doCheck();\n\n      this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n      callDoCheck();\n    }\n\n    const /** @type {?} */ link = this.directive.link;\n    const /** @type {?} */ preLink = (typeof link == 'object') && ( /** @type {?} */((link as angular.IDirectivePrePost))).pre;\n    const /** @type {?} */ postLink = (typeof link == 'object') ? ( /** @type {?} */((link as angular.IDirectivePrePost))).post : link;\n    if (preLink) {\n      preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: Node;\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    const /** @type {?} */ attachElement: angular.ICloneAttachFunction =\n        (clonedElements, scope) => { this.$element.append(clonedElements); };\n    const /** @type {?} */ attachChildNodes: angular.ILinkFn = (scope, cloneAttach) => cloneAttach(childNodes);\n\n    this.linkFn(this.$componentScope, attachElement, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n      this.controllerInstance.$postLink();\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    // Forward input changes to `bindingDestination`\n    Object.keys(changes).forEach(\n        propName => this.bindingDestination[propName] = changes[propName].currentValue);\n\n    if (isFunction(this.bindingDestination.$onChanges)) {\n      this.bindingDestination.$onChanges(changes);\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    const /** @type {?} */ twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n    const /** @type {?} */ twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n    const /** @type {?} */ propertyToOutputMap = this.bindings.propertyToOutputMap;\n\n    twoWayBoundProperties.forEach((propName, idx) => {\n      const /** @type {?} */ newValue = this.bindingDestination[propName];\n      const /** @type {?} */ oldValue = twoWayBoundLastValues[idx];\n\n      if (!looseIdentical(newValue, oldValue)) {\n        const /** @type {?} */ outputName = propertyToOutputMap[propName];\n        const /** @type {?} */ eventEmitter: EventEmitter<any> = ( /** @type {?} */((this as any)))[outputName];\n\n        eventEmitter.emit(newValue);\n        twoWayBoundLastValues[idx] = newValue;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (isFunction(this.unregisterDoCheckWatcher)) {\n      this.unregisterDoCheckWatcher();\n    }\n    if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n      this.controllerInstance.$onDestroy();\n    }\n    this.$componentScope.$destroy();\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getDirective(name: string): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = this.$injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const /** @type {?} */ directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    if (directive.compile) this.notSupported('compile');\n    const /** @type {?} */ link = directive.link;\n    // QUESTION: why not support link.post?\n    if (typeof link == 'object') {\n      if (( /** @type {?} */((<angular.IDirectivePrePost>link))).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\nprivate getDirectiveRequire(directive: angular.IDirective): angular.DirectiveRequireProperty {\n    const /** @type {?} */ require = directive.require || (directive.controller && directive.name);\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const /** @type {?} */ value = require[key];\n        const /** @type {?} */ match = value.match(REQUIRE_PREFIX_RE);\n        const /** @type {?} */ name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\nprivate initializeBindings(directive: angular.IDirective) {\n    const /** @type {?} */ btcIsObject = typeof directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time is not supported.`);\n    }\n\n    const /** @type {?} */ context = (btcIsObject) ? directive.bindToController : directive.scope;\n    const /** @type {?} */ bindings = new Bindings();\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const /** @type {?} */ definition = context[propName];\n        const /** @type {?} */ bindingType = definition.charAt(0);\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            // We don't need to do anything special. They will be defined as inputs on the\n            // upgraded component facade and the change propagation will be handled by\n            // `ngOnChanges()`.\n            break;\n          case '=':\n            bindings.twoWayBoundProperties.push(propName);\n            bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n            bindings.propertyToOutputMap[propName] = propName + 'Change';\n            break;\n          case '&':\n            bindings.expressionBoundProperties.push(propName);\n            bindings.propertyToOutputMap[propName] = propName;\n            break;\n          default:\n            let /** @type {?} */ json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n\n    return bindings;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\nprivate compileTemplate(directive: angular.IDirective): angular.ILinkFn {\n    if (this.directive.template !== undefined) {\n      return this.compileHtml(getOrCall(this.directive.template));\n    } else if (this.directive.templateUrl) {\n      const /** @type {?} */ url = getOrCall(this.directive.templateUrl);\n      const /** @type {?} */ html = /** @type {?} */(( this.$templateCache.get(url) as string));\n      if (html !== undefined) {\n        return this.compileHtml(html);\n      } else {\n        throw new Error('loading directive templates asynchronously is not supported');\n        // return new Promise((resolve, reject) => {\n        //   this.$httpBackend('GET', url, null, (status: number, response: string) => {\n        //     if (status == 200) {\n        //       resolve(this.compileHtml(this.$templateCache.put(url, response)));\n        //     } else {\n        //       reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n        //     }\n        //   });\n        // });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n  }\n/**\n * @param {?} controllerType\n * @param {?} $scope\n * @param {?} $element\n * @param {?} controllerAs\n * @return {?}\n */\nprivate buildController(\n      controllerType: angular.IController, $scope: angular.IScope,\n      $element: angular.IAugmentedJQuery, controllerAs: string) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance\n    const /** @type {?} */ locals = {$scope, $element};\n    const /** @type {?} */ controller = this.$controller(controllerType, locals, null, controllerAs);\n    $element.data(controllerKey(this.directive.name), controller);\n    return controller;\n  }\n/**\n * @param {?} directiveName\n * @param {?} $element\n * @param {?} require\n * @return {?}\n */\nprivate resolveRequire(\n      directiveName: string, $element: angular.IAugmentedJQuery,\n      require: angular.DirectiveRequireProperty): angular.SingleOrListOrMap<IControllerInstance> {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(directiveName, $element, req));\n    } else if (typeof require === 'object') {\n      const /** @type {?} */ value: {[key: string]: IControllerInstance} = {};\n\n      Object.keys(require).forEach(\n          key => value[key] = this.resolveRequire(directiveName, $element, require[key]));\n\n      return value;\n    } else if (typeof require === 'string') {\n      const /** @type {?} */ match = require.match(REQUIRE_PREFIX_RE);\n      const /** @type {?} */ inheritType = match[1] || match[3];\n\n      const /** @type {?} */ name = require.substring(match[0].length);\n      const /** @type {?} */ isOptional = !!match[2];\n      const /** @type {?} */ searchParents = !!inheritType;\n      const /** @type {?} */ startOnParent = inheritType === '^^';\n\n      const /** @type {?} */ ctrlKey = controllerKey(name);\n\n      if (startOnParent) {\n        $element = $element.parent();\n      }\n\n      const /** @type {?} */ value = searchParents ? $element.inheritedData(ctrlKey) : $element.data(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${directiveName}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized require syntax on upgraded directive '${directiveName}': ${require}`);\n    }\n  }\n/**\n * @return {?}\n */\nprivate setupOutputs() {\n    // Set up the outputs for `=` bindings\n    this.bindings.twoWayBoundProperties.forEach(propName => {\n      const /** @type {?} */ outputName = this.bindings.propertyToOutputMap[propName];\n      ( /** @type {?} */((this as any)))[outputName] = new EventEmitter();\n    });\n\n    // Set up the outputs for `&` bindings\n    this.bindings.expressionBoundProperties.forEach(propName => {\n      const /** @type {?} */ outputName = this.bindings.propertyToOutputMap[propName];\n      const /** @type {?} */ emitter = ( /** @type {?} */((this as any)))[outputName] = new EventEmitter();\n\n      // QUESTION: Do we want the ng1 component to call the function with `<value>` or with\n      //           `{$event: <value>}`. The former is closer to ng2, the latter to ng1.\n      this.bindingDestination[propName] = (value: any) => emitter.emit(value);\n    });\n  }\n/**\n * @param {?} feature\n * @return {?}\n */\nprivate notSupported(feature: string) {\n    throw new Error(\n        `Upgraded directive '${this.name}' contains unsupported feature: '${feature}'.`);\n  }\n/**\n * @param {?} html\n * @return {?}\n */\nprivate compileHtml(html: string): angular.ILinkFn {\n    const /** @type {?} */ div = document.createElement('div');\n    div.innerHTML = html;\n    return this.$compile(div.childNodes);\n  }\n}\n\nfunction UpgradeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeComponent.prototype.$injector;\n/** @type {?} */\nUpgradeComponent.prototype.$compile;\n/** @type {?} */\nUpgradeComponent.prototype.$templateCache;\n/** @type {?} */\nUpgradeComponent.prototype.$httpBackend;\n/** @type {?} */\nUpgradeComponent.prototype.$controller;\n/** @type {?} */\nUpgradeComponent.prototype.element;\n/** @type {?} */\nUpgradeComponent.prototype.$element;\n/** @type {?} */\nUpgradeComponent.prototype.$componentScope;\n/** @type {?} */\nUpgradeComponent.prototype.directive;\n/** @type {?} */\nUpgradeComponent.prototype.bindings;\n/** @type {?} */\nUpgradeComponent.prototype.linkFn;\n/** @type {?} */\nUpgradeComponent.prototype.controllerInstance;\n/** @type {?} */\nUpgradeComponent.prototype.bindingDestination;\n/** @type {?} */\nUpgradeComponent.prototype.unregisterDoCheckWatcher;\n/** @type {?} */\nUpgradeComponent.prototype.name;\n/** @type {?} */\nUpgradeComponent.prototype.elementRef;\n/** @type {?} */\nUpgradeComponent.prototype.injector;\n}\n\n/**\n * @param {?} property\n * @return {?}\n */\nfunction getOrCall<T>(property: Function | T): T {\n  return isFunction(property) ? property() : property;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n"]}
{"version":3,"file":"upgrade_component.js","sourceRoot":"","sources":["../../../../../modules/@angular/upgrade/src/aot/upgrade_component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DoCheck, ElementRef, EventEmitter, Injector, OnChanges, OnDestroy, OnInit, SimpleChanges} from '@angular/core/index';\n\nimport * as angular from '../angular_js';\nimport {looseIdentical} from '../facade/lang';\nimport {controllerKey} from '../util';\n\nimport {$COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $SCOPE, $TEMPLATE_CACHE} from './constants';\n\nconst /** @type {?} */ REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\nconst /** @type {?} */ NOT_SUPPORTED: any = 'NOT_SUPPORTED';\nconst /** @type {?} */ INITIAL_VALUE = {\n  __UNINITIALIZED__: true\n};\nclass Bindings {\n  twoWayBoundProperties: string[] = [];\n  twoWayBoundLastValues: any[] = [];\n\n  expressionBoundProperties: string[] = [];\n\n  propertyToOutputMap: {[propName: string]: string} = {};\n}\n\nfunction Bindings_tsickle_Closure_declarations() {\n/** @type {?} */\nBindings.prototype.twoWayBoundProperties;\n/** @type {?} */\nBindings.prototype.twoWayBoundLastValues;\n/** @type {?} */\nBindings.prototype.expressionBoundProperties;\n/** @type {?} */\nBindings.prototype.propertyToOutputMap;\n}\n\n\ninterface IBindingDestination {\n  [key: string]: any;\n  $onChanges?: (changes: SimpleChanges) => void;\n}\n\ninterface IControllerInstance extends IBindingDestination {\n  $doCheck?: () => void;\n  $onDestroy?: () => void;\n  $onInit?: () => void;\n  $postLink?: () => void;\n}\n\ntype LifecycleHook = '$doCheck' | '$onChanges' | '$onDestroy' | '$onInit' | '$postLink';\n/**\n * \\@whatItDoes \n * \n * *Part of the [upgrade/static](/docs/ts/latest/api/#!?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n * \n * Allows an Angular 1 component to be used from Angular 2+.\n * \n * \\@howToUse \n * \n * Let's assume that you have an Angular 1 component called `ng1Hero` that needs\n * to be made available in Angular 2+ templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n * \n * We must create a {\\@link Directive} that will make this Angular 1 component\n * available inside Angular 2+ templates.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n * \n * In this example you can see that we must derive from the {\\@link UpgradeComponent}\n * base class but also provide an {\\@link Directive `\\@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n * \n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the Angular 1 component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the Angular 1 name of the component (`ng1Hero`)\n *   * the {\\@link ElementRef} and {\\@link Injector} for the component wrapper\n * \n * \\@description \n * \n * A helper class that should be used as a base class for creating Angular directives\n * that wrap Angular 1 components that need to be \"upgraded\".\n * \n * \\@experimental\n */\nexport class UpgradeComponent implements OnInit, OnChanges, DoCheck, OnDestroy {\nprivate $injector: angular.IInjectorService;\nprivate $compile: angular.ICompileService;\nprivate $templateCache: angular.ITemplateCacheService;\nprivate $httpBackend: angular.IHttpBackendService;\nprivate $controller: angular.IControllerService;\nprivate element: Element;\nprivate $element: angular.IAugmentedJQuery;\nprivate $componentScope: angular.IScope;\nprivate directive: angular.IDirective;\nprivate bindings: Bindings;\nprivate linkFn: angular.ILinkFn;\nprivate controllerInstance: IControllerInstance = null;\nprivate bindingDestination: IBindingDestination = null;\n/**\n * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n * Instead you should derive a new class from this one and call the super constructor\n * from the base class.\n * \n * {\\@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\" }\n * \n * * The `name` parameter should be the name of the Angular 1 directive.\n * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n *   injection into the base class constructor.\n * \n * Note that we must manually implement lifecycle hooks that call through to the super class.\n * This is because, at the moment, the AoT compiler is not able to tell that the\n * `UpgradeComponent`\n * already implements them and so does not wire up calls to them at runtime.\n * @param {?} name\n * @param {?} elementRef\n * @param {?} injector\n */\nconstructor(private name: string,\nprivate elementRef: ElementRef,\nprivate injector: Injector) {\n    this.$injector = injector.get($INJECTOR);\n    this.$compile = this.$injector.get($COMPILE);\n    this.$templateCache = this.$injector.get($TEMPLATE_CACHE);\n    this.$httpBackend = this.$injector.get($HTTP_BACKEND);\n    this.$controller = this.$injector.get($CONTROLLER);\n\n    this.element = elementRef.nativeElement;\n    this.$element = angular.element(this.element);\n\n    this.directive = this.getDirective(name);\n    this.bindings = this.initializeBindings(this.directive);\n    this.linkFn = this.compileTemplate(this.directive);\n\n    // We ask for the Angular 1 scope from the Angular 2+ injector, since\n    // we will put the new component scope onto the new injector for each component\n    const $parentScope = injector.get($SCOPE);\n    // QUESTION 1: Should we create an isolated scope if the scope is only true?\n    // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n    this.$componentScope = $parentScope.$new(!!this.directive.scope);\n\n    const controllerType = this.directive.controller;\n    const bindToController = this.directive.bindToController;\n    if (controllerType) {\n      this.controllerInstance = this.buildController(\n          controllerType, this.$componentScope, this.$element, this.directive.controllerAs);\n    } else if (bindToController) {\n      throw new Error(\n          `Upgraded directive '${name}' specifies 'bindToController' but no controller.`);\n    }\n\n    this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n\n    this.setupOutputs();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    const /** @type {?} */ attrs: angular.IAttributes = NOT_SUPPORTED;\n    const /** @type {?} */ transcludeFn: angular.ITranscludeFunction = NOT_SUPPORTED;\n    const /** @type {?} */ directiveRequire = this.getDirectiveRequire(this.directive);\n    const /** @type {?} */ requiredControllers =\n        this.resolveRequire(this.directive.name, this.$element, directiveRequire);\n\n    if (this.directive.bindToController && isMap(directiveRequire)) {\n      const /** @type {?} */ requiredControllersMap = /** @type {?} */(( requiredControllers as{[key: string]: IControllerInstance}));\n      Object.keys(requiredControllersMap).forEach(key => {\n        this.controllerInstance[key] = requiredControllersMap[key];\n      });\n    }\n\n    this.callLifecycleHook('$onInit', this.controllerInstance);\n\n    if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n      const /** @type {?} */ callDoCheck = () => this.callLifecycleHook('$doCheck', this.controllerInstance);\n\n      this.$componentScope.$parent.$watch(callDoCheck);\n      callDoCheck();\n    }\n\n    const /** @type {?} */ link = this.directive.link;\n    const /** @type {?} */ preLink = (typeof link == 'object') && ( /** @type {?} */((link as angular.IDirectivePrePost))).pre;\n    const /** @type {?} */ postLink = (typeof link == 'object') ? ( /** @type {?} */((link as angular.IDirectivePrePost))).post : link;\n    if (preLink) {\n      preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    const /** @type {?} */ childNodes: Node[] = [];\n    let /** @type {?} */ childNode: Node;\n    while (childNode = this.element.firstChild) {\n      this.element.removeChild(childNode);\n      childNodes.push(childNode);\n    }\n\n    const /** @type {?} */ attachElement: angular.ICloneAttachFunction =\n        (clonedElements, scope) => { this.$element.append(clonedElements); };\n    const /** @type {?} */ attachChildNodes: angular.ILinkFn = (scope, cloneAttach) => cloneAttach(childNodes);\n\n    this.linkFn(this.$componentScope, attachElement, {parentBoundTranscludeFn: attachChildNodes});\n\n    if (postLink) {\n      postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n    }\n\n    this.callLifecycleHook('$postLink', this.controllerInstance);\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    // Forward input changes to `bindingDestination`\n    Object.keys(changes).forEach(\n        propName => this.bindingDestination[propName] = changes[propName].currentValue);\n\n    this.callLifecycleHook('$onChanges', this.bindingDestination, changes);\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    const /** @type {?} */ twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n    const /** @type {?} */ twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n    const /** @type {?} */ propertyToOutputMap = this.bindings.propertyToOutputMap;\n\n    twoWayBoundProperties.forEach((propName, idx) => {\n      const /** @type {?} */ newValue = this.bindingDestination[propName];\n      const /** @type {?} */ oldValue = twoWayBoundLastValues[idx];\n\n      if (!looseIdentical(newValue, oldValue)) {\n        const /** @type {?} */ outputName = propertyToOutputMap[propName];\n        const /** @type {?} */ eventEmitter: EventEmitter<any> = ( /** @type {?} */((this as any)))[outputName];\n\n        eventEmitter.emit(newValue);\n        twoWayBoundLastValues[idx] = newValue;\n      }\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.callLifecycleHook('$onDestroy', this.controllerInstance);\n    this.$componentScope.$destroy();\n  }\n/**\n * @param {?} method\n * @param {?} context\n * @param {?=} arg\n * @return {?}\n */\nprivate callLifecycleHook(method: LifecycleHook, context: IBindingDestination, arg?: any) {\n    if (context && isFunction(context[method])) {\n      context[method](arg);\n    }\n  }\n/**\n * @param {?} name\n * @return {?}\n */\nprivate getDirective(name: string): angular.IDirective {\n    const /** @type {?} */ directives: angular.IDirective[] = this.$injector.get(name + 'Directive');\n    if (directives.length > 1) {\n      throw new Error('Only support single directive definition for: ' + this.name);\n    }\n    const /** @type {?} */ directive = directives[0];\n    if (directive.replace) this.notSupported('replace');\n    if (directive.terminal) this.notSupported('terminal');\n    if (directive.compile) this.notSupported('compile');\n    const /** @type {?} */ link = directive.link;\n    // QUESTION: why not support link.post?\n    if (typeof link == 'object') {\n      if (( /** @type {?} */((<angular.IDirectivePrePost>link))).post) this.notSupported('link.post');\n    }\n    return directive;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\nprivate getDirectiveRequire(directive: angular.IDirective): angular.DirectiveRequireProperty {\n    const /** @type {?} */ require = directive.require || (directive.controller && directive.name);\n\n    if (isMap(require)) {\n      Object.keys(require).forEach(key => {\n        const /** @type {?} */ value = require[key];\n        const /** @type {?} */ match = value.match(REQUIRE_PREFIX_RE);\n        const /** @type {?} */ name = value.substring(match[0].length);\n\n        if (!name) {\n          require[key] = match[0] + key;\n        }\n      });\n    }\n\n    return require;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\nprivate initializeBindings(directive: angular.IDirective) {\n    const /** @type {?} */ btcIsObject = typeof directive.bindToController === 'object';\n    if (btcIsObject && Object.keys(directive.scope).length) {\n      throw new Error(\n          `Binding definitions on scope and controller at the same time is not supported.`);\n    }\n\n    const /** @type {?} */ context = (btcIsObject) ? directive.bindToController : directive.scope;\n    const /** @type {?} */ bindings = new Bindings();\n\n    if (typeof context == 'object') {\n      Object.keys(context).forEach(propName => {\n        const /** @type {?} */ definition = context[propName];\n        const /** @type {?} */ bindingType = definition.charAt(0);\n\n        // QUESTION: What about `=*`? Ignore? Throw? Support?\n\n        switch (bindingType) {\n          case '@':\n          case '<':\n            // We don't need to do anything special. They will be defined as inputs on the\n            // upgraded component facade and the change propagation will be handled by\n            // `ngOnChanges()`.\n            break;\n          case '=':\n            bindings.twoWayBoundProperties.push(propName);\n            bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n            bindings.propertyToOutputMap[propName] = propName + 'Change';\n            break;\n          case '&':\n            bindings.expressionBoundProperties.push(propName);\n            bindings.propertyToOutputMap[propName] = propName;\n            break;\n          default:\n            let /** @type {?} */ json = JSON.stringify(context);\n            throw new Error(\n                `Unexpected mapping '${bindingType}' in '${json}' in '${this.name}' directive.`);\n        }\n      });\n    }\n\n    return bindings;\n  }\n/**\n * @param {?} directive\n * @return {?}\n */\nprivate compileTemplate(directive: angular.IDirective): angular.ILinkFn {\n    if (this.directive.template !== undefined) {\n      return this.compileHtml(getOrCall(this.directive.template));\n    } else if (this.directive.templateUrl) {\n      const /** @type {?} */ url = getOrCall(this.directive.templateUrl);\n      const /** @type {?} */ html = /** @type {?} */(( this.$templateCache.get(url) as string));\n      if (html !== undefined) {\n        return this.compileHtml(html);\n      } else {\n        throw new Error('loading directive templates asynchronously is not supported');\n        // return new Promise((resolve, reject) => {\n        //   this.$httpBackend('GET', url, null, (status: number, response: string) => {\n        //     if (status == 200) {\n        //       resolve(this.compileHtml(this.$templateCache.put(url, response)));\n        //     } else {\n        //       reject(`GET component template from '${url}' returned '${status}: ${response}'`);\n        //     }\n        //   });\n        // });\n      }\n    } else {\n      throw new Error(`Directive '${this.name}' is not a component, it is missing template.`);\n    }\n  }\n/**\n * @param {?} controllerType\n * @param {?} $scope\n * @param {?} $element\n * @param {?} controllerAs\n * @return {?}\n */\nprivate buildController(\n      controllerType: angular.IController, $scope: angular.IScope,\n      $element: angular.IAugmentedJQuery, controllerAs: string) {\n    // TODO: Document that we do not pre-assign bindings on the controller instance\n    const /** @type {?} */ locals = {$scope, $element};\n    const /** @type {?} */ controller = this.$controller(controllerType, locals, null, controllerAs);\n    $element.data(controllerKey(this.directive.name), controller);\n    return controller;\n  }\n/**\n * @param {?} directiveName\n * @param {?} $element\n * @param {?} require\n * @return {?}\n */\nprivate resolveRequire(\n      directiveName: string, $element: angular.IAugmentedJQuery,\n      require: angular.DirectiveRequireProperty): angular.SingleOrListOrMap<IControllerInstance> {\n    if (!require) {\n      return null;\n    } else if (Array.isArray(require)) {\n      return require.map(req => this.resolveRequire(directiveName, $element, req));\n    } else if (typeof require === 'object') {\n      const /** @type {?} */ value: {[key: string]: IControllerInstance} = {};\n\n      Object.keys(require).forEach(\n          key => value[key] = this.resolveRequire(directiveName, $element, require[key]));\n\n      return value;\n    } else if (typeof require === 'string') {\n      const /** @type {?} */ match = require.match(REQUIRE_PREFIX_RE);\n      const /** @type {?} */ inheritType = match[1] || match[3];\n\n      const /** @type {?} */ name = require.substring(match[0].length);\n      const /** @type {?} */ isOptional = !!match[2];\n      const /** @type {?} */ searchParents = !!inheritType;\n      const /** @type {?} */ startOnParent = inheritType === '^^';\n\n      const /** @type {?} */ ctrlKey = controllerKey(name);\n\n      if (startOnParent) {\n        $element = $element.parent();\n      }\n\n      const /** @type {?} */ value = searchParents ? $element.inheritedData(ctrlKey) : $element.data(ctrlKey);\n\n      if (!value && !isOptional) {\n        throw new Error(\n            `Unable to find required '${require}' in upgraded directive '${directiveName}'.`);\n      }\n\n      return value;\n    } else {\n      throw new Error(\n          `Unrecognized require syntax on upgraded directive '${directiveName}': ${require}`);\n    }\n  }\n/**\n * @return {?}\n */\nprivate setupOutputs() {\n    // Set up the outputs for `=` bindings\n    this.bindings.twoWayBoundProperties.forEach(propName => {\n      const /** @type {?} */ outputName = this.bindings.propertyToOutputMap[propName];\n      ( /** @type {?} */((this as any)))[outputName] = new EventEmitter();\n    });\n\n    // Set up the outputs for `&` bindings\n    this.bindings.expressionBoundProperties.forEach(propName => {\n      const /** @type {?} */ outputName = this.bindings.propertyToOutputMap[propName];\n      const /** @type {?} */ emitter = ( /** @type {?} */((this as any)))[outputName] = new EventEmitter();\n\n      // QUESTION: Do we want the ng1 component to call the function with `<value>` or with\n      //           `{$event: <value>}`. The former is closer to ng2, the latter to ng1.\n      this.bindingDestination[propName] = (value: any) => emitter.emit(value);\n    });\n  }\n/**\n * @param {?} feature\n * @return {?}\n */\nprivate notSupported(feature: string) {\n    throw new Error(\n        `Upgraded directive '${this.name}' contains unsupported feature: '${feature}'.`);\n  }\n/**\n * @param {?} html\n * @return {?}\n */\nprivate compileHtml(html: string): angular.ILinkFn {\n    const /** @type {?} */ div = document.createElement('div');\n    div.innerHTML = html;\n    return this.$compile(div.childNodes);\n  }\n}\n\nfunction UpgradeComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nUpgradeComponent.prototype.$injector;\n/** @type {?} */\nUpgradeComponent.prototype.$compile;\n/** @type {?} */\nUpgradeComponent.prototype.$templateCache;\n/** @type {?} */\nUpgradeComponent.prototype.$httpBackend;\n/** @type {?} */\nUpgradeComponent.prototype.$controller;\n/** @type {?} */\nUpgradeComponent.prototype.element;\n/** @type {?} */\nUpgradeComponent.prototype.$element;\n/** @type {?} */\nUpgradeComponent.prototype.$componentScope;\n/** @type {?} */\nUpgradeComponent.prototype.directive;\n/** @type {?} */\nUpgradeComponent.prototype.bindings;\n/** @type {?} */\nUpgradeComponent.prototype.linkFn;\n/** @type {?} */\nUpgradeComponent.prototype.controllerInstance;\n/** @type {?} */\nUpgradeComponent.prototype.bindingDestination;\n/** @type {?} */\nUpgradeComponent.prototype.name;\n/** @type {?} */\nUpgradeComponent.prototype.elementRef;\n/** @type {?} */\nUpgradeComponent.prototype.injector;\n}\n\n/**\n * @param {?} property\n * @return {?}\n */\nfunction getOrCall<T>(property: Function | T): T {\n  return isFunction(property) ? property() : property;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFunction(value: any): value is Function {\n  return typeof value === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isMap<T>(value: angular.SingleOrListOrMap<T>): value is {[key: string]: T} {\n  return value && !Array.isArray(value) && typeof value === 'object';\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
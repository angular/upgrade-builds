{"version":3,"sources":["../../../../../modules/@angular/upgrade/src/common/component_info.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AASH;;;;;GAKG;AACH,MACC;IAQD;;OAEG;IACH,YADqB,OAAS;QAAT,YAAA,GAAA,OAAA,CAAS;QAAO,IAAA,CAAA,YAAA,EAAA,CAAA;IAAA,CAAA;IAErC;;OAEG;IAFA,YAAA;QAIC,MAAM,gBAAgB,CAHhB,KAAA,GAAQ,IAAA,CAAK,OAAC,CAAO,KAAC,CAAK,GAAC,CAAG,CAAC;QAItC,IAAI,CAHC,IAAC,GAAM,KAAA,CAAM,CAAC,CAAC,CAAC,IAAC,EAAI,CAAE;QAI5B,IAAI,CAHC,IAAC,GAAM,CAAA,KAAE,CAAK,CAAC,CAAC,IAAI,IAAA,CAAK,IAAC,CAAI,CAAC,IAAC,EAAI,CAAE;QAI3C,IAAI,CAHC,WAAC,GAAa,IAAA,IAAK,CAAI,IAAC,GAAI,CAAG;QAIpC,IAAI,CAHC,SAAC,GAAW,IAAA,IAAK,CAAI,IAAC,GAAI,CAAG;QAIlC,IAAI,CAHC,gBAAC,GAAkB,KAAA,IAAM,CAAI,IAAC,IAAI,CAAI;QAI3C,MAAM,gBAAgB,CAHhB,WAAA,GAAc,IAAA,CAAK,IAAC,CAAI,MAAC,CAAM,CAAC,CAAC,CAAC,WAAC,EAAW,GAAI,IAAA,CAAK,IAAC,CAAI,MAAC,CAAM,CAAC,CAAC,CAAC;QAI5E,IAAI,CAHC,MAAC,GAAQ,KAAA,WAAM,EAAW,CAAE;QAIjC,IAAI,CAHC,QAAC,GAAU,OAAA,WAAQ,EAAW,CAAE;QAIrC,IAAI,CAHC,UAAC,GAAY,SAAA,WAAU,EAAW,CAAE;IAI3C,CAAC;CACF;AAED;IACA,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC;IAC/B,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,WAAW,CAAC;IACtC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,gBAAgB,CAAC;IAC3C,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC;IACpC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC;IACjC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC;IACnC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,UAAU,CAAC;IACrC,gBAAgB;IAChB,eAAe,CAAC,SAAS,CAAC,OAAO,CAAC;AAClC,CAAC","file":"component_info.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Type} from '@angular/core/index';\n\nexport interface ComponentInfo {\n  component: Type<any>;\n  inputs?: string[];\n  outputs?: string[];\n}\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport class PropertyBinding {\n  prop: string;\n  attr: string;\n  bracketAttr: string;\n  bracketParenAttr: string;\n  parenAttr: string;\n  onAttr: string;\n  bindAttr: string;\n  bindonAttr: string;\n/**\n * @param {?} binding\n */\nconstructor(public binding: string) { this.parseBinding(); }\n/**\n * @return {?}\n */\nprivate parseBinding() {\n    const /** @type {?} */ parts = this.binding.split(':');\n    this.prop = parts[0].trim();\n    this.attr = (parts[1] || this.prop).trim();\n    this.bracketAttr = `[${this.attr}]`;\n    this.parenAttr = `(${this.attr})`;\n    this.bracketParenAttr = `[(${this.attr})]`;\n    const /** @type {?} */ capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n    this.onAttr = `on${capitalAttr}`;\n    this.bindAttr = `bind${capitalAttr}`;\n    this.bindonAttr = `bindon${capitalAttr}`;\n  }\n}\n\nfunction PropertyBinding_tsickle_Closure_declarations() {\n/** @type {?} */\nPropertyBinding.prototype.prop;\n/** @type {?} */\nPropertyBinding.prototype.attr;\n/** @type {?} */\nPropertyBinding.prototype.bracketAttr;\n/** @type {?} */\nPropertyBinding.prototype.bracketParenAttr;\n/** @type {?} */\nPropertyBinding.prototype.parenAttr;\n/** @type {?} */\nPropertyBinding.prototype.onAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindAttr;\n/** @type {?} */\nPropertyBinding.prototype.bindonAttr;\n/** @type {?} */\nPropertyBinding.prototype.binding;\n}\n\n"]}